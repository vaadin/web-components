{"version":3,"file":"vaadin-quill.js","mappings":"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","sources":["webpack://Quill/webpack/universalModuleDefinition","webpack://Quill/./src/blots/block.ts","webpack://Quill/./src/blots/break.ts","webpack://Quill/./src/blots/container.ts","webpack://Quill/./src/blots/cursor.ts","webpack://Quill/./src/blots/embed.ts","webpack://Quill/./src/blots/inline.ts","webpack://Quill/./src/blots/text.ts","webpack://Quill/./src/blots/scroll.ts","webpack://Quill/./src/modules/history.ts","webpack://Quill/./src/modules/uploader.ts","webpack://Quill/./src/modules/input.ts","webpack://Quill/./src/modules/uiNode.ts","webpack://Quill/./src/core.ts","webpack://Quill/../../node_modules/@electrovir/eventemitter3/dist/index.js","webpack://Quill/./src/core/emitter.ts","webpack://Quill/./src/core/logger.ts","webpack://Quill/./src/core/module.ts","webpack://Quill/./src/core/editor.ts","webpack://Quill/./src/core/instances.ts","webpack://Quill/./src/core/composition.ts","webpack://Quill/./src/core/utils/scrollRectIntoView.ts","webpack://Quill/./src/core/utils/createRegistryWithFormats.ts","webpack://Quill/./src/core/quill.ts","webpack://Quill/./src/core/selection.ts","webpack://Quill/./src/core/theme.ts","webpack://Quill/./src/core/utils/cloneDeep.ts","webpack://Quill/./src/core/utils/isEqual.ts","webpack://Quill/./src/formats/align.ts","webpack://Quill/./src/formats/background.ts","webpack://Quill/./src/formats/code.ts","webpack://Quill/./src/formats/color.ts","webpack://Quill/./src/formats/direction.ts","webpack://Quill/./src/formats/font.ts","webpack://Quill/./src/formats/size.ts","webpack://Quill/./src/modules/normalizeExternalHTML/normalizers/googleDocs.ts","webpack://Quill/./src/modules/normalizeExternalHTML/normalizers/msWord.ts","webpack://Quill/./src/modules/normalizeExternalHTML/index.ts","webpack://Quill/./src/modules/clipboard.ts","webpack://Quill/./src/modules/keyboard.ts","webpack://Quill/../../node_modules/quill-delta-es/dist/index.mjs","webpack://Quill/../../node_modules/parchment/src/scope.ts","webpack://Quill/../../node_modules/parchment/src/attributor/attributor.ts","webpack://Quill/../../node_modules/parchment/src/error.ts","webpack://Quill/../../node_modules/parchment/src/registry.ts","webpack://Quill/../../node_modules/parchment/src/attributor/class.ts","webpack://Quill/../../node_modules/parchment/src/attributor/style.ts","webpack://Quill/../../node_modules/parchment/src/attributor/store.ts","webpack://Quill/../../node_modules/parchment/src/blot/abstract/shadow.ts","webpack://Quill/../../node_modules/parchment/src/blot/abstract/leaf.ts","webpack://Quill/../../node_modules/parchment/src/collection/linked-list.ts","webpack://Quill/../../node_modules/parchment/src/blot/abstract/parent.ts","webpack://Quill/../../node_modules/parchment/src/blot/inline.ts","webpack://Quill/../../node_modules/parchment/src/blot/block.ts","webpack://Quill/../../node_modules/parchment/src/blot/abstract/container.ts","webpack://Quill/../../node_modules/parchment/src/blot/embed.ts","webpack://Quill/../../node_modules/parchment/src/blot/scroll.ts","webpack://Quill/../../node_modules/parchment/src/blot/text.ts","webpack://Quill/webpack/bootstrap","webpack://Quill/webpack/runtime/define property getters","webpack://Quill/webpack/runtime/hasOwnProperty shorthand","webpack://Quill/webpack/runtime/make namespace object","webpack://Quill/./src/formats/indent.ts","webpack://Quill/./src/formats/blockquote.ts","webpack://Quill/./src/formats/header.ts","webpack://Quill/./src/formats/list.ts","webpack://Quill/./src/formats/bold.ts","webpack://Quill/./src/formats/link.ts","webpack://Quill/./src/formats/script.ts","webpack://Quill/./src/formats/underline.ts","webpack://Quill/./src/formats/image.ts","webpack://Quill/./src/formats/video.ts","webpack://Quill/./src/modules/toolbar.ts","webpack://Quill/./src/vaadin-quill.ts","webpack://Quill/./src/formats/italic.ts","webpack://Quill/./src/formats/strike.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Quill\"] = factory();\n\telse\n\t\troot[\"Quill\"] = factory();\n})(self, function() {\nreturn ","import {\n  AttributorStore,\n  BlockBlot,\n  EmbedBlot,\n  LeafBlot,\n  Scope,\n} from 'parchment';\nimport type { Blot, Parent } from 'parchment';\nimport Delta from 'quill-delta-es';\nimport Break from './break.js';\nimport Inline from './inline.js';\nimport TextBlot from './text.js';\n\nconst NEWLINE_LENGTH = 1;\n\nclass Block extends BlockBlot {\n  cache: { delta?: Delta | null; length?: number } = {};\n\n  delta(): Delta {\n    if (this.cache.delta == null) {\n      this.cache.delta = blockDelta(this);\n    }\n    return this.cache.delta;\n  }\n\n  deleteAt(index: number, length: number) {\n    super.deleteAt(index, length);\n    this.cache = {};\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    if (length <= 0) return;\n    if (this.scroll.query(name, Scope.BLOCK)) {\n      if (index + length === this.length()) {\n        this.format(name, value);\n      }\n    } else {\n      super.formatAt(\n        index,\n        Math.min(length, this.length() - index - 1),\n        name,\n        value,\n      );\n    }\n    this.cache = {};\n  }\n\n  insertAt(index: number, value: string, def?: unknown) {\n    if (def != null) {\n      super.insertAt(index, value, def);\n      this.cache = {};\n      return;\n    }\n    if (value.length === 0) return;\n    const lines = value.split('\\n');\n    const text = lines.shift() as string;\n    if (text.length > 0) {\n      if (index < this.length() - 1 || this.children.tail == null) {\n        super.insertAt(Math.min(index, this.length() - 1), text);\n      } else {\n        this.children.tail.insertAt(this.children.tail.length(), text);\n      }\n      this.cache = {};\n    }\n    // TODO: Fix this next time the file is edited.\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let block: Blot | this = this;\n    lines.reduce((lineIndex, line) => {\n      // @ts-expect-error Fix me later\n      block = block.split(lineIndex, true);\n      block.insertAt(0, line);\n      return line.length;\n    }, index + text.length);\n  }\n\n  insertBefore(blot: Blot, ref?: Blot | null) {\n    const { head } = this.children;\n    super.insertBefore(blot, ref);\n    if (head instanceof Break) {\n      head.remove();\n    }\n    this.cache = {};\n  }\n\n  length() {\n    if (this.cache.length == null) {\n      this.cache.length = super.length() + NEWLINE_LENGTH;\n    }\n    return this.cache.length;\n  }\n\n  moveChildren(target: Parent, ref?: Blot | null) {\n    super.moveChildren(target, ref);\n    this.cache = {};\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    this.cache = {};\n  }\n\n  path(index: number) {\n    return super.path(index, true);\n  }\n\n  removeChild(child: Blot) {\n    super.removeChild(child);\n    this.cache = {};\n  }\n\n  split(index: number, force: boolean | undefined = false): Blot | null {\n    if (force && (index === 0 || index >= this.length() - NEWLINE_LENGTH)) {\n      const clone = this.clone();\n      if (index === 0) {\n        this.parent.insertBefore(clone, this);\n        return this;\n      }\n      this.parent.insertBefore(clone, this.next);\n      return clone;\n    }\n    const next = super.split(index, force);\n    this.cache = {};\n    return next;\n  }\n}\nBlock.blotName = 'block';\nBlock.tagName = 'P';\nBlock.defaultChild = Break;\nBlock.allowedChildren = [Break, Inline, EmbedBlot, TextBlot];\n\nclass BlockEmbed extends EmbedBlot {\n  attributes: AttributorStore;\n  domNode: HTMLElement;\n\n  attach() {\n    super.attach();\n    this.attributes = new AttributorStore(this.domNode);\n  }\n\n  delta() {\n    return new Delta().insert(this.value(), {\n      ...this.formats(),\n      ...this.attributes.values(),\n    });\n  }\n\n  format(name: string, value: unknown) {\n    const attribute = this.scroll.query(name, Scope.BLOCK_ATTRIBUTE);\n    if (attribute != null) {\n      // @ts-expect-error TODO: Scroll#query() should return Attributor when scope is attribute\n      this.attributes.attribute(attribute, value);\n    }\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    this.format(name, value);\n  }\n\n  insertAt(index: number, value: string, def?: unknown) {\n    if (def != null) {\n      super.insertAt(index, value, def);\n      return;\n    }\n    const lines = value.split('\\n');\n    const text = lines.pop();\n    const blocks = lines.map((line) => {\n      const block = this.scroll.create(Block.blotName);\n      block.insertAt(0, line);\n      return block;\n    });\n    const ref = this.split(index);\n    blocks.forEach((block) => {\n      this.parent.insertBefore(block, ref);\n    });\n    if (text) {\n      this.parent.insertBefore(this.scroll.create('text', text), ref);\n    }\n  }\n}\nBlockEmbed.scope = Scope.BLOCK_BLOT;\n// It is important for cursor behavior BlockEmbeds use tags that are block level elements\n\nfunction blockDelta(blot: BlockBlot, filter = true) {\n  return blot\n    .descendants(LeafBlot)\n    .reduce((delta, leaf) => {\n      if (leaf.length() === 0) {\n        return delta;\n      }\n      return delta.insert(leaf.value(), bubbleFormats(leaf, {}, filter));\n    }, new Delta())\n    .insert('\\n', bubbleFormats(blot));\n}\n\nfunction bubbleFormats(\n  blot: Blot | null,\n  formats: Record<string, unknown> = {},\n  filter = true,\n): Record<string, unknown> {\n  if (blot == null) return formats;\n  if ('formats' in blot && typeof blot.formats === 'function') {\n    formats = {\n      ...formats,\n      ...blot.formats(),\n    };\n    if (filter) {\n      // exclude syntax highlighting from deltas and getFormat()\n      delete formats['code-token'];\n    }\n  }\n  if (\n    blot.parent == null ||\n    blot.parent.statics.blotName === 'scroll' ||\n    blot.parent.statics.scope !== blot.statics.scope\n  ) {\n    return formats;\n  }\n  return bubbleFormats(blot.parent, formats, filter);\n}\n\nexport { blockDelta, bubbleFormats, BlockEmbed, Block as default };\n","import { EmbedBlot } from 'parchment';\n\nclass Break extends EmbedBlot {\n  static value() {\n    return undefined;\n  }\n\n  optimize() {\n    if (this.prev || this.next) {\n      this.remove();\n    }\n  }\n\n  length() {\n    return 0;\n  }\n\n  value() {\n    return '';\n  }\n}\nBreak.blotName = 'break';\nBreak.tagName = 'BR';\n\nexport default Break;\n","import { ContainerBlot } from 'parchment';\n\nclass Container extends ContainerBlot {}\n\nexport default Container;\n","import { EmbedBlot, Scope } from 'parchment';\nimport type { Parent, ScrollBlot } from 'parchment';\nimport type Selection from '../core/selection.js';\nimport TextBlot from './text.js';\nimport type { EmbedContextRange } from './embed.js';\n\nclass Cursor extends EmbedBlot {\n  static blotName = 'cursor';\n  static className = 'ql-cursor';\n  static tagName = 'span';\n  static CONTENTS = '\\uFEFF'; // Zero width no break space\n\n  static value() {\n    return undefined;\n  }\n\n  selection: Selection;\n  textNode: Text;\n  savedLength: number;\n\n  constructor(scroll: ScrollBlot, domNode: HTMLElement, selection: Selection) {\n    super(scroll, domNode);\n    this.selection = selection;\n    this.textNode = document.createTextNode(Cursor.CONTENTS);\n    this.domNode.appendChild(this.textNode);\n    this.savedLength = 0;\n  }\n\n  detach() {\n    // super.detach() will also clear domNode.__blot\n    if (this.parent != null) this.parent.removeChild(this);\n  }\n\n  format(name: string, value: unknown) {\n    if (this.savedLength !== 0) {\n      super.format(name, value);\n      return;\n    }\n    // TODO: Fix this next time the file is edited.\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let target: Parent | this = this;\n    let index = 0;\n    while (target != null && target.statics.scope !== Scope.BLOCK_BLOT) {\n      index += target.offset(target.parent);\n      target = target.parent;\n    }\n    if (target != null) {\n      this.savedLength = Cursor.CONTENTS.length;\n      // @ts-expect-error TODO: allow empty context in Parchment\n      target.optimize();\n      target.formatAt(index, Cursor.CONTENTS.length, name, value);\n      this.savedLength = 0;\n    }\n  }\n\n  index(node: Node, offset: number) {\n    if (node === this.textNode) return 0;\n    return super.index(node, offset);\n  }\n\n  length() {\n    return this.savedLength;\n  }\n\n  position(): [Text, number] {\n    return [this.textNode, this.textNode.data.length];\n  }\n\n  remove() {\n    super.remove();\n    // @ts-expect-error Fix me later\n    this.parent = null;\n  }\n\n  restore(): EmbedContextRange | null {\n    if (this.selection.composing || this.parent == null) return null;\n    const range = this.selection.getNativeRange();\n    // Browser may push down styles/nodes inside the cursor blot.\n    // https://dvcs.w3.org/hg/editing/raw-file/tip/editing.html#push-down-values\n    while (\n      this.domNode.lastChild != null &&\n      this.domNode.lastChild !== this.textNode\n    ) {\n      // @ts-expect-error Fix me later\n      this.domNode.parentNode.insertBefore(\n        this.domNode.lastChild,\n        this.domNode,\n      );\n    }\n\n    const prevTextBlot = this.prev instanceof TextBlot ? this.prev : null;\n    const prevTextLength = prevTextBlot ? prevTextBlot.length() : 0;\n    const nextTextBlot = this.next instanceof TextBlot ? this.next : null;\n    // @ts-expect-error TODO: make TextBlot.text public\n    const nextText = nextTextBlot ? nextTextBlot.text : '';\n    const { textNode } = this;\n    // take text from inside this blot and reset it\n    const newText = textNode.data.split(Cursor.CONTENTS).join('');\n    textNode.data = Cursor.CONTENTS;\n\n    // proactively merge TextBlots around cursor so that optimization\n    // doesn't lose the cursor.  the reason we are here in cursor.restore\n    // could be that the user clicked in prevTextBlot or nextTextBlot, or\n    // the user typed something.\n    let mergedTextBlot;\n    if (prevTextBlot) {\n      mergedTextBlot = prevTextBlot;\n      if (newText || nextTextBlot) {\n        prevTextBlot.insertAt(prevTextBlot.length(), newText + nextText);\n        if (nextTextBlot) {\n          nextTextBlot.remove();\n        }\n      }\n    } else if (nextTextBlot) {\n      mergedTextBlot = nextTextBlot;\n      nextTextBlot.insertAt(0, newText);\n    } else {\n      const newTextNode = document.createTextNode(newText);\n      mergedTextBlot = this.scroll.create(newTextNode);\n      this.parent.insertBefore(mergedTextBlot, this);\n    }\n\n    this.remove();\n    if (range) {\n      // calculate selection to restore\n      const remapOffset = (node: Node, offset: number) => {\n        if (prevTextBlot && node === prevTextBlot.domNode) {\n          return offset;\n        }\n        if (node === textNode) {\n          return prevTextLength + offset - 1;\n        }\n        if (nextTextBlot && node === nextTextBlot.domNode) {\n          return prevTextLength + newText.length + offset;\n        }\n        return null;\n      };\n\n      const start = remapOffset(range.start.node, range.start.offset);\n      const end = remapOffset(range.end.node, range.end.offset);\n      if (start !== null && end !== null) {\n        return {\n          startNode: mergedTextBlot.domNode,\n          startOffset: start,\n          endNode: mergedTextBlot.domNode,\n          endOffset: end,\n        };\n      }\n    }\n    return null;\n  }\n\n  update(mutations: MutationRecord[], context: Record<string, unknown>) {\n    if (\n      mutations.some((mutation) => {\n        return (\n          mutation.type === 'characterData' && mutation.target === this.textNode\n        );\n      })\n    ) {\n      const range = this.restore();\n      if (range) context.range = range;\n    }\n  }\n\n  // Avoid .ql-cursor being a descendant of `<a/>`.\n  // The reason is Safari pushes down `<a/>` on text insertion.\n  // That will cause DOM nodes not sync with the model.\n  //\n  // For example ({I} is the caret), given the markup:\n  //    <a><span class=\"ql-cursor\">\\uFEFF{I}</span></a>\n  // When typing a char \"x\", `<a/>` will be pushed down inside the `<span>` first:\n  //    <span class=\"ql-cursor\"><a>\\uFEFF{I}</a></span>\n  // And then \"x\" will be inserted after `<a/>`:\n  //    <span class=\"ql-cursor\"><a>\\uFEFF</a>d{I}</span>\n  optimize(context?: unknown) {\n    // @ts-expect-error Fix me later\n    super.optimize(context);\n\n    let { parent } = this;\n    while (parent) {\n      if (parent.domNode.tagName === 'A') {\n        this.savedLength = Cursor.CONTENTS.length;\n        // @ts-expect-error TODO: make isolate generic\n        parent.isolate(this.offset(parent), this.length()).unwrap();\n        this.savedLength = 0;\n        break;\n      }\n      parent = parent.parent;\n    }\n  }\n\n  value() {\n    return '';\n  }\n}\n\nexport default Cursor;\n","import type { ScrollBlot } from 'parchment';\nimport { EmbedBlot } from 'parchment';\nimport TextBlot from './text.js';\n\nconst GUARD_TEXT = '\\uFEFF';\n\nexport interface EmbedContextRange {\n  startNode: Node | Text;\n  startOffset: number;\n  endNode?: Node | Text;\n  endOffset?: number;\n}\n\nclass Embed extends EmbedBlot {\n  contentNode: HTMLSpanElement;\n  leftGuard: Text;\n  rightGuard: Text;\n\n  constructor(scroll: ScrollBlot, node: Node) {\n    super(scroll, node);\n    this.contentNode = document.createElement('span');\n    this.contentNode.setAttribute('contenteditable', 'false');\n    Array.from(this.domNode.childNodes).forEach((childNode) => {\n      this.contentNode.appendChild(childNode);\n    });\n    this.leftGuard = document.createTextNode(GUARD_TEXT);\n    this.rightGuard = document.createTextNode(GUARD_TEXT);\n    this.domNode.appendChild(this.leftGuard);\n    this.domNode.appendChild(this.contentNode);\n    this.domNode.appendChild(this.rightGuard);\n  }\n\n  index(node: Node, offset: number) {\n    if (node === this.leftGuard) return 0;\n    if (node === this.rightGuard) return 1;\n    return super.index(node, offset);\n  }\n\n  restore(node: Text): EmbedContextRange | null {\n    let range: EmbedContextRange | null = null;\n    let textNode: Text;\n    const text = node.data.split(GUARD_TEXT).join('');\n    if (node === this.leftGuard) {\n      if (this.prev instanceof TextBlot) {\n        const prevLength = this.prev.length();\n        this.prev.insertAt(prevLength, text);\n        range = {\n          startNode: this.prev.domNode,\n          startOffset: prevLength + text.length,\n        };\n      } else {\n        textNode = document.createTextNode(text);\n        this.parent.insertBefore(this.scroll.create(textNode), this);\n        range = {\n          startNode: textNode,\n          startOffset: text.length,\n        };\n      }\n    } else if (node === this.rightGuard) {\n      if (this.next instanceof TextBlot) {\n        this.next.insertAt(0, text);\n        range = {\n          startNode: this.next.domNode,\n          startOffset: text.length,\n        };\n      } else {\n        textNode = document.createTextNode(text);\n        this.parent.insertBefore(this.scroll.create(textNode), this.next);\n        range = {\n          startNode: textNode,\n          startOffset: text.length,\n        };\n      }\n    }\n    node.data = GUARD_TEXT;\n    return range;\n  }\n\n  update(mutations: MutationRecord[], context: Record<string, unknown>) {\n    mutations.forEach((mutation) => {\n      if (\n        mutation.type === 'characterData' &&\n        (mutation.target === this.leftGuard ||\n          mutation.target === this.rightGuard)\n      ) {\n        const range = this.restore(mutation.target as Text);\n        if (range) context.range = range;\n      }\n    });\n  }\n}\n\nexport default Embed;\n","import { EmbedBlot, InlineBlot, Scope } from 'parchment';\nimport type { BlotConstructor } from 'parchment';\nimport Break from './break.js';\nimport Text from './text.js';\n\nclass Inline extends InlineBlot {\n  static allowedChildren: BlotConstructor[] = [Inline, Break, EmbedBlot, Text];\n  // Lower index means deeper in the DOM tree, since not found (-1) is for embeds\n  static order = [\n    'cursor',\n    'inline', // Must be lower\n    'link', // Chrome wants <a> to be lower\n    'underline',\n    'strike',\n    'italic',\n    'bold',\n    'script',\n    'code', // Must be higher\n  ];\n\n  static compare(self: string, other: string) {\n    const selfIndex = Inline.order.indexOf(self);\n    const otherIndex = Inline.order.indexOf(other);\n    if (selfIndex >= 0 || otherIndex >= 0) {\n      return selfIndex - otherIndex;\n    }\n    if (self === other) {\n      return 0;\n    }\n    if (self < other) {\n      return -1;\n    }\n    return 1;\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    if (\n      Inline.compare(this.statics.blotName, name) < 0 &&\n      this.scroll.query(name, Scope.BLOT)\n    ) {\n      const blot = this.isolate(index, length);\n      if (value) {\n        blot.wrap(name, value);\n      }\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    if (\n      this.parent instanceof Inline &&\n      Inline.compare(this.statics.blotName, this.parent.statics.blotName) > 0\n    ) {\n      const parent = this.parent.isolate(this.offset(), this.length());\n      // @ts-expect-error TODO: make isolate generic\n      this.moveChildren(parent);\n      parent.wrap(this);\n    }\n  }\n}\n\nexport default Inline;\n","import { TextBlot } from 'parchment';\n\nclass Text extends TextBlot {}\n\n// https://lodash.com/docs#escape\nconst entityMap: Record<string, string> = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n};\n\nfunction escapeText(text: string) {\n  return text.replace(/[&<>\"']/g, (s) => entityMap[s]);\n}\n\nexport { Text as default, escapeText };\n","import { ContainerBlot, LeafBlot, Scope, ScrollBlot } from 'parchment';\nimport type { Blot, Parent, EmbedBlot, ParentBlot, Registry } from 'parchment';\nimport Delta, { AttributeMap, Op } from 'quill-delta-es';\nimport Emitter from '../core/emitter.js';\nimport type { EmitterSource } from '../core/emitter.js';\nimport Block, { BlockEmbed, bubbleFormats } from './block.js';\nimport Break from './break.js';\nimport Container from './container.js';\n\ntype RenderBlock =\n  | {\n      type: 'blockEmbed';\n      attributes: AttributeMap;\n      key: string;\n      value: unknown;\n    }\n  | { type: 'block'; attributes: AttributeMap; delta: Delta };\n\nfunction isLine(blot: unknown): blot is Block | BlockEmbed {\n  return blot instanceof Block || blot instanceof BlockEmbed;\n}\n\ninterface UpdatableEmbed {\n  updateContent(change: unknown): void;\n}\n\nfunction isUpdatable(blot: Blot): blot is Blot & UpdatableEmbed {\n  return typeof (blot as unknown as any).updateContent === 'function';\n}\n\nclass Scroll extends ScrollBlot {\n  static blotName = 'scroll';\n  static className = 'ql-editor';\n  static tagName = 'DIV';\n  static defaultChild = Block;\n  static allowedChildren = [Block, BlockEmbed, Container];\n\n  emitter: Emitter;\n  batch: false | MutationRecord[];\n\n  constructor(\n    registry: Registry,\n    domNode: HTMLDivElement,\n    { emitter }: { emitter: Emitter },\n  ) {\n    super(registry, domNode);\n    this.emitter = emitter;\n    this.batch = false;\n    this.optimize();\n    this.enable();\n    this.domNode.addEventListener('dragstart', (e) => this.handleDragStart(e));\n  }\n\n  batchStart() {\n    if (!Array.isArray(this.batch)) {\n      this.batch = [];\n    }\n  }\n\n  batchEnd() {\n    if (!this.batch) return;\n    const mutations = this.batch;\n    this.batch = false;\n    this.update(mutations);\n  }\n\n  emitMount(blot: Blot) {\n    this.emitter.emit(Emitter.events.SCROLL_BLOT_MOUNT, blot);\n  }\n\n  emitUnmount(blot: Blot) {\n    this.emitter.emit(Emitter.events.SCROLL_BLOT_UNMOUNT, blot);\n  }\n\n  emitEmbedUpdate(blot: Blot, change: unknown) {\n    this.emitter.emit(Emitter.events.SCROLL_EMBED_UPDATE, blot, change);\n  }\n\n  deleteAt(index: number, length: number) {\n    const [first, offset] = this.line(index);\n    const [last] = this.line(index + length);\n    super.deleteAt(index, length);\n    if (last != null && first !== last && offset > 0) {\n      if (first instanceof BlockEmbed || last instanceof BlockEmbed) {\n        this.optimize();\n        return;\n      }\n      const ref =\n        last.children.head instanceof Break ? null : last.children.head;\n      // @ts-expect-error\n      first.moveChildren(last, ref);\n      // @ts-expect-error\n      first.remove();\n    }\n    this.optimize();\n  }\n\n  enable(enabled = true) {\n    this.domNode.setAttribute('contenteditable', enabled ? 'true' : 'false');\n  }\n\n  formatAt(index: number, length: number, format: string, value: unknown) {\n    super.formatAt(index, length, format, value);\n    this.optimize();\n  }\n\n  insertAt(index: number, value: string, def?: unknown) {\n    if (index >= this.length()) {\n      if (def == null || this.scroll.query(value, Scope.BLOCK) == null) {\n        const blot = this.scroll.create(this.statics.defaultChild.blotName);\n        this.appendChild(blot);\n        if (def == null && value.endsWith('\\n')) {\n          blot.insertAt(0, value.slice(0, -1), def);\n        } else {\n          blot.insertAt(0, value, def);\n        }\n      } else {\n        const embed = this.scroll.create(value, def);\n        this.appendChild(embed);\n      }\n    } else {\n      super.insertAt(index, value, def);\n    }\n    this.optimize();\n  }\n\n  insertBefore(blot: Blot, ref?: Blot | null) {\n    if (blot.statics.scope === Scope.INLINE_BLOT) {\n      const wrapper = this.scroll.create(\n        this.statics.defaultChild.blotName,\n      ) as Parent;\n      wrapper.appendChild(blot);\n      super.insertBefore(wrapper, ref);\n    } else {\n      super.insertBefore(blot, ref);\n    }\n  }\n\n  insertContents(index: number, delta: Delta) {\n    const renderBlocks = this.deltaToRenderBlocks(\n      delta.concat(new Delta().insert('\\n')),\n    );\n    const last = renderBlocks.pop();\n    if (last == null) return;\n\n    this.batchStart();\n\n    const first = renderBlocks.shift();\n    if (first) {\n      const shouldInsertNewlineChar =\n        first.type === 'block' &&\n        (first.delta.length() === 0 ||\n          (!this.descendant(BlockEmbed, index)[0] && index < this.length()));\n      const delta =\n        first.type === 'block'\n          ? first.delta\n          : new Delta().insert({ [first.key]: first.value });\n      insertInlineContents(this, index, delta);\n      const newlineCharLength = first.type === 'block' ? 1 : 0;\n      const lineEndIndex = index + delta.length() + newlineCharLength;\n      if (shouldInsertNewlineChar) {\n        this.insertAt(lineEndIndex - 1, '\\n');\n      }\n\n      const formats = bubbleFormats(this.line(index)[0]);\n      const attributes = AttributeMap.diff(formats, first.attributes) || {};\n      Object.keys(attributes).forEach((name) => {\n        this.formatAt(lineEndIndex - 1, 1, name, attributes[name]);\n      });\n\n      index = lineEndIndex;\n    }\n\n    let [refBlot, refBlotOffset] = this.children.find(index);\n    if (renderBlocks.length) {\n      if (refBlot) {\n        refBlot = refBlot.split(refBlotOffset);\n        refBlotOffset = 0;\n      }\n\n      renderBlocks.forEach((renderBlock) => {\n        if (renderBlock.type === 'block') {\n          const block = this.createBlock(\n            renderBlock.attributes,\n            refBlot || undefined,\n          );\n          insertInlineContents(block, 0, renderBlock.delta);\n        } else {\n          const blockEmbed = this.create(\n            renderBlock.key,\n            renderBlock.value,\n          ) as EmbedBlot;\n          this.insertBefore(blockEmbed, refBlot || undefined);\n          Object.keys(renderBlock.attributes).forEach((name) => {\n            blockEmbed.format(name, renderBlock.attributes[name]);\n          });\n        }\n      });\n    }\n\n    if (last.type === 'block' && last.delta.length()) {\n      const offset = refBlot\n        ? refBlot.offset(refBlot.scroll) + refBlotOffset\n        : this.length();\n      insertInlineContents(this, offset, last.delta);\n    }\n\n    this.batchEnd();\n    this.optimize();\n  }\n\n  isEnabled() {\n    return this.domNode.getAttribute('contenteditable') === 'true';\n  }\n\n  leaf(index: number): [LeafBlot | null, number] {\n    const last = this.path(index).pop();\n    if (!last) {\n      return [null, -1];\n    }\n\n    const [blot, offset] = last;\n    return blot instanceof LeafBlot ? [blot, offset] : [null, -1];\n  }\n\n  line(index: number): [Block | BlockEmbed | null, number] {\n    if (index === this.length()) {\n      return this.line(index - 1);\n    }\n    // @ts-expect-error TODO: make descendant() generic\n    return this.descendant(isLine, index);\n  }\n\n  lines(index = 0, length = Number.MAX_VALUE): (Block | BlockEmbed)[] {\n    const getLines = (\n      blot: ParentBlot,\n      blotIndex: number,\n      blotLength: number,\n    ) => {\n      let lines: (Block | BlockEmbed)[] = [];\n      let lengthLeft = blotLength;\n      blot.children.forEachAt(\n        blotIndex,\n        blotLength,\n        (child, childIndex, childLength) => {\n          if (isLine(child)) {\n            lines.push(child);\n          } else if (child instanceof ContainerBlot) {\n            lines = lines.concat(getLines(child, childIndex, lengthLeft));\n          }\n          lengthLeft -= childLength;\n        },\n      );\n      return lines;\n    };\n    return getLines(this, index, length);\n  }\n\n  optimize(context?: { [key: string]: any }): void;\n  optimize(\n    mutations?: MutationRecord[],\n    context?: { [key: string]: any },\n  ): void;\n  optimize(mutations = [], context = {}) {\n    if (this.batch) return;\n    super.optimize(mutations, context);\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_OPTIMIZE, mutations, context);\n    }\n  }\n\n  path(index: number) {\n    return super.path(index).slice(1); // Exclude self\n  }\n\n  remove() {\n    // Never remove self\n  }\n\n  update(source?: EmitterSource): void;\n  update(mutations?: MutationRecord[]): void;\n  update(mutations?: MutationRecord[] | EmitterSource): void {\n    if (this.batch) {\n      if (Array.isArray(mutations)) {\n        this.batch = this.batch.concat(mutations);\n      }\n      return;\n    }\n    let source: EmitterSource = Emitter.sources.USER;\n    if (typeof mutations === 'string') {\n      source = mutations;\n    }\n    if (!Array.isArray(mutations)) {\n      mutations = this.observer.takeRecords();\n    }\n    mutations = mutations.filter(({ target }) => {\n      const blot = this.find(target, true);\n      return blot && !isUpdatable(blot);\n    });\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_BEFORE_UPDATE, source, mutations);\n    }\n    super.update(mutations.concat([])); // pass copy\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_UPDATE, source, mutations);\n    }\n  }\n\n  updateEmbedAt(index: number, key: string, change: unknown) {\n    // Currently it only supports top-level embeds (BlockEmbed).\n    // We can update `ParentBlot` in parchment to support inline embeds.\n    const [blot] = this.descendant((b: Blot) => b instanceof BlockEmbed, index);\n    if (blot && blot.statics.blotName === key && isUpdatable(blot)) {\n      blot.updateContent(change);\n    }\n  }\n\n  protected handleDragStart(event: DragEvent) {\n    event.preventDefault();\n  }\n\n  private deltaToRenderBlocks(delta: Delta) {\n    const renderBlocks: RenderBlock[] = [];\n\n    let currentBlockDelta = new Delta();\n    delta.forEach((op) => {\n      const insert = op?.insert;\n      if (!insert) return;\n      if (typeof insert === 'string') {\n        const splitted = insert.split('\\n');\n        splitted.slice(0, -1).forEach((text) => {\n          currentBlockDelta.insert(text, op.attributes);\n          renderBlocks.push({\n            type: 'block',\n            delta: currentBlockDelta,\n            attributes: op.attributes ?? {},\n          });\n          currentBlockDelta = new Delta();\n        });\n        const last = splitted[splitted.length - 1];\n        if (last) {\n          currentBlockDelta.insert(last, op.attributes);\n        }\n      } else {\n        const key = Object.keys(insert)[0];\n        if (!key) return;\n        if (this.query(key, Scope.INLINE)) {\n          currentBlockDelta.push(op);\n        } else {\n          if (currentBlockDelta.length()) {\n            renderBlocks.push({\n              type: 'block',\n              delta: currentBlockDelta,\n              attributes: {},\n            });\n          }\n          currentBlockDelta = new Delta();\n          renderBlocks.push({\n            type: 'blockEmbed',\n            key,\n            value: insert[key],\n            attributes: op.attributes ?? {},\n          });\n        }\n      }\n    });\n\n    if (currentBlockDelta.length()) {\n      renderBlocks.push({\n        type: 'block',\n        delta: currentBlockDelta,\n        attributes: {},\n      });\n    }\n\n    return renderBlocks;\n  }\n\n  private createBlock(attributes: AttributeMap, refBlot?: Blot) {\n    let blotName: string | undefined;\n    const formats: AttributeMap = {};\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      const isBlockBlot = this.query(key, Scope.BLOCK & Scope.BLOT) != null;\n      if (isBlockBlot) {\n        blotName = key;\n      } else {\n        formats[key] = value;\n      }\n    });\n\n    const block = this.create(\n      blotName || this.statics.defaultChild.blotName,\n      blotName ? attributes[blotName] : undefined,\n    ) as ParentBlot;\n\n    this.insertBefore(block, refBlot || undefined);\n\n    const length = block.length();\n    Object.entries(formats).forEach(([key, value]) => {\n      block.formatAt(0, length, key, value);\n    });\n\n    return block;\n  }\n}\n\nfunction insertInlineContents(\n  parent: ParentBlot,\n  index: number,\n  inlineContents: Delta,\n) {\n  inlineContents.reduce((index, op) => {\n    const length = Op.length(op);\n    let attributes = op.attributes || {};\n    if (op.insert != null) {\n      if (typeof op.insert === 'string') {\n        const text = op.insert;\n        parent.insertAt(index, text);\n        const [leaf] = parent.descendant(LeafBlot, index);\n        const formats = bubbleFormats(leaf);\n        attributes = AttributeMap.diff(formats, attributes) || {};\n      } else if (typeof op.insert === 'object') {\n        const key = Object.keys(op.insert)[0]; // There should only be one key\n        if (key == null) return index;\n        parent.insertAt(index, key, op.insert[key]);\n        const isInlineEmbed = parent.scroll.query(key, Scope.INLINE) != null;\n        if (isInlineEmbed) {\n          const [leaf] = parent.descendant(LeafBlot, index);\n          const formats = bubbleFormats(leaf);\n          attributes = AttributeMap.diff(formats, attributes) || {};\n        }\n      }\n    }\n    Object.keys(attributes).forEach((key) => {\n      parent.formatAt(index, length, key, attributes[key]);\n    });\n    return index + length;\n  }, index);\n}\n\nexport default Scroll;\n","import { Scope } from 'parchment';\nimport type Delta from 'quill-delta-es';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport type Scroll from '../blots/scroll.js';\nimport type { Range } from '../core/selection.js';\n\nexport interface HistoryOptions {\n  userOnly: boolean;\n  delay: number;\n  maxStack: number;\n}\n\nexport interface StackItem {\n  delta: Delta;\n  range: Range | null;\n}\n\ninterface Stack {\n  undo: StackItem[];\n  redo: StackItem[];\n}\n\nclass History extends Module<HistoryOptions> {\n  static DEFAULTS: HistoryOptions = {\n    delay: 1000,\n    maxStack: 100,\n    userOnly: false,\n  };\n\n  lastRecorded = 0;\n  ignoreChange = false;\n  stack: Stack = { undo: [], redo: [] };\n  currentRange: Range | null = null;\n\n  constructor(quill: Quill, options: Partial<HistoryOptions>) {\n    super(quill, options);\n    this.quill.on(\n      Quill.events.EDITOR_CHANGE,\n      (eventName, value, oldValue, source) => {\n        if (eventName === Quill.events.SELECTION_CHANGE) {\n          if (value && source !== Quill.sources.SILENT) {\n            this.currentRange = value;\n          }\n        } else if (eventName === Quill.events.TEXT_CHANGE) {\n          if (!this.ignoreChange) {\n            if (!this.options.userOnly || source === Quill.sources.USER) {\n              this.record(value, oldValue);\n            } else {\n              this.transform(value);\n            }\n          }\n\n          this.currentRange = transformRange(this.currentRange, value);\n        }\n      },\n    );\n\n    this.quill.keyboard.addBinding(\n      { key: 'z', shortKey: true },\n      this.undo.bind(this),\n    );\n    this.quill.keyboard.addBinding(\n      { key: ['z', 'Z'], shortKey: true, shiftKey: true },\n      this.redo.bind(this),\n    );\n    if (/Win/i.test(navigator.platform)) {\n      this.quill.keyboard.addBinding(\n        { key: 'y', shortKey: true },\n        this.redo.bind(this),\n      );\n    }\n\n    this.quill.root.addEventListener('beforeinput', (event) => {\n      if (event.inputType === 'historyUndo') {\n        this.undo();\n        event.preventDefault();\n      } else if (event.inputType === 'historyRedo') {\n        this.redo();\n        event.preventDefault();\n      }\n    });\n  }\n\n  change(source: 'undo' | 'redo', dest: 'redo' | 'undo') {\n    if (this.stack[source].length === 0) return;\n    const item = this.stack[source].pop();\n    if (!item) return;\n    const base = this.quill.getContents();\n    const inverseDelta = item.delta.invert(base);\n    this.stack[dest].push({\n      delta: inverseDelta,\n      range: transformRange(item.range, inverseDelta),\n    });\n    this.lastRecorded = 0;\n    this.ignoreChange = true;\n    this.quill.updateContents(item.delta, Quill.sources.USER);\n    this.ignoreChange = false;\n\n    this.restoreSelection(item);\n  }\n\n  clear() {\n    this.stack = { undo: [], redo: [] };\n  }\n\n  cutoff() {\n    this.lastRecorded = 0;\n  }\n\n  record(changeDelta: Delta, oldDelta: Delta) {\n    if (changeDelta.ops.length === 0) return;\n    this.stack.redo = [];\n    let undoDelta = changeDelta.invert(oldDelta);\n    let undoRange = this.currentRange;\n    const timestamp = Date.now();\n    if (\n      // @ts-expect-error Fix me later\n      this.lastRecorded + this.options.delay > timestamp &&\n      this.stack.undo.length > 0\n    ) {\n      const item = this.stack.undo.pop();\n      if (item) {\n        undoDelta = undoDelta.compose(item.delta);\n        undoRange = item.range;\n      }\n    } else {\n      this.lastRecorded = timestamp;\n    }\n    if (undoDelta.length() === 0) return;\n    this.stack.undo.push({ delta: undoDelta, range: undoRange });\n    // @ts-expect-error Fix me later\n    if (this.stack.undo.length > this.options.maxStack) {\n      this.stack.undo.shift();\n    }\n  }\n\n  redo() {\n    this.change('redo', 'undo');\n  }\n\n  transform(delta: Delta) {\n    transformStack(this.stack.undo, delta);\n    transformStack(this.stack.redo, delta);\n  }\n\n  undo() {\n    this.change('undo', 'redo');\n  }\n\n  protected restoreSelection(stackItem: StackItem) {\n    if (stackItem.range) {\n      this.quill.setSelection(stackItem.range, Quill.sources.USER);\n    } else {\n      const index = getLastChangeIndex(this.quill.scroll, stackItem.delta);\n      this.quill.setSelection(index, Quill.sources.USER);\n    }\n  }\n}\n\nfunction transformStack(stack: StackItem[], delta: Delta) {\n  let remoteDelta = delta;\n  for (let i = stack.length - 1; i >= 0; i -= 1) {\n    const oldItem = stack[i];\n    stack[i] = {\n      delta: remoteDelta.transform(oldItem.delta, true),\n      range: oldItem.range && transformRange(oldItem.range, remoteDelta),\n    };\n    remoteDelta = oldItem.delta.transform(remoteDelta);\n    if (stack[i].delta.length() === 0) {\n      stack.splice(i, 1);\n    }\n  }\n}\n\nfunction endsWithNewlineChange(scroll: Scroll, delta: Delta) {\n  const lastOp = delta.ops[delta.ops.length - 1];\n  if (lastOp == null) return false;\n  if (lastOp.insert != null) {\n    return typeof lastOp.insert === 'string' && lastOp.insert.endsWith('\\n');\n  }\n  if (lastOp.attributes != null) {\n    return Object.keys(lastOp.attributes).some((attr) => {\n      return scroll.query(attr, Scope.BLOCK) != null;\n    });\n  }\n  return false;\n}\n\nfunction getLastChangeIndex(scroll: Scroll, delta: Delta) {\n  const deleteLength = delta.reduce((length, op) => {\n    return length + (op.delete || 0);\n  }, 0);\n  let changeIndex = delta.length() - deleteLength;\n  if (endsWithNewlineChange(scroll, delta)) {\n    changeIndex -= 1;\n  }\n  return changeIndex;\n}\n\nfunction transformRange(range: Range | null, delta: Delta) {\n  if (!range) return range;\n  const start = delta.transformPosition(range.index);\n  const end = delta.transformPosition(range.index + range.length);\n  return { index: start, length: end - start };\n}\n\nexport { History as default, getLastChangeIndex };\n","import Delta from 'quill-delta-es';\nimport type Quill from '../core/quill.js';\nimport Emitter from '../core/emitter.js';\nimport Module from '../core/module.js';\nimport type { Range } from '../core/selection.js';\n\ninterface UploaderOptions {\n  mimetypes: string[];\n  handler: (this: { quill: Quill }, range: Range, files: File[]) => void;\n}\n\nclass Uploader extends Module<UploaderOptions> {\n  static DEFAULTS: UploaderOptions;\n\n  constructor(quill: Quill, options: Partial<UploaderOptions>) {\n    super(quill, options);\n    quill.root.addEventListener('drop', (e) => {\n      e.preventDefault();\n      let native: ReturnType<typeof document.createRange> | null = null;\n      if (document.caretRangeFromPoint) {\n        native = document.caretRangeFromPoint(e.clientX, e.clientY);\n        // @ts-expect-error\n      } else if (document.caretPositionFromPoint) {\n        // @ts-expect-error\n        const position = document.caretPositionFromPoint(e.clientX, e.clientY);\n        native = document.createRange();\n        native.setStart(position.offsetNode, position.offset);\n        native.setEnd(position.offsetNode, position.offset);\n      }\n\n      const normalized = native && quill.selection.normalizeNative(native);\n      if (normalized) {\n        const range = quill.selection.normalizedToRange(normalized);\n        if (e.dataTransfer?.files) {\n          this.upload(range, e.dataTransfer.files);\n        }\n      }\n    });\n  }\n\n  upload(range: Range, files: FileList | File[]) {\n    const uploads: File[] = [];\n    Array.from(files).forEach((file) => {\n      if (file && this.options.mimetypes?.includes(file.type)) {\n        uploads.push(file);\n      }\n    });\n    if (uploads.length > 0) {\n      // @ts-expect-error Fix me later\n      this.options.handler.call(this, range, uploads);\n    }\n  }\n}\n\nUploader.DEFAULTS = {\n  mimetypes: ['image/png', 'image/jpeg'],\n  handler(range: Range, files: File[]) {\n    if (!this.quill.scroll.query('image')) {\n      return;\n    }\n    const promises = files.map<Promise<string>>((file) => {\n      return new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n          resolve(reader.result as string);\n        };\n        reader.readAsDataURL(file);\n      });\n    });\n    Promise.all(promises).then((images) => {\n      const update = images.reduce((delta: Delta, image) => {\n        return delta.insert({ image });\n      }, new Delta().retain(range.index).delete(range.length)) as Delta;\n      this.quill.updateContents(update, Emitter.sources.USER);\n      this.quill.setSelection(\n        range.index + images.length,\n        Emitter.sources.SILENT,\n      );\n    });\n  },\n};\n\nexport default Uploader;\n","import Delta from 'quill-delta-es';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport type { Range } from '../core/selection.js';\nimport { deleteRange } from './keyboard.js';\n\nconst INSERT_TYPES = ['insertText', 'insertReplacementText'];\n\nclass Input extends Module {\n  constructor(quill: Quill, options: Record<string, never>) {\n    super(quill, options);\n\n    quill.root.addEventListener('beforeinput', (event) => {\n      this.handleBeforeInput(event);\n    });\n\n    // Gboard with English input on Android triggers `compositionstart` sometimes even\n    // users are not going to type anything.\n    if (!/Android/i.test(navigator.userAgent)) {\n      quill.on(Quill.events.COMPOSITION_BEFORE_START, () => {\n        this.handleCompositionStart();\n      });\n    }\n  }\n\n  private deleteRange(range: Range) {\n    deleteRange({ range, quill: this.quill });\n  }\n\n  private replaceText(range: Range, text = '') {\n    if (range.length === 0) return false;\n\n    if (text) {\n      // Follow the native behavior that inherits the formats of the first character\n      const formats = this.quill.getFormat(range.index, 1);\n      this.deleteRange(range);\n      this.quill.updateContents(\n        new Delta().retain(range.index).insert(text, formats),\n        Quill.sources.USER,\n      );\n    } else {\n      this.deleteRange(range);\n    }\n\n    this.quill.setSelection(range.index + text.length, 0, Quill.sources.SILENT);\n    return true;\n  }\n\n  private handleBeforeInput(event: InputEvent) {\n    if (\n      this.quill.composition.isComposing ||\n      event.defaultPrevented ||\n      !INSERT_TYPES.includes(event.inputType)\n    ) {\n      return;\n    }\n\n    const staticRange = event.getTargetRanges\n      ? event.getTargetRanges()[0]\n      : null;\n    if (!staticRange || staticRange.collapsed === true) {\n      return;\n    }\n\n    const text = getPlainTextFromInputEvent(event);\n    if (text == null) {\n      return;\n    }\n    const normalized = this.quill.selection.normalizeNative(staticRange);\n    const range = normalized\n      ? this.quill.selection.normalizedToRange(normalized)\n      : null;\n    if (range && this.replaceText(range, text)) {\n      event.preventDefault();\n    }\n  }\n\n  private handleCompositionStart() {\n    const range = this.quill.getSelection();\n    if (range) {\n      this.replaceText(range);\n    }\n  }\n}\n\nfunction getPlainTextFromInputEvent(event: InputEvent) {\n  // When `inputType` is \"insertText\":\n  // - `event.data` should be string (Safari uses `event.dataTransfer`).\n  // - `event.dataTransfer` should be null.\n  // When `inputType` is \"insertReplacementText\":\n  // - `event.data` should be null.\n  // - `event.dataTransfer` should contain \"text/plain\" data.\n\n  if (typeof event.data === 'string') {\n    return event.data;\n  }\n  if (event.dataTransfer?.types.includes('text/plain')) {\n    return event.dataTransfer.getData('text/plain');\n  }\n  return null;\n}\n\nexport default Input;\n","import { ParentBlot } from 'parchment';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\n\nconst isMac = /Mac/i.test(navigator.platform);\n\n// Export for testing\nexport const TTL_FOR_VALID_SELECTION_CHANGE = 100;\n\n// A loose check to determine if the shortcut can move the caret before a UI node:\n// <ANY_PARENT>[CARET]<div class=\"ql-ui\"></div>[CONTENT]</ANY_PARENT>\nconst canMoveCaretBeforeUINode = (event: KeyboardEvent) => {\n  if (\n    event.key === 'ArrowLeft' ||\n    event.key === 'ArrowRight' || // RTL scripts or moving from the end of the previous line\n    event.key === 'ArrowUp' ||\n    event.key === 'ArrowDown' ||\n    event.key === 'Home'\n  ) {\n    return true;\n  }\n\n  if (isMac && event.key === 'a' && event.ctrlKey === true) {\n    return true;\n  }\n\n  return false;\n};\n\nclass UINode extends Module {\n  isListening = false;\n  selectionChangeDeadline = 0;\n\n  constructor(quill: Quill, options: Record<string, never>) {\n    super(quill, options);\n\n    this.handleArrowKeys();\n    this.handleNavigationShortcuts();\n  }\n\n  private handleArrowKeys() {\n    this.quill.keyboard.addBinding({\n      key: ['ArrowLeft', 'ArrowRight'],\n      offset: 0,\n      shiftKey: null,\n      handler(range, { line, event }) {\n        if (!(line instanceof ParentBlot) || !line.uiNode) {\n          return true;\n        }\n\n        const isRTL = getComputedStyle(line.domNode)['direction'] === 'rtl';\n        if (\n          (isRTL && event.key !== 'ArrowRight') ||\n          (!isRTL && event.key !== 'ArrowLeft')\n        ) {\n          return true;\n        }\n\n        this.quill.setSelection(\n          range.index - 1,\n          range.length + (event.shiftKey ? 1 : 0),\n          Quill.sources.USER,\n        );\n        return false;\n      },\n    });\n  }\n\n  private handleNavigationShortcuts() {\n    this.quill.root.addEventListener('keydown', (event) => {\n      if (!event.defaultPrevented && canMoveCaretBeforeUINode(event)) {\n        this.ensureListeningToSelectionChange();\n      }\n    });\n  }\n\n  /**\n   * We only listen to the `selectionchange` event when\n   * there is an intention of moving the caret to the beginning using shortcuts.\n   * This is primarily implemented to prevent infinite loops, as we are changing\n   * the selection within the handler of a `selectionchange` event.\n   */\n  private ensureListeningToSelectionChange() {\n    this.selectionChangeDeadline = Date.now() + TTL_FOR_VALID_SELECTION_CHANGE;\n\n    if (this.isListening) return;\n    this.isListening = true;\n\n    const listener = () => {\n      this.isListening = false;\n\n      if (Date.now() <= this.selectionChangeDeadline) {\n        this.handleSelectionChange();\n      }\n    };\n\n    document.addEventListener('selectionchange', listener, {\n      once: true,\n    });\n  }\n\n  private handleSelectionChange() {\n    const selection = document.getSelection();\n    if (!selection) return;\n    const range = selection.getRangeAt(0);\n    if (range.collapsed !== true || range.startOffset !== 0) return;\n\n    const line = this.quill.scroll.find(range.startContainer);\n    if (!(line instanceof ParentBlot) || !line.uiNode) return;\n\n    const newRange = document.createRange();\n    newRange.setStartAfter(line.uiNode);\n    newRange.setEndAfter(line.uiNode);\n    selection.removeAllRanges();\n    selection.addRange(newRange);\n  }\n}\n\nexport default UINode;\n","import Quill, { Parchment, Range } from './core/quill.js';\nimport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n} from './core/quill.js';\n\nimport Block, { BlockEmbed } from './blots/block.js';\nimport Break from './blots/break.js';\nimport Container from './blots/container.js';\nimport Cursor from './blots/cursor.js';\nimport Embed from './blots/embed.js';\nimport Inline from './blots/inline.js';\nimport Scroll from './blots/scroll.js';\nimport TextBlot from './blots/text.js';\n\nimport Clipboard from './modules/clipboard.js';\nimport History from './modules/history.js';\nimport Keyboard from './modules/keyboard.js';\nimport Uploader from './modules/uploader.js';\nimport Delta, { Op, OpIterator, AttributeMap } from 'quill-delta-es';\nimport Input from './modules/input.js';\nimport UINode from './modules/uiNode.js';\n\nexport { default as Module } from './core/module.js';\nexport { Delta, Op, OpIterator, AttributeMap, Parchment, Range };\nexport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n};\n\nQuill.register({\n  'blots/block': Block,\n  'blots/block/embed': BlockEmbed,\n  'blots/break': Break,\n  'blots/container': Container,\n  'blots/cursor': Cursor,\n  'blots/embed': Embed,\n  'blots/inline': Inline,\n  'blots/scroll': Scroll,\n  'blots/text': TextBlot,\n\n  'modules/clipboard': Clipboard,\n  'modules/history': History,\n  'modules/keyboard': Keyboard,\n  'modules/uploader': Uploader,\n  'modules/input': Input,\n  'modules/uiNode': UINode,\n});\n\nexport default Quill;\n","/** Representation of a single event listener. */\nclass WrappedListener {\n    listener;\n    context;\n    once;\n    constructor(listener, context, once = false) {\n        this.listener = listener;\n        this.context = context;\n        this.once = once;\n    }\n}\n/** Minimal `EventEmitter` interface that is molded against the Node.js `EventEmitter` interface. */\nexport class EventEmitter {\n    static prefixed = false;\n    /**\n     * Use Object.create(null) to create a truly empty object for storing events, avoiding potential\n     * prototype pollution or interference from built-in Object properties.\n     */\n    _events = Object.create(null);\n    _eventsCount = 0;\n    /** Add a listener for a given event. */\n    #addListener(event, listener, context, once) {\n        if (typeof listener !== 'function') {\n            throw new TypeError('The listener must be a function');\n        }\n        const wrappedListener = new WrappedListener(listener, context || this, once);\n        const events = this._events[event];\n        if (Array.isArray(events)) {\n            /** Third or more listener for this event (pushing to existing array) */\n            events.push(wrappedListener);\n        }\n        else if (events) {\n            /** Second listener for this event (converting single EE to array) */\n            this._events[event] = [\n                events,\n                wrappedListener,\n            ];\n        }\n        else {\n            /** First listener for this event */\n            this._events[event] = wrappedListener;\n            this._eventsCount++;\n        }\n        return this;\n    }\n    /** Clear event by name. */\n    clearEvent(event) {\n        if (--this._eventsCount === 0) {\n            this._events = Object.create(null); // Re-initialize\n        }\n        else {\n            delete this._events[event];\n        }\n    }\n    /** Return an array listing the events for which the emitter has registered listeners. */\n    eventNames() {\n        if (this._eventsCount === 0) {\n            return [];\n        }\n        /**\n         * Use `Reflect.ownKeys` to get both string and symbol properties directly from the _events\n         * object.\n         */\n        return Reflect.ownKeys(this._events);\n    }\n    /** Return the listeners registered for a given event. */\n    listeners(event) {\n        const handlers = this._events[event];\n        if (!handlers) {\n            return [];\n        }\n        else if (Array.isArray(handlers)) {\n            /** Array of listeners. */\n            return handlers.map((handler) => handler.listener);\n        }\n        else {\n            /** Single listener. */\n            return [\n                handlers.listener,\n            ];\n        }\n    }\n    /** Return the number of listeners listening to a given event. */\n    listenerCount(event) {\n        const listeners = this._events[event];\n        if (!listeners) {\n            return 0;\n        }\n        else if (Array.isArray(listeners)) {\n            /** Array of listeners. */\n            return listeners.length;\n        }\n        else {\n            /** Single listener. */\n            return 1;\n        }\n    }\n    /** Calls each of the listeners registered for a given event. */\n    emit(event, ...args) {\n        const listeners = this._events[event];\n        if (!listeners) {\n            return false;\n        }\n        if (Array.isArray(listeners)) {\n            /** Multiple listeners (array) */\n            /** Create a copy to avoid issues if listeners are removed during iteration. */\n            const currentListeners = listeners.slice(0);\n            currentListeners.forEach((listener) => {\n                if (listener.once) {\n                    this.removeListener(event, listener.listener, undefined, true);\n                }\n                listener.listener.call(listener.context, ...args);\n            });\n        }\n        else {\n            // Single listener\n            if (listeners.once) {\n                this.removeListener(event, listeners.listener, undefined, true);\n            }\n            listeners.listener.call(listeners.context, ...args);\n        }\n        return true;\n    }\n    /** Add a listener for a given event. */\n    on(event, listener, context) {\n        return this.#addListener(event, listener, context, false);\n    }\n    /** Add a one-time listener for a given event. */\n    once(event, listener, context) {\n        return this.#addListener(event, listener, context, true);\n    }\n    /** Remove the listeners of a given event. */\n    removeListener(event, listener, context, once) {\n        const wrappedListeners = this._events[event];\n        if (!wrappedListeners) {\n            return this;\n        }\n        else if (!listener) {\n            this.clearEvent(event);\n            return this;\n        }\n        else if (Array.isArray(wrappedListeners)) {\n            const events = [];\n            wrappedListeners.forEach((wrappedListener) => {\n                if (wrappedListener.listener !== listener ||\n                    (once && !wrappedListener.once) ||\n                    (context && wrappedListener.context !== context)) {\n                    events.push(wrappedListener);\n                }\n            });\n            if (events.length) {\n                this._events[event] = events.length === 1 ? events[0] : events;\n            }\n            else {\n                this.clearEvent(event);\n            }\n        }\n        else if (wrappedListeners.listener === listener &&\n            (!once || wrappedListeners.once) &&\n            (!context || wrappedListeners.context === context)) {\n            this.clearEvent(event);\n        }\n        return this;\n    }\n    /** Remove all listeners, or those of the specified event. */\n    removeAllListeners(event) {\n        if (event) {\n            if (this._events[event]) {\n                this.clearEvent(event);\n            }\n        }\n        else {\n            this._events = Object.create(null);\n            this._eventsCount = 0;\n        }\n        return this;\n    }\n    /** Remove the listeners of a given event. */\n    off(event, listener, context, once) {\n        return this.removeListener(event, listener, context, once);\n    }\n    /** Add a listener for a given event. */\n    addListener(event, listener, context) {\n        return this.on(event, listener, context);\n    }\n}\nexport default EventEmitter;\n","import { EventEmitter } from '@electrovir/eventemitter3';\nimport logger from './logger.js';\n\nconst debug = logger('quill:events');\nconst EVENTS = ['selectionchange', 'mousedown', 'mouseup', 'click'];\nconst EMITTERS: Emitter[] = [];\n\nEVENTS.forEach((eventName) => {\n  document.addEventListener(eventName, (...args) => {\n    EMITTERS.forEach((em) => {\n      em.handleDOM(...args);\n    });\n  });\n});\n\nclass Emitter extends EventEmitter<string> {\n  static events = {\n    EDITOR_CHANGE: 'editor-change',\n    SCROLL_BEFORE_UPDATE: 'scroll-before-update',\n    SCROLL_BLOT_MOUNT: 'scroll-blot-mount',\n    SCROLL_BLOT_UNMOUNT: 'scroll-blot-unmount',\n    SCROLL_OPTIMIZE: 'scroll-optimize',\n    SCROLL_UPDATE: 'scroll-update',\n    SCROLL_EMBED_UPDATE: 'scroll-embed-update',\n    SELECTION_CHANGE: 'selection-change',\n    TEXT_CHANGE: 'text-change',\n    COMPOSITION_BEFORE_START: 'composition-before-start',\n    COMPOSITION_START: 'composition-start',\n    COMPOSITION_BEFORE_END: 'composition-before-end',\n    COMPOSITION_END: 'composition-end',\n  } as const;\n\n  static sources = {\n    API: 'api',\n    SILENT: 'silent',\n    USER: 'user',\n  } as const;\n\n  protected domListeners: Record<string, { node: Node; handler: Function }[]>;\n\n  constructor() {\n    super();\n    this.domListeners = {};\n    this.on('error', debug.error);\n  }\n\n  connect() {\n    EMITTERS.push(this);\n  }\n\n  disconnect() {\n    EMITTERS.splice(EMITTERS.indexOf(this), 1);\n  }\n\n  emit(...args: unknown[]): boolean {\n    debug.log.call(debug, ...args);\n    // @ts-expect-error\n    return super.emit(...args);\n  }\n\n  handleDOM(event: Event, ...args: unknown[]) {\n    const target = event.composedPath()[0];\n    const containsNode = (node: Node, target: Node) => {\n      if (target.getRootNode() === document) {\n        return node.contains(target);\n      }\n\n      while (!node.contains(target)) {\n        const root = target.getRootNode();\n        if (!root) {\n          return false;\n        }\n        const host = (root as ShadowRoot).host;\n        if (!host) {\n          return false;\n        }\n        target = host;\n      }\n\n      return true;\n    };\n\n    (this.domListeners[event.type] || []).forEach(({ node, handler }) => {\n      if (target === node || containsNode(node, target as Node)) {\n        handler(event, ...args);\n      }\n    });\n  }\n\n  listenDOM(eventName: string, node: Node, handler: EventListener) {\n    if (!this.domListeners[eventName]) {\n      this.domListeners[eventName] = [];\n    }\n    this.domListeners[eventName].push({ node, handler });\n  }\n}\n\nexport type EmitterSource =\n  (typeof Emitter.sources)[keyof typeof Emitter.sources];\n\nexport default Emitter;\n","const levels = ['error', 'warn', 'log', 'info'] as const;\nexport type DebugLevel = (typeof levels)[number];\nlet level: DebugLevel | false = 'warn';\n\nfunction debug(method: DebugLevel, ...args: unknown[]) {\n  if (level) {\n    if (levels.indexOf(method) <= levels.indexOf(level)) {\n      console[method](...args); // eslint-disable-line no-console\n    }\n  }\n}\n\nfunction namespace(\n  ns: string,\n): Record<DebugLevel, (...args: unknown[]) => void> {\n  return levels.reduce(\n    (logger, method) => {\n      logger[method] = debug.bind(console, method, ns);\n      return logger;\n    },\n    {} as Record<DebugLevel, (...args: unknown[]) => void>,\n  );\n}\n\nnamespace.level = (newLevel: DebugLevel | false) => {\n  level = newLevel;\n};\ndebug.level = namespace.level;\n\nexport default namespace;\n","import type Quill from './quill.js';\n\nabstract class Module<T extends {} = {}> {\n  static DEFAULTS = {};\n\n  constructor(\n    public quill: Quill,\n    protected options: Partial<T> = {},\n  ) {}\n}\n\nexport default Module;\n","import { LeafBlot, EmbedBlot, Scope, ParentBlot } from 'parchment';\nimport type { Blot } from 'parchment';\nimport Delta, { AttributeMap, Op } from 'quill-delta-es';\nimport Block, { BlockEmbed, bubbleFormats } from '../blots/block.js';\nimport Break from '../blots/break.js';\nimport CursorBlot from '../blots/cursor.js';\nimport type Scroll from '../blots/scroll.js';\nimport TextBlot, { escapeText } from '../blots/text.js';\nimport { Range } from './selection.js';\nimport cloneDeep from './utils/cloneDeep.js';\nimport isEqual from './utils/isEqual.js';\n\nconst ASCII = /^[ -~]*$/;\n\ntype SelectionInfo = {\n  newRange: Range;\n  oldRange: Range;\n};\n\nclass Editor {\n  scroll: Scroll;\n  delta: Delta;\n\n  constructor(scroll: Scroll) {\n    this.scroll = scroll;\n    this.delta = this.getDelta();\n  }\n\n  applyDelta(delta: Delta): Delta {\n    this.scroll.update();\n    let scrollLength = this.scroll.length();\n    this.scroll.batchStart();\n    const normalizedDelta = normalizeDelta(delta);\n    const deleteDelta = new Delta();\n    const normalizedOps = splitOpLines(normalizedDelta.ops.slice());\n    normalizedOps.reduce((index, op) => {\n      const length = Op.length(op);\n      let attributes = op.attributes || {};\n      let isImplicitNewlinePrepended = false;\n      let isImplicitNewlineAppended = false;\n      if (op.insert != null) {\n        deleteDelta.retain(length);\n        if (typeof op.insert === 'string') {\n          const text = op.insert;\n          isImplicitNewlineAppended =\n            !text.endsWith('\\n') &&\n            (scrollLength <= index ||\n              !!this.scroll.descendant(BlockEmbed, index)[0]);\n          this.scroll.insertAt(index, text);\n          const [line, offset] = this.scroll.line(index);\n          let formats = Object.assign({}, bubbleFormats(line));\n          if (line instanceof Block) {\n            const [leaf] = line.descendant(LeafBlot, offset);\n            if (leaf) {\n              formats = Object.assign(formats, bubbleFormats(leaf));\n            }\n          }\n          attributes = AttributeMap.diff(formats, attributes) || {};\n        } else if (typeof op.insert === 'object') {\n          const key = Object.keys(op.insert)[0]; // There should only be one key\n          if (key == null) return index;\n          const isInlineEmbed = this.scroll.query(key, Scope.INLINE) != null;\n          if (isInlineEmbed) {\n            if (\n              scrollLength <= index ||\n              !!this.scroll.descendant(BlockEmbed, index)[0]\n            ) {\n              isImplicitNewlineAppended = true;\n            }\n          } else if (index > 0) {\n            const [leaf, offset] = this.scroll.descendant(LeafBlot, index - 1);\n            if (leaf instanceof TextBlot) {\n              const text = leaf.value();\n              if (text[offset] !== '\\n') {\n                isImplicitNewlinePrepended = true;\n              }\n            } else if (\n              leaf instanceof EmbedBlot &&\n              leaf.statics.scope === Scope.INLINE_BLOT\n            ) {\n              isImplicitNewlinePrepended = true;\n            }\n          }\n          this.scroll.insertAt(index, key, op.insert[key]);\n\n          if (isInlineEmbed) {\n            const [leaf] = this.scroll.descendant(LeafBlot, index);\n            if (leaf) {\n              const formats = Object.assign({}, bubbleFormats(leaf));\n              attributes = AttributeMap.diff(formats, attributes) || {};\n            }\n          }\n        }\n        scrollLength += length;\n      } else {\n        deleteDelta.push(op);\n\n        if (op.retain !== null && typeof op.retain === 'object') {\n          const key = Object.keys(op.retain)[0];\n          if (key == null) return index;\n          this.scroll.updateEmbedAt(index, key, op.retain[key]);\n        }\n      }\n      Object.keys(attributes).forEach((name) => {\n        this.scroll.formatAt(index, length, name, attributes[name]);\n      });\n      const prependedLength = isImplicitNewlinePrepended ? 1 : 0;\n      const addedLength = isImplicitNewlineAppended ? 1 : 0;\n      scrollLength += prependedLength + addedLength;\n      deleteDelta.retain(prependedLength);\n      deleteDelta.delete(addedLength);\n      return index + length + prependedLength + addedLength;\n    }, 0);\n    deleteDelta.reduce((index, op) => {\n      if (typeof op.delete === 'number') {\n        this.scroll.deleteAt(index, op.delete);\n        return index;\n      }\n      return index + Op.length(op);\n    }, 0);\n    this.scroll.batchEnd();\n    this.scroll.optimize();\n    return this.update(normalizedDelta);\n  }\n\n  deleteText(index: number, length: number): Delta {\n    this.scroll.deleteAt(index, length);\n    return this.update(new Delta().retain(index).delete(length));\n  }\n\n  formatLine(\n    index: number,\n    length: number,\n    formats: Record<string, unknown> = {},\n  ): Delta {\n    this.scroll.update();\n    Object.keys(formats).forEach((format) => {\n      this.scroll.lines(index, Math.max(length, 1)).forEach((line) => {\n        line.format(format, formats[format]);\n      });\n    });\n    this.scroll.optimize();\n    const delta = new Delta().retain(index).retain(length, cloneDeep(formats));\n    return this.update(delta);\n  }\n\n  formatText(\n    index: number,\n    length: number,\n    formats: Record<string, unknown> = {},\n  ): Delta {\n    Object.keys(formats).forEach((format) => {\n      this.scroll.formatAt(index, length, format, formats[format]);\n    });\n    const delta = new Delta().retain(index).retain(length, cloneDeep(formats));\n    return this.update(delta);\n  }\n\n  getContents(index: number, length: number): Delta {\n    return this.delta.slice(index, index + length);\n  }\n\n  getDelta(): Delta {\n    return this.scroll.lines().reduce((delta, line) => {\n      return delta.concat(line.delta());\n    }, new Delta());\n  }\n\n  getFormat(index: number, length = 0): Record<string, unknown> {\n    let lines: (Block | BlockEmbed)[] = [];\n    let leaves: LeafBlot[] = [];\n    if (length === 0) {\n      this.scroll.path(index).forEach((path) => {\n        const [blot] = path;\n        if (blot instanceof Block) {\n          lines.push(blot);\n        } else if (blot instanceof LeafBlot) {\n          leaves.push(blot);\n        }\n      });\n    } else {\n      lines = this.scroll.lines(index, length);\n      leaves = this.scroll.descendants(LeafBlot, index, length);\n    }\n    const [lineFormats, leafFormats] = [lines, leaves].map((blots) => {\n      const blot = blots.shift();\n      if (blot == null) return {};\n      let formats = bubbleFormats(blot);\n      while (Object.keys(formats).length > 0) {\n        const blot = blots.shift();\n        if (blot == null) return formats;\n        formats = combineFormats(bubbleFormats(blot), formats);\n      }\n      return formats;\n    });\n    return { ...lineFormats, ...leafFormats };\n  }\n\n  getHTML(index: number, length: number): string {\n    const [line, lineOffset] = this.scroll.line(index);\n    if (line) {\n      const lineLength = line.length();\n      const isWithinLine = line.length() >= lineOffset + length;\n      if (isWithinLine && !(lineOffset === 0 && length === lineLength)) {\n        return convertHTML(line, lineOffset, length, true);\n      }\n      return convertHTML(this.scroll, index, length, true);\n    }\n    return '';\n  }\n\n  getText(index: number, length: number): string {\n    return this.getContents(index, length)\n      .filter((op) => typeof op.insert === 'string')\n      .map((op) => op.insert)\n      .join('');\n  }\n\n  insertContents(index: number, contents: Delta): Delta {\n    const normalizedDelta = normalizeDelta(contents);\n    const change = new Delta().retain(index).concat(normalizedDelta);\n    this.scroll.insertContents(index, normalizedDelta);\n    return this.update(change);\n  }\n\n  insertEmbed(index: number, embed: string, value: unknown): Delta {\n    this.scroll.insertAt(index, embed, value);\n    return this.update(new Delta().retain(index).insert({ [embed]: value }));\n  }\n\n  insertText(\n    index: number,\n    text: string,\n    formats: Record<string, unknown> = {},\n  ): Delta {\n    text = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n    this.scroll.insertAt(index, text);\n    Object.keys(formats).forEach((format) => {\n      this.scroll.formatAt(index, text.length, format, formats[format]);\n    });\n    return this.update(\n      new Delta().retain(index).insert(text, cloneDeep(formats)),\n    );\n  }\n\n  isBlank(): boolean {\n    if (this.scroll.children.length === 0) return true;\n    if (this.scroll.children.length > 1) return false;\n    const blot = this.scroll.children.head;\n    if (blot?.statics.blotName !== Block.blotName) return false;\n    const block = blot as Block;\n    if (block.children.length > 1) return false;\n    return block.children.head instanceof Break;\n  }\n\n  removeFormat(index: number, length: number): Delta {\n    const text = this.getText(index, length);\n    const [line, offset] = this.scroll.line(index + length);\n    let suffixLength = 0;\n    let suffix = new Delta();\n    if (line != null) {\n      suffixLength = line.length() - offset;\n      suffix = line\n        .delta()\n        .slice(offset, offset + suffixLength - 1)\n        .insert('\\n');\n    }\n    const contents = this.getContents(index, length + suffixLength);\n    const diff = contents.diff(new Delta().insert(text).concat(suffix));\n    const delta = new Delta().retain(index).concat(diff);\n    return this.applyDelta(delta);\n  }\n\n  update(\n    change: Delta | null,\n    mutations: MutationRecord[] = [],\n    selectionInfo: SelectionInfo | undefined = undefined,\n  ): Delta {\n    const oldDelta = this.delta;\n    if (\n      mutations.length === 1 &&\n      mutations[0].type === 'characterData' &&\n      // @ts-expect-error Fix me later\n      mutations[0].target.data.match(ASCII) &&\n      this.scroll.find(mutations[0].target)\n    ) {\n      // Optimization for character changes\n      const textBlot = this.scroll.find(mutations[0].target) as Blot;\n      const formats = bubbleFormats(textBlot);\n      const index = textBlot.offset(this.scroll);\n      // @ts-expect-error Fix me later\n      const oldValue = mutations[0].oldValue.replace(CursorBlot.CONTENTS, '');\n      const oldText = new Delta().insert(oldValue);\n      // @ts-expect-error\n      const newText = new Delta().insert(textBlot.value());\n      const relativeSelectionInfo = selectionInfo && {\n        oldRange: shiftRange(selectionInfo.oldRange, -index),\n        newRange: shiftRange(selectionInfo.newRange, -index),\n      };\n      const diffDelta = new Delta()\n        .retain(index)\n        .concat(oldText.diff(newText, relativeSelectionInfo));\n      change = diffDelta.reduce((delta, op) => {\n        if (op.insert) {\n          return delta.insert(op.insert, formats);\n        }\n        return delta.push(op);\n      }, new Delta());\n      this.delta = oldDelta.compose(change);\n    } else {\n      this.delta = this.getDelta();\n      if (!change || !isEqual(oldDelta.compose(change), this.delta)) {\n        change = oldDelta.diff(this.delta, selectionInfo);\n      }\n    }\n    return change;\n  }\n}\n\ninterface ListItem {\n  child: Blot;\n  offset: number;\n  length: number;\n  indent: number;\n  type: string;\n}\nfunction convertListHTML(\n  items: ListItem[],\n  lastIndent: number,\n  types: string[],\n): string {\n  if (items.length === 0) {\n    const [endTag] = getListType(types.pop());\n    if (lastIndent <= 0) {\n      return `</li></${endTag}>`;\n    }\n    return `</li></${endTag}>${convertListHTML([], lastIndent - 1, types)}`;\n  }\n  const [{ child, offset, length, indent, type }, ...rest] = items;\n  const [tag, attribute] = getListType(type);\n  if (indent > lastIndent) {\n    types.push(type);\n    if (indent === lastIndent + 1) {\n      return `<${tag}><li${attribute}>${convertHTML(\n        child,\n        offset,\n        length,\n      )}${convertListHTML(rest, indent, types)}`;\n    }\n    return `<${tag}><li>${convertListHTML(items, lastIndent + 1, types)}`;\n  }\n  const previousType = types[types.length - 1];\n  if (indent === lastIndent && type === previousType) {\n    return `</li><li${attribute}>${convertHTML(\n      child,\n      offset,\n      length,\n    )}${convertListHTML(rest, indent, types)}`;\n  }\n  const [endTag] = getListType(types.pop());\n  return `</li></${endTag}>${convertListHTML(items, lastIndent - 1, types)}`;\n}\n\nfunction convertHTML(\n  blot: Blot,\n  index: number,\n  length: number,\n  isRoot = false,\n): string {\n  if ('html' in blot && typeof blot.html === 'function') {\n    return blot.html(index, length);\n  }\n  if (blot instanceof TextBlot) {\n    const escapedText = escapeText(blot.value().slice(index, index + length));\n    // Based on https://github.com/slab/quill/issues/4509#issuecomment-2521334016\n    return escapedText.replaceAll(\n      /  +/g,\n      (match) => '&nbsp;'.repeat(match.length - 1) + ' ',\n    );\n  }\n  if (blot instanceof ParentBlot) {\n    // TODO fix API\n    if (blot.statics.blotName === 'list-container') {\n      const items: any[] = [];\n      blot.children.forEachAt(index, length, (child, offset, childLength) => {\n        const formats =\n          'formats' in child && typeof child.formats === 'function'\n            ? child.formats()\n            : {};\n        items.push({\n          child,\n          offset,\n          length: childLength,\n          indent: formats.indent || 0,\n          type: formats.list,\n        });\n      });\n      return convertListHTML(items, -1, []);\n    }\n    const parts: string[] = [];\n    blot.children.forEachAt(index, length, (child, offset, childLength) => {\n      parts.push(convertHTML(child, offset, childLength));\n    });\n    if (isRoot || blot.statics.blotName === 'list') {\n      return parts.join('');\n    }\n    const { outerHTML, innerHTML } = blot.domNode as Element;\n    const [start, end] = outerHTML.split(`>${innerHTML}<`);\n    // TODO cleanup\n    if (start === '<table') {\n      return `<table style=\"border: 1px solid #000;\">${parts.join('')}<${end}`;\n    }\n    return `${start}>${parts.join('')}<${end}`;\n  }\n  return blot.domNode instanceof Element ? blot.domNode.outerHTML : '';\n}\n\nfunction combineFormats(\n  formats: Record<string, unknown>,\n  combined: Record<string, unknown>,\n): Record<string, unknown> {\n  return Object.keys(combined).reduce(\n    (merged, name) => {\n      if (formats[name] == null) return merged;\n      const combinedValue = combined[name];\n      if (combinedValue === formats[name]) {\n        merged[name] = combinedValue;\n      } else if (Array.isArray(combinedValue)) {\n        if (combinedValue.indexOf(formats[name]) < 0) {\n          merged[name] = combinedValue.concat([formats[name]]);\n        } else {\n          // If style already exists, don't add to an array, but don't lose other styles\n          merged[name] = combinedValue;\n        }\n      } else {\n        merged[name] = [combinedValue, formats[name]];\n      }\n      return merged;\n    },\n    {} as Record<string, unknown>,\n  );\n}\n\nfunction getListType(type: string | undefined) {\n  const tag = type === 'ordered' ? 'ol' : 'ul';\n  switch (type) {\n    case 'checked':\n      return [tag, ' data-list=\"checked\"'];\n    case 'unchecked':\n      return [tag, ' data-list=\"unchecked\"'];\n    default:\n      return [tag, ''];\n  }\n}\n\nfunction normalizeDelta(delta: Delta) {\n  return delta.reduce((normalizedDelta, op) => {\n    if (typeof op.insert === 'string') {\n      const text = op.insert.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n      return normalizedDelta.insert(text, op.attributes);\n    }\n    return normalizedDelta.push(op);\n  }, new Delta());\n}\n\nfunction shiftRange({ index, length }: Range, amount: number) {\n  return new Range(index + amount, length);\n}\n\nfunction splitOpLines(ops: Op[]) {\n  const split: Op[] = [];\n  ops.forEach((op) => {\n    if (typeof op.insert === 'string') {\n      const lines = op.insert.split('\\n');\n      lines.forEach((line, index) => {\n        if (index) split.push({ insert: '\\n', attributes: op.attributes });\n        if (line) split.push({ insert: line, attributes: op.attributes });\n      });\n    } else {\n      split.push(op);\n    }\n  });\n\n  return split;\n}\n\nexport default Editor;\n","import type Quill from '../core.js';\n\nexport default new WeakMap<Node, Quill>();\n","import Embed from '../blots/embed.js';\nimport type Scroll from '../blots/scroll.js';\nimport Emitter from './emitter.js';\n\nclass Composition {\n  isComposing = false;\n\n  constructor(\n    private scroll: Scroll,\n    private emitter: Emitter,\n  ) {\n    this.setupListeners();\n  }\n\n  private setupListeners() {\n    this.scroll.domNode.addEventListener('compositionstart', (event) => {\n      if (!this.isComposing) {\n        this.handleCompositionStart(event);\n      }\n    });\n\n    this.scroll.domNode.addEventListener('compositionend', (event) => {\n      if (this.isComposing) {\n        // Webkit makes DOM changes after compositionend, so we use microtask to\n        // ensure the order.\n        // https://bugs.webkit.org/show_bug.cgi?id=31902\n        queueMicrotask(() => {\n          this.handleCompositionEnd(event);\n        });\n      }\n    });\n  }\n\n  private handleCompositionStart(event: CompositionEvent) {\n    const blot =\n      event.target instanceof Node\n        ? this.scroll.find(event.target, true)\n        : null;\n\n    if (blot && !(blot instanceof Embed)) {\n      this.emitter.emit(Emitter.events.COMPOSITION_BEFORE_START, event);\n      this.scroll.batchStart();\n      this.emitter.emit(Emitter.events.COMPOSITION_START, event);\n      this.isComposing = true;\n    }\n  }\n\n  private handleCompositionEnd(event: CompositionEvent) {\n    this.emitter.emit(Emitter.events.COMPOSITION_BEFORE_END, event);\n    this.scroll.batchEnd();\n    this.emitter.emit(Emitter.events.COMPOSITION_END, event);\n    this.isComposing = false;\n  }\n}\n\nexport default Composition;\n","export type Rect = {\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n};\n\nconst getParentElement = (element: Node): Element | null =>\n  element.parentElement || (element.getRootNode() as ShadowRoot).host || null;\n\nconst getElementRect = (element: Element): Rect => {\n  const rect = element.getBoundingClientRect();\n  const scaleX =\n    ('offsetWidth' in element &&\n      Math.abs(rect.width) / (element as HTMLElement).offsetWidth) ||\n    1;\n  const scaleY =\n    ('offsetHeight' in element &&\n      Math.abs(rect.height) / (element as HTMLElement).offsetHeight) ||\n    1;\n  return {\n    top: rect.top,\n    right: rect.left + element.clientWidth * scaleX,\n    bottom: rect.top + element.clientHeight * scaleY,\n    left: rect.left,\n  };\n};\n\nconst paddingValueToInt = (value: string) => {\n  const number = parseInt(value, 10);\n  return Number.isNaN(number) ? 0 : number;\n};\n\n// Follow the steps described in https://www.w3.org/TR/cssom-view-1/#element-scrolling-members,\n// assuming that the scroll option is set to 'nearest'.\nconst getScrollDistance = (\n  targetStart: number,\n  targetEnd: number,\n  scrollStart: number,\n  scrollEnd: number,\n  scrollPaddingStart: number,\n  scrollPaddingEnd: number,\n) => {\n  if (targetStart < scrollStart && targetEnd > scrollEnd) {\n    return 0;\n  }\n\n  if (targetStart < scrollStart) {\n    return -(scrollStart - targetStart + scrollPaddingStart);\n  }\n\n  if (targetEnd > scrollEnd) {\n    return targetEnd - targetStart > scrollEnd - scrollStart\n      ? targetStart + scrollPaddingStart - scrollStart\n      : targetEnd - scrollEnd + scrollPaddingEnd;\n  }\n  return 0;\n};\n\nconst scrollRectIntoView = (root: HTMLElement, targetRect: Rect) => {\n  const document = root.ownerDocument;\n\n  let rect = targetRect;\n\n  let current: Element | null = root;\n  while (current) {\n    const isDocumentBody: boolean = current === document.body;\n    const bounding = isDocumentBody\n      ? {\n          top: 0,\n          right:\n            window.visualViewport?.width ??\n            document.documentElement.clientWidth,\n          bottom:\n            window.visualViewport?.height ??\n            document.documentElement.clientHeight,\n          left: 0,\n        }\n      : getElementRect(current);\n\n    const style = getComputedStyle(current);\n    const scrollDistanceX = getScrollDistance(\n      rect.left,\n      rect.right,\n      bounding.left,\n      bounding.right,\n      paddingValueToInt(style.scrollPaddingLeft),\n      paddingValueToInt(style.scrollPaddingRight),\n    );\n    const scrollDistanceY = getScrollDistance(\n      rect.top,\n      rect.bottom,\n      bounding.top,\n      bounding.bottom,\n      paddingValueToInt(style.scrollPaddingTop),\n      paddingValueToInt(style.scrollPaddingBottom),\n    );\n    if (scrollDistanceX || scrollDistanceY) {\n      if (isDocumentBody) {\n        document.defaultView?.scrollBy(scrollDistanceX, scrollDistanceY);\n      } else {\n        const { scrollLeft, scrollTop } = current;\n        if (scrollDistanceY) {\n          current.scrollTop += scrollDistanceY;\n        }\n        if (scrollDistanceX) {\n          current.scrollLeft += scrollDistanceX;\n        }\n        const scrolledLeft = current.scrollLeft - scrollLeft;\n        const scrolledTop = current.scrollTop - scrollTop;\n        rect = {\n          left: rect.left - scrolledLeft,\n          top: rect.top - scrolledTop,\n          right: rect.right - scrolledLeft,\n          bottom: rect.bottom - scrolledTop,\n        };\n      }\n    }\n\n    current =\n      isDocumentBody || style.position === 'fixed'\n        ? null\n        : getParentElement(current);\n  }\n};\n\nexport default scrollRectIntoView;\n","import { Registry } from 'parchment';\n\nconst MAX_REGISTER_ITERATIONS = 100;\nconst CORE_FORMATS = ['block', 'break', 'cursor', 'inline', 'scroll', 'text'];\n\nconst createRegistryWithFormats = (\n  formats: string[],\n  sourceRegistry: Registry,\n  debug: { error: (errorMessage: string) => void },\n) => {\n  const registry = new Registry();\n  CORE_FORMATS.forEach((name) => {\n    const coreBlot = sourceRegistry.query(name);\n    if (coreBlot) registry.register(coreBlot);\n  });\n\n  formats.forEach((name) => {\n    let format = sourceRegistry.query(name);\n    if (!format) {\n      debug.error(\n        `Cannot register \"${name}\" specified in \"formats\" config. Are you sure it was registered?`,\n      );\n    }\n    let iterations = 0;\n    while (format) {\n      registry.register(format);\n      format = 'blotName' in format ? format.requiredContainer ?? null : null;\n\n      iterations += 1;\n      if (iterations > MAX_REGISTER_ITERATIONS) {\n        debug.error(\n          `Cycle detected in registering blot requiredContainer: \"${name}\"`,\n        );\n        break;\n      }\n    }\n  });\n\n  return registry;\n};\n\nexport default createRegistryWithFormats;\n","import * as Parchment from 'parchment';\nimport type { Op } from 'quill-delta-es';\nimport Delta from 'quill-delta-es';\nimport type { BlockEmbed } from '../blots/block.js';\nimport type Block from '../blots/block.js';\nimport type Scroll from '../blots/scroll.js';\nimport type Clipboard from '../modules/clipboard.js';\nimport type History from '../modules/history.js';\nimport type Keyboard from '../modules/keyboard.js';\nimport type Uploader from '../modules/uploader.js';\nimport Editor from './editor.js';\nimport Emitter from './emitter.js';\nimport type { EmitterSource } from './emitter.js';\nimport instances from './instances.js';\nimport logger from './logger.js';\nimport type { DebugLevel } from './logger.js';\nimport Module from './module.js';\nimport Selection, { Range } from './selection.js';\nimport type { Bounds } from './selection.js';\nimport Composition from './composition.js';\nimport Theme from './theme.js';\nimport type { ThemeConstructor } from './theme.js';\nimport scrollRectIntoView from './utils/scrollRectIntoView.js';\nimport type { Rect } from './utils/scrollRectIntoView.js';\nimport createRegistryWithFormats from './utils/createRegistryWithFormats.js';\n\nconst debug = logger('quill');\n\nconst globalRegistry = new Parchment.Registry();\nParchment.ParentBlot.uiClass = 'ql-ui';\n\n/**\n * Options for initializing a Quill instance\n */\nexport interface QuillOptions {\n  theme?: string;\n  debug?: DebugLevel | boolean;\n  registry?: Parchment.Registry;\n  /**\n   * Whether to disable the editing\n   * @default false\n   */\n  readOnly?: boolean;\n\n  /**\n   * Placeholder text to display when the editor is empty\n   * @default \"\"\n   */\n  placeholder?: string;\n  bounds?: HTMLElement | string | null;\n  modules?: Record<string, unknown>;\n\n  /**\n   * A list of formats that are recognized and can exist within the editor contents.\n   * `null` means all formats are allowed.\n   * @default null\n   */\n  formats?: string[] | null;\n}\n\n/**\n * Similar to QuillOptions, but with all properties expanded to their default values,\n * and all selectors resolved to HTMLElements.\n */\nexport interface ExpandedQuillOptions\n  extends Omit<QuillOptions, 'theme' | 'formats'> {\n  theme: ThemeConstructor;\n  registry: Parchment.Registry;\n  container: HTMLElement;\n  modules: Record<string, unknown>;\n  bounds?: HTMLElement | null;\n  readOnly: boolean;\n}\n\nclass Quill {\n  static DEFAULTS = {\n    bounds: null,\n    modules: {\n      clipboard: true,\n      keyboard: true,\n      history: true,\n      uploader: true,\n    },\n    placeholder: '',\n    readOnly: false,\n    registry: globalRegistry,\n    theme: 'default',\n  } satisfies Partial<QuillOptions>;\n  static events = Emitter.events;\n  static sources = Emitter.sources;\n  static version = typeof QUILL_VERSION === 'undefined' ? 'dev' : QUILL_VERSION;\n\n  static imports: Record<string, unknown> = {\n    delta: Delta,\n    parchment: Parchment,\n    'core/module': Module,\n    'core/theme': Theme,\n  };\n\n  static debug(limit: DebugLevel | boolean) {\n    if (limit === true) {\n      limit = 'log';\n    }\n    logger.level(limit);\n  }\n\n  static find(node: Node, bubble = false) {\n    return instances.get(node) || globalRegistry.find(node, bubble);\n  }\n\n  static import(name: 'core/module'): typeof Module;\n  static import(name: `themes/${string}`): typeof Theme;\n  static import(name: 'parchment'): typeof Parchment;\n  static import(name: 'delta'): typeof Delta;\n  static import(name: string): unknown;\n  static import(name: string) {\n    if (this.imports[name] == null) {\n      debug.error(`Cannot import ${name}. Are you sure it was registered?`);\n    }\n    return this.imports[name];\n  }\n\n  static register(\n    targets: Record<\n      string,\n      | Parchment.RegistryDefinition\n      | Record<string, unknown> // any objects\n      | Theme\n      | Module\n      | Function // ES5 constructors\n    >,\n    overwrite?: boolean,\n  ): void;\n  static register(\n    target: Parchment.RegistryDefinition,\n    overwrite?: boolean,\n  ): void;\n  static register(path: string, target: any, overwrite?: boolean): void;\n  static register(...args: any[]): void {\n    if (typeof args[0] !== 'string') {\n      const target = args[0];\n      const overwrite = !!args[1];\n\n      const name = 'attrName' in target ? target.attrName : target.blotName;\n      if (typeof name === 'string') {\n        // Shortcut for formats:\n        // register(Blot | Attributor, overwrite)\n        this.register(`formats/${name}`, target, overwrite);\n      } else {\n        Object.keys(target).forEach((key) => {\n          this.register(key, target[key], overwrite);\n        });\n      }\n    } else {\n      const path = args[0];\n      const target = args[1];\n      const overwrite = !!args[2];\n\n      if (this.imports[path] != null && !overwrite) {\n        debug.warn(`Overwriting ${path} with`, target);\n      }\n      this.imports[path] = target;\n      if (\n        (path.startsWith('blots/') || path.startsWith('formats/')) &&\n        target &&\n        typeof target !== 'boolean' &&\n        target.blotName !== 'abstract'\n      ) {\n        globalRegistry.register(target);\n      }\n      if (typeof target.register === 'function') {\n        target.register(globalRegistry);\n      }\n    }\n  }\n\n  container: HTMLElement;\n  root: HTMLDivElement;\n  scroll: Scroll;\n  emitter: Emitter;\n  protected allowReadOnlyEdits: boolean;\n  editor: Editor;\n  composition: Composition;\n  selection: Selection;\n\n  theme: Theme;\n  keyboard: Keyboard;\n  clipboard: Clipboard;\n  history: History;\n  uploader: Uploader;\n\n  options: ExpandedQuillOptions;\n\n  constructor(container: HTMLElement | string, options: QuillOptions = {}) {\n    this.options = expandConfig(container, options);\n    this.container = this.options.container;\n    if (this.container == null) {\n      debug.error('Invalid Quill container', container);\n      return;\n    }\n    if (this.options.debug) {\n      Quill.debug(this.options.debug);\n    }\n    const html = this.container.innerHTML.trim();\n    this.container.classList.add('ql-container');\n    this.container.innerHTML = '';\n    instances.set(this.container, this);\n    this.root = this.addContainer('ql-editor');\n    this.root.classList.add('ql-blank');\n    this.emitter = new Emitter();\n    const scrollBlotName = Parchment.ScrollBlot.blotName;\n    const ScrollBlot = this.options.registry.query(scrollBlotName);\n    if (!ScrollBlot || !('blotName' in ScrollBlot)) {\n      throw new Error(\n        `Cannot initialize Quill without \"${scrollBlotName}\" blot`,\n      );\n    }\n    this.scroll = new ScrollBlot(this.options.registry, this.root, {\n      emitter: this.emitter,\n    }) as Scroll;\n    this.editor = new Editor(this.scroll);\n    this.selection = new Selection(this.scroll, this.emitter);\n    this.composition = new Composition(this.scroll, this.emitter);\n    this.theme = new this.options.theme(this, this.options); // eslint-disable-line new-cap\n    this.keyboard = this.theme.addModule('keyboard');\n    this.clipboard = this.theme.addModule('clipboard');\n    this.history = this.theme.addModule('history');\n    this.uploader = this.theme.addModule('uploader');\n    this.theme.addModule('input');\n    this.theme.addModule('uiNode');\n    this.theme.init();\n    this.emitter.on(Emitter.events.EDITOR_CHANGE, (type) => {\n      if (type === Emitter.events.TEXT_CHANGE) {\n        this.root.classList.toggle('ql-blank', this.editor.isBlank());\n      }\n    });\n    this.emitter.on(Emitter.events.SCROLL_UPDATE, (source, mutations) => {\n      const oldRange = this.selection.lastRange;\n      const [newRange] = this.selection.getRange();\n      const selectionInfo =\n        oldRange && newRange ? { oldRange, newRange } : undefined;\n      modify.call(\n        this,\n        () => this.editor.update(null, mutations, selectionInfo),\n        source,\n      );\n    });\n    this.emitter.on(Emitter.events.SCROLL_EMBED_UPDATE, (blot, delta) => {\n      const oldRange = this.selection.lastRange;\n      const [newRange] = this.selection.getRange();\n      const selectionInfo =\n        oldRange && newRange ? { oldRange, newRange } : undefined;\n      modify.call(\n        this,\n        () => {\n          const change = new Delta()\n            .retain(blot.offset(this))\n            .retain({ [blot.statics.blotName]: delta });\n          return this.editor.update(change, [], selectionInfo);\n        },\n        Quill.sources.USER,\n      );\n    });\n    if (html) {\n      const contents = this.clipboard.convert({\n        html: `${html}<p><br></p>`,\n        text: '\\n',\n      });\n      this.setContents(contents);\n    }\n    this.history.clear();\n    if (this.options.placeholder) {\n      this.root.setAttribute('data-placeholder', this.options.placeholder);\n    }\n    if (this.options.readOnly) {\n      this.disable();\n    }\n    this.allowReadOnlyEdits = false;\n  }\n\n  addContainer(container: string, refNode?: Node | null): HTMLDivElement;\n  addContainer(container: HTMLElement, refNode?: Node | null): HTMLElement;\n  addContainer(\n    container: string | HTMLElement,\n    refNode: Node | null = null,\n  ): HTMLDivElement | HTMLElement {\n    if (typeof container === 'string') {\n      const className = container;\n      container = document.createElement('div');\n      container.classList.add(className);\n    }\n    this.container.insertBefore(container, refNode);\n    return container;\n  }\n\n  blur() {\n    this.selection.setRange(null);\n  }\n\n  deleteText(range: Range, source?: EmitterSource): Delta;\n  deleteText(index: number, length: number, source?: EmitterSource): Delta;\n  deleteText(\n    index: number | Range,\n    length?: number | EmitterSource,\n    source?: EmitterSource,\n  ): Delta {\n    // @ts-expect-error\n    [index, length, , source] = overload(index, length, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.deleteText(index, length);\n      },\n      source,\n      index,\n      -1 * length,\n    );\n  }\n\n  disable() {\n    this.enable(false);\n  }\n\n  editReadOnly<T>(modifier: () => T): T {\n    this.allowReadOnlyEdits = true;\n    const value = modifier();\n    this.allowReadOnlyEdits = false;\n    return value;\n  }\n\n  enable(enabled = true) {\n    this.scroll.enable(enabled);\n    this.container.classList.toggle('ql-disabled', !enabled);\n  }\n\n  focus(options: { preventScroll?: boolean } = {}) {\n    this.selection.focus();\n    if (!options.preventScroll) {\n      this.scrollSelectionIntoView();\n    }\n  }\n\n  format(\n    name: string,\n    value: unknown,\n    source: EmitterSource = Emitter.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        if (!this.hasFocus()) {\n          this.root.focus({ preventScroll: true });\n          const args = this.selection.rangeToNative(this.selection.savedRange);\n          this.selection.setNativeRange(...args);\n        }\n        const [range] = this.selection.getRange(); // quill.getSelection triggers update\n        let change = new Delta();\n        if (range == null) return change;\n        if (this.scroll.query(name, Parchment.Scope.BLOCK)) {\n          change = this.editor.formatLine(range.index, range.length, {\n            [name]: value,\n          });\n        } else if (range.length === 0) {\n          this.selection.format(name, value);\n          return change;\n        } else {\n          change = this.editor.formatText(range.index, range.length, {\n            [name]: value,\n          });\n        }\n        this.setSelection(range, Emitter.sources.SILENT);\n        return change;\n      },\n      source,\n    );\n  }\n\n  formatLine(\n    index: number,\n    length: number,\n    formats: Record<string, unknown>,\n    source?: EmitterSource,\n  ): Delta;\n  formatLine(\n    index: number,\n    length: number,\n    name: string,\n    value?: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  formatLine(\n    index: number,\n    length: number,\n    name: string | Record<string, unknown>,\n    value?: unknown | EmitterSource,\n    source?: EmitterSource,\n  ): Delta {\n    let formats: Record<string, unknown>;\n    // eslint-disable-next-line prefer-const\n    [index, length, formats, source] = overload(\n      index,\n      length,\n      // @ts-expect-error\n      name,\n      value,\n      source,\n    );\n    return modify.call(\n      this,\n      () => {\n        return this.editor.formatLine(index, length, formats);\n      },\n      source,\n      index,\n      0,\n    );\n  }\n\n  formatText(\n    range: Range,\n    name: string,\n    value: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  formatText(\n    index: number,\n    length: number,\n    name: string,\n    value: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  formatText(\n    index: number,\n    length: number,\n    formats: Record<string, unknown>,\n    source?: EmitterSource,\n  ): Delta;\n  formatText(\n    index: number | Range,\n    length: number | string,\n    name: string | unknown,\n    value?: unknown | EmitterSource,\n    source?: EmitterSource,\n  ): Delta {\n    let formats: Record<string, unknown>;\n    // eslint-disable-next-line prefer-const\n    [index, length, formats, source] = overload(\n      // @ts-expect-error\n      index,\n      length,\n      name,\n      value,\n      source,\n    );\n    return modify.call(\n      this,\n      () => {\n        return this.editor.formatText(index, length, formats);\n      },\n      source,\n      index,\n      0,\n    );\n  }\n\n  getBounds(index: number | Range, length = 0): Bounds | null {\n    let bounds: Bounds | null = null;\n    if (typeof index === 'number') {\n      bounds = this.selection.getBounds(index, length);\n    } else {\n      bounds = this.selection.getBounds(index.index, index.length);\n    }\n    if (!bounds) return null;\n    const containerBounds = this.container.getBoundingClientRect();\n    return {\n      bottom: bounds.bottom - containerBounds.top,\n      height: bounds.height,\n      left: bounds.left - containerBounds.left,\n      right: bounds.right - containerBounds.left,\n      top: bounds.top - containerBounds.top,\n      width: bounds.width,\n    };\n  }\n\n  getContents(index = 0, length = this.getLength() - index) {\n    [index, length] = overload(index, length);\n    return this.editor.getContents(index, length);\n  }\n\n  getFormat(index?: number, length?: number): { [format: string]: unknown };\n  getFormat(range?: Range): {\n    [format: string]: unknown;\n  };\n  getFormat(\n    index: Range | number = this.getSelection(true),\n    length = 0,\n  ): { [format: string]: unknown } {\n    if (typeof index === 'number') {\n      return this.editor.getFormat(index, length);\n    }\n    return this.editor.getFormat(index.index, index.length);\n  }\n\n  getIndex(blot: Parchment.Blot) {\n    return blot.offset(this.scroll);\n  }\n\n  getLength() {\n    return this.scroll.length();\n  }\n\n  getLeaf(index: number) {\n    return this.scroll.leaf(index);\n  }\n\n  getLine(index: number) {\n    return this.scroll.line(index);\n  }\n\n  getLines(range: Range): (Block | BlockEmbed)[];\n  getLines(index?: number, length?: number): (Block | BlockEmbed)[];\n  getLines(\n    index: Range | number = 0,\n    length = Number.MAX_VALUE,\n  ): (Block | BlockEmbed)[] {\n    if (typeof index !== 'number') {\n      return this.scroll.lines(index.index, index.length);\n    }\n    return this.scroll.lines(index, length);\n  }\n\n  getModule(name: string) {\n    return this.theme.modules[name];\n  }\n\n  getSelection(focus: true): Range;\n  getSelection(focus?: boolean): Range | null;\n  getSelection(focus = false): Range | null {\n    if (focus) this.focus();\n    this.update(); // Make sure we access getRange with editor in consistent state\n    return this.selection.getRange()[0];\n  }\n\n  getSemanticHTML(range: Range): string;\n  getSemanticHTML(index?: number, length?: number): string;\n  getSemanticHTML(index: Range | number = 0, length?: number) {\n    if (typeof index === 'number') {\n      length = length ?? this.getLength() - index;\n    }\n    // @ts-expect-error\n    [index, length] = overload(index, length);\n    return this.editor.getHTML(index, length);\n  }\n\n  getText(range?: Range): string;\n  getText(index?: number, length?: number): string;\n  getText(index: Range | number = 0, length?: number): string {\n    if (typeof index === 'number') {\n      length = length ?? this.getLength() - index;\n    }\n    // @ts-expect-error\n    [index, length] = overload(index, length);\n    return this.editor.getText(index, length);\n  }\n\n  hasFocus() {\n    return this.selection.hasFocus();\n  }\n\n  insertEmbed(\n    index: number,\n    embed: string,\n    value: unknown,\n    source: EmitterSource = Quill.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        return this.editor.insertEmbed(index, embed, value);\n      },\n      source,\n      index,\n    );\n  }\n\n  insertText(index: number, text: string, source?: EmitterSource): Delta;\n  insertText(\n    index: number,\n    text: string,\n    formats: Record<string, unknown>,\n    source?: EmitterSource,\n  ): Delta;\n  insertText(\n    index: number,\n    text: string,\n    name: string,\n    value: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  insertText(\n    index: number,\n    text: string,\n    name?: string | Record<string, unknown> | EmitterSource,\n    value?: unknown,\n    source?: EmitterSource,\n  ): Delta {\n    let formats: Record<string, unknown>;\n    // eslint-disable-next-line prefer-const\n    // @ts-expect-error\n    [index, , formats, source] = overload(index, 0, name, value, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.insertText(index, text, formats);\n      },\n      source,\n      index,\n      text.length,\n    );\n  }\n\n  isEnabled() {\n    return this.scroll.isEnabled();\n  }\n\n  off(...args: Parameters<(typeof Emitter)['prototype']['off']>) {\n    return this.emitter.off(...args);\n  }\n\n  on(\n    event: (typeof Emitter)['events']['TEXT_CHANGE'],\n    handler: (delta: Delta, oldContent: Delta, source: EmitterSource) => void,\n  ): Emitter;\n  on(\n    event: (typeof Emitter)['events']['SELECTION_CHANGE'],\n    handler: (range: Range, oldRange: Range, source: EmitterSource) => void,\n  ): Emitter;\n  on(\n    event: (typeof Emitter)['events']['EDITOR_CHANGE'],\n    handler: (\n      ...args:\n        | [\n            (typeof Emitter)['events']['TEXT_CHANGE'],\n            Delta,\n            Delta,\n            EmitterSource,\n          ]\n        | [\n            (typeof Emitter)['events']['SELECTION_CHANGE'],\n            Range,\n            Range,\n            EmitterSource,\n          ]\n    ) => void,\n  ): Emitter;\n  on(event: string, ...args: unknown[]): Emitter;\n  on(...args: Parameters<(typeof Emitter)['prototype']['on']>): Emitter {\n    return this.emitter.on(...args);\n  }\n\n  once(...args: Parameters<(typeof Emitter)['prototype']['once']>) {\n    return this.emitter.once(...args);\n  }\n\n  removeFormat(index: number, length: number, source?: EmitterSource): Delta {\n    [index, length, , source] = overload(index, length, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.removeFormat(index, length);\n      },\n      source,\n      index,\n    );\n  }\n\n  scrollRectIntoView(rect: Rect) {\n    scrollRectIntoView(this.root, rect);\n  }\n\n  /**\n   * @deprecated Use Quill#scrollSelectionIntoView() instead.\n   */\n  scrollIntoView() {\n    console.warn(\n      'Quill#scrollIntoView() has been deprecated and will be removed in the near future. Please use Quill#scrollSelectionIntoView() instead.',\n    );\n    this.scrollSelectionIntoView();\n  }\n\n  /**\n   * Scroll the current selection into the visible area.\n   * If the selection is already visible, no scrolling will occur.\n   */\n  scrollSelectionIntoView() {\n    const range = this.selection.lastRange;\n    const bounds = range && this.selection.getBounds(range.index, range.length);\n    if (bounds) {\n      this.scrollRectIntoView(bounds);\n    }\n  }\n\n  setContents(\n    delta: Delta | Op[],\n    source: EmitterSource = Emitter.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        delta = new Delta(delta);\n        const length = this.getLength();\n        // Quill will set empty editor to \\n\n        const delete1 = this.editor.deleteText(0, length);\n        const applied = this.editor.insertContents(0, delta);\n        // Remove extra \\n from empty editor initialization\n        const delete2 = this.editor.deleteText(this.getLength() - 1, 1);\n        return delete1.compose(applied).compose(delete2);\n      },\n      source,\n    );\n  }\n  setSelection(range: Range | null, source?: EmitterSource): void;\n  setSelection(index: number, source?: EmitterSource): void;\n  setSelection(index: number, length?: number, source?: EmitterSource): void;\n  setSelection(index: number, source?: EmitterSource): void;\n  setSelection(\n    index: Range | null | number,\n    length?: EmitterSource | number,\n    source?: EmitterSource,\n  ): void {\n    if (index == null) {\n      // @ts-expect-error https://github.com/microsoft/TypeScript/issues/22609\n      this.selection.setRange(null, length || Quill.sources.API);\n    } else {\n      // @ts-expect-error\n      [index, length, , source] = overload(index, length, source);\n      this.selection.setRange(new Range(Math.max(0, index), length), source);\n      if (source !== Emitter.sources.SILENT) {\n        this.scrollSelectionIntoView();\n      }\n    }\n  }\n\n  setText(text: string, source: EmitterSource = Emitter.sources.API) {\n    const delta = new Delta().insert(text);\n    return this.setContents(delta, source);\n  }\n\n  update(source: EmitterSource = Emitter.sources.USER) {\n    const change = this.scroll.update(source); // Will update selection before selection.update() does if text changes\n    this.selection.update(source);\n    // TODO this is usually undefined\n    return change;\n  }\n\n  updateContents(\n    delta: Delta | Op[],\n    source: EmitterSource = Emitter.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        delta = new Delta(delta);\n        return this.editor.applyDelta(delta);\n      },\n      source,\n      true,\n    );\n  }\n}\n\nfunction resolveSelector(selector: string | HTMLElement | null | undefined) {\n  return typeof selector === 'string'\n    ? document.querySelector<HTMLElement>(selector)\n    : selector;\n}\n\nfunction expandModuleConfig(config: Record<string, unknown> | undefined) {\n  return Object.entries(config ?? {}).reduce(\n    (expanded, [key, value]) => ({\n      ...expanded,\n      [key]: value === true ? {} : value,\n    }),\n    {} as Record<string, unknown>,\n  );\n}\n\nfunction omitUndefinedValuesFromOptions(obj: QuillOptions) {\n  return Object.fromEntries(\n    Object.entries(obj).filter((entry) => entry[1] !== undefined),\n  );\n}\n\nfunction expandConfig(\n  containerOrSelector: HTMLElement | string,\n  options: QuillOptions,\n): ExpandedQuillOptions {\n  const container = resolveSelector(containerOrSelector);\n  if (!container) {\n    throw new Error('Invalid Quill container');\n  }\n\n  const shouldUseDefaultTheme =\n    !options.theme || options.theme === Quill.DEFAULTS.theme;\n  const theme = shouldUseDefaultTheme\n    ? Theme\n    : Quill.import(`themes/${options.theme}`);\n  if (!theme) {\n    throw new Error(`Invalid theme ${options.theme}. Did you register it?`);\n  }\n\n  const { modules: quillModuleDefaults, ...quillDefaults } = Quill.DEFAULTS;\n  const { modules: themeModuleDefaults, ...themeDefaults } = theme.DEFAULTS;\n\n  let userModuleOptions = expandModuleConfig(options.modules);\n  // Special case toolbar shorthand\n  if (\n    userModuleOptions != null &&\n    userModuleOptions.toolbar &&\n    userModuleOptions.toolbar.constructor !== Object\n  ) {\n    userModuleOptions = {\n      ...userModuleOptions,\n      toolbar: { container: userModuleOptions.toolbar },\n    };\n  }\n\n  const modules: ExpandedQuillOptions['modules'] = {\n    ...expandModuleConfig(quillModuleDefaults),\n    ...expandModuleConfig(themeModuleDefaults),\n    ...userModuleOptions,\n  };\n\n  const config = {\n    ...quillDefaults,\n    ...omitUndefinedValuesFromOptions(themeDefaults),\n    ...omitUndefinedValuesFromOptions(options),\n  };\n\n  let registry = options.registry;\n  if (registry) {\n    if (options.formats) {\n      debug.warn('Ignoring \"formats\" option because \"registry\" is specified');\n    }\n  } else {\n    registry = options.formats\n      ? createRegistryWithFormats(options.formats, config.registry, debug)\n      : config.registry;\n  }\n\n  return {\n    ...config,\n    registry,\n    container,\n    theme,\n    modules: Object.entries(modules).reduce(\n      (modulesWithDefaults, [name, value]) => {\n        if (!value) return modulesWithDefaults;\n\n        const moduleClass = Quill.import(`modules/${name}`);\n        if (moduleClass == null) {\n          debug.error(\n            `Cannot load ${name} module. Are you sure you registered it?`,\n          );\n          return modulesWithDefaults;\n        }\n        return {\n          ...modulesWithDefaults,\n          // @ts-expect-error\n          [name]: { ...(moduleClass.DEFAULTS || {}), ...value },\n        };\n      },\n      {},\n    ),\n    bounds: resolveSelector(config.bounds),\n  };\n}\n\n// Handle selection preservation and TEXT_CHANGE emission\n// common to modification APIs\nfunction modify(\n  modifier: () => Delta,\n  source: EmitterSource,\n  index: number | boolean,\n  shift: number | null,\n) {\n  if (\n    !this.isEnabled() &&\n    source === Emitter.sources.USER &&\n    !this.allowReadOnlyEdits\n  ) {\n    return new Delta();\n  }\n  let range = index == null ? null : this.getSelection();\n  const oldDelta = this.editor.delta;\n  const change = modifier();\n  if (range != null) {\n    if (index === true) {\n      index = range.index; // eslint-disable-line prefer-destructuring\n    }\n    if (shift == null) {\n      range = shiftRange(range, change, source);\n    } else if (shift !== 0) {\n      // @ts-expect-error index should always be number\n      range = shiftRange(range, index, shift, source);\n    }\n    this.setSelection(range, Emitter.sources.SILENT);\n  }\n  if (change.length() > 0) {\n    const args = [Emitter.events.TEXT_CHANGE, change, oldDelta, source];\n    this.emitter.emit(Emitter.events.EDITOR_CHANGE, ...args);\n    if (source !== Emitter.sources.SILENT) {\n      this.emitter.emit(...args);\n    }\n  }\n  return change;\n}\n\ntype NormalizedIndexLength = [\n  number,\n  number,\n  Record<string, unknown>,\n  EmitterSource,\n];\nfunction overload(index: number, source?: EmitterSource): NormalizedIndexLength;\nfunction overload(\n  index: number,\n  length: number,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  index: number,\n  length: number,\n  format: string,\n  value: unknown,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  index: number,\n  length: number,\n  format: Record<string, unknown>,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(range: Range, source?: EmitterSource): NormalizedIndexLength;\nfunction overload(\n  range: Range,\n  format: string,\n  value: unknown,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  range: Range,\n  format: Record<string, unknown>,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  index: Range | number,\n  length?: number | string | Record<string, unknown> | EmitterSource,\n  name?: string | unknown | Record<string, unknown> | EmitterSource,\n  value?: unknown | EmitterSource,\n  source?: EmitterSource,\n): NormalizedIndexLength {\n  let formats: Record<string, unknown> = {};\n  // @ts-expect-error\n  if (typeof index.index === 'number' && typeof index.length === 'number') {\n    // Allow for throwaway end (used by insertText/insertEmbed)\n    if (typeof length !== 'number') {\n      // @ts-expect-error\n      source = value;\n      value = name;\n      name = length;\n      // @ts-expect-error\n      length = index.length; // eslint-disable-line prefer-destructuring\n      // @ts-expect-error\n      index = index.index; // eslint-disable-line prefer-destructuring\n    } else {\n      // @ts-expect-error\n      length = index.length; // eslint-disable-line prefer-destructuring\n      // @ts-expect-error\n      index = index.index; // eslint-disable-line prefer-destructuring\n    }\n  } else if (typeof length !== 'number') {\n    // @ts-expect-error\n    source = value;\n    value = name;\n    name = length;\n    length = 0;\n  }\n  // Handle format being object, two format name/value strings or excluded\n  if (typeof name === 'object') {\n    // @ts-expect-error Fix me later\n    formats = name;\n    // @ts-expect-error\n    source = value;\n  } else if (typeof name === 'string') {\n    if (value != null) {\n      formats[name] = value;\n    } else {\n      // @ts-expect-error\n      source = name;\n    }\n  }\n  // Handle optional source\n  source = source || Emitter.sources.API;\n  // @ts-expect-error\n  return [index, length, formats, source];\n}\n\nfunction shiftRange(range: Range, change: Delta, source?: EmitterSource): Range;\nfunction shiftRange(\n  range: Range,\n  index: number,\n  length?: number,\n  source?: EmitterSource,\n): Range;\nfunction shiftRange(\n  range: Range,\n  index: number | Delta,\n  lengthOrSource?: number | EmitterSource,\n  source?: EmitterSource,\n) {\n  const length = typeof lengthOrSource === 'number' ? lengthOrSource : 0;\n  if (range == null) return null;\n  let start;\n  let end;\n  // @ts-expect-error -- TODO: add a better type guard around `index`\n  if (index && typeof index.transformPosition === 'function') {\n    [start, end] = [range.index, range.index + range.length].map((pos) =>\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      index.transformPosition(pos, source !== Emitter.sources.USER),\n    );\n  } else {\n    [start, end] = [range.index, range.index + range.length].map((pos) => {\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      if (pos < index || (pos === index && source === Emitter.sources.USER))\n        return pos;\n      if (length >= 0) {\n        return pos + length;\n      }\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      return Math.max(index, pos + length);\n    });\n  }\n  return new Range(start, end - start);\n}\n\nexport type { Bounds, DebugLevel, EmitterSource };\nexport { Parchment, Range };\n\nexport { globalRegistry, expandConfig, overload, Quill as default };\n","import { LeafBlot, Scope } from 'parchment';\nimport Emitter from './emitter.js';\nimport type { EmitterSource } from './emitter.js';\nimport logger from './logger.js';\nimport type Cursor from '../blots/cursor.js';\nimport type Scroll from '../blots/scroll.js';\nimport cloneDeep from './utils/cloneDeep.js';\nimport isEqual from './utils/isEqual.js';\n\nconst debug = logger('quill:selection');\n\ntype NativeRange = AbstractRange;\n\nconst getNativeSelection = (rootNode: Node): globalThis.Selection | null => {\n  try {\n    if (\n      'getSelection' in rootNode &&\n      typeof rootNode.getSelection === 'function'\n    ) {\n      return rootNode.getSelection();\n    } else {\n      return window.getSelection();\n    }\n  } catch {\n    return null;\n  }\n};\n\ninterface NormalizedRange {\n  start: {\n    node: NativeRange['startContainer'];\n    offset: NativeRange['startOffset'];\n  };\n  end: { node: NativeRange['endContainer']; offset: NativeRange['endOffset'] };\n  native: NativeRange;\n}\n\nexport interface Bounds {\n  bottom: number;\n  height: number;\n  left: number;\n  right: number;\n  top: number;\n  width: number;\n}\n\nexport class Range {\n  constructor(\n    public index: number,\n    public length = 0,\n  ) {}\n}\n\nclass Selection {\n  scroll: Scroll;\n  emitter: Emitter;\n  composing: boolean;\n  mouseDown: boolean;\n\n  root: HTMLElement;\n  rootDocument: Node;\n  cursor: Cursor;\n  savedRange: Range;\n  lastRange: Range | null;\n  lastNative: NormalizedRange | null;\n\n  constructor(scroll: Scroll, emitter: Emitter) {\n    this.emitter = emitter;\n    this.scroll = scroll;\n    this.composing = false;\n    this.mouseDown = false;\n    this.root = this.scroll.domNode;\n    this.rootDocument = this.root.getRootNode();\n    // @ts-expect-error\n    this.cursor = this.scroll.create('cursor', this);\n    // savedRange is last non-null range\n    this.savedRange = new Range(0, 0);\n    this.lastRange = this.savedRange;\n    this.lastNative = null;\n    this.handleComposition();\n    this.handleDragging();\n    this.emitter.listenDOM('selectionchange', this.rootDocument, () => {\n      if (!this.mouseDown && !this.composing) {\n        setTimeout(this.update.bind(this, Emitter.sources.USER), 1);\n      }\n    });\n    this.emitter.on(Emitter.events.SCROLL_BEFORE_UPDATE, () => {\n      if (!this.hasFocus()) return;\n      const native = this.getNativeRange();\n      if (native == null) return;\n      if (native.start.node === this.cursor.textNode) return; // cursor.restore() will handle\n      this.emitter.once(\n        Emitter.events.SCROLL_UPDATE,\n        (source, mutations: MutationRecord[]) => {\n          try {\n            if (\n              this.root.contains(native.start.node) &&\n              this.root.contains(native.end.node)\n            ) {\n              this.setNativeRange(\n                native.start.node,\n                native.start.offset,\n                native.end.node,\n                native.end.offset,\n              );\n            }\n            const triggeredByTyping = mutations.some(\n              (mutation) =>\n                mutation.type === 'characterData' ||\n                mutation.type === 'childList' ||\n                (mutation.type === 'attributes' &&\n                  mutation.target === this.root),\n            );\n            this.update(triggeredByTyping ? Emitter.sources.SILENT : source);\n          } catch (ignored) {\n            // ignore\n          }\n        },\n      );\n    });\n    this.emitter.on(Emitter.events.SCROLL_OPTIMIZE, (mutations, context) => {\n      if (context.range) {\n        const { startNode, startOffset, endNode, endOffset } = context.range;\n        this.setNativeRange(startNode, startOffset, endNode, endOffset);\n        this.update(Emitter.sources.SILENT);\n      }\n    });\n    this.update(Emitter.sources.SILENT);\n  }\n\n  handleComposition() {\n    this.emitter.on(Emitter.events.COMPOSITION_BEFORE_START, () => {\n      this.composing = true;\n    });\n    this.emitter.on(Emitter.events.COMPOSITION_END, () => {\n      this.composing = false;\n      if (this.cursor.parent) {\n        const range = this.cursor.restore();\n        if (!range) return;\n        setTimeout(() => {\n          this.setNativeRange(\n            range.startNode,\n            range.startOffset,\n            range.endNode,\n            range.endOffset,\n          );\n        }, 1);\n      }\n    });\n  }\n\n  handleDragging() {\n    this.emitter.listenDOM('mousedown', document.body, () => {\n      this.mouseDown = true;\n    });\n    this.emitter.listenDOM('mouseup', document.body, () => {\n      this.mouseDown = false;\n      this.update(Emitter.sources.USER);\n    });\n  }\n\n  focus() {\n    if (this.hasFocus()) return;\n    this.root.focus({ preventScroll: true });\n    this.setRange(this.savedRange);\n  }\n\n  format(format: string, value: unknown) {\n    this.scroll.update();\n    const nativeRange = this.getNativeRange();\n    if (\n      nativeRange == null ||\n      !nativeRange.native.collapsed ||\n      this.scroll.query(format, Scope.BLOCK)\n    )\n      return;\n    if (nativeRange.start.node !== this.cursor.textNode) {\n      const blot = this.scroll.find(nativeRange.start.node, false);\n      if (blot == null) return;\n      // TODO Give blot ability to not split\n      if (blot instanceof LeafBlot) {\n        const after = blot.split(nativeRange.start.offset);\n        blot.parent.insertBefore(this.cursor, after);\n      } else {\n        // @ts-expect-error TODO: nativeRange.start.node doesn't seem to match function signature\n        blot.insertBefore(this.cursor, nativeRange.start.node); // Should never happen\n      }\n      this.cursor.attach();\n    }\n    this.cursor.format(format, value);\n    this.scroll.optimize();\n    this.setNativeRange(this.cursor.textNode, this.cursor.textNode.data.length);\n    this.update();\n  }\n\n  getBounds(index: number, length = 0) {\n    const scrollLength = this.scroll.length();\n    index = Math.min(index, scrollLength - 1);\n    length = Math.min(index + length, scrollLength - 1) - index;\n    let node: Node;\n    let [leaf, offset] = this.scroll.leaf(index);\n    if (leaf == null) return null;\n    if (length > 0 && offset === leaf.length()) {\n      const [next] = this.scroll.leaf(index + 1);\n      if (next) {\n        const [line] = this.scroll.line(index);\n        const [nextLine] = this.scroll.line(index + 1);\n        if (line === nextLine) {\n          leaf = next;\n          offset = 0;\n        }\n      }\n    }\n    [node, offset] = leaf.position(offset, true);\n    const range = document.createRange();\n    if (length > 0) {\n      range.setStart(node, offset);\n      [leaf, offset] = this.scroll.leaf(index + length);\n      if (leaf == null) return null;\n      [node, offset] = leaf.position(offset, true);\n      range.setEnd(node, offset);\n      return range.getBoundingClientRect();\n    }\n    let side: 'left' | 'right' = 'left';\n    let rect: DOMRect;\n    if (node instanceof Text) {\n      // Return null if the text node is empty because it is\n      // not able to get a useful client rect:\n      // https://github.com/w3c/csswg-drafts/issues/2514.\n      // Empty text nodes are most likely caused by TextBlot#optimize()\n      // not getting called when editor content changes.\n      if (!node.data.length) {\n        return null;\n      }\n      if (offset < node.data.length) {\n        range.setStart(node, offset);\n        range.setEnd(node, offset + 1);\n      } else {\n        range.setStart(node, offset - 1);\n        range.setEnd(node, offset);\n        side = 'right';\n      }\n      rect = range.getBoundingClientRect();\n    } else {\n      if (!(leaf.domNode instanceof Element)) return null;\n      rect = leaf.domNode.getBoundingClientRect();\n      if (offset > 0) side = 'right';\n    }\n    return {\n      bottom: rect.top + rect.height,\n      height: rect.height,\n      left: rect[side],\n      right: rect[side],\n      top: rect.top,\n      width: 0,\n    };\n  }\n\n  getNativeRange(): NormalizedRange | null {\n    // Each browser engine has a different implementation for retrieving the Range\n    const getNativeRange = (rootNode: Node): globalThis.Range | null => {\n      const selection = getNativeSelection(rootNode);\n      if (!selection?.anchorNode) return null;\n\n      if (\n        selection &&\n        'getComposedRanges' in selection &&\n        typeof selection.getComposedRanges === 'function' &&\n        // Chrome 137 also has `getComposedRanges()` but it's messed up\n        // when using it on the result of `shadowRoot.getSelection()`\n        !(rootNode instanceof ShadowRoot && 'getSelection' in rootNode)\n      ) {\n        // Safari 17+ supports `getComposedRanges()` for range retrieval\n        // See https://caniuse.com/mdn-api_selection_getcomposedranges\n        return selection.getComposedRanges(rootNode)[0];\n      }\n\n      // Chrome and Firefox implement the range API properly in Shadow DOM\n      // https://developer.mozilla.org/en-US/docs/Web/API/Selection/getRangeAt\n      return selection.getRangeAt(0);\n    };\n\n    const nativeRange = getNativeRange(this.rootDocument);\n    if (nativeRange == null) return null;\n    const range = this.normalizeNative(nativeRange);\n    debug.info('getNativeRange', range);\n    return range;\n  }\n\n  getRange(): [Range, NormalizedRange] | [null, null] {\n    const root = this.scroll.domNode;\n    if ('isConnected' in root && !root.isConnected) {\n      // document.getSelection() forces layout on Blink, so we trend to\n      // not calling it.\n      return [null, null];\n    }\n    const normalized = this.getNativeRange();\n    if (normalized == null) return [null, null];\n    const range = this.normalizedToRange(normalized);\n    return [range, normalized];\n  }\n\n  hasFocus(): boolean {\n    const doc = this.rootDocument as Document;\n\n    return (\n      doc.activeElement === this.root ||\n      (doc.activeElement != null && contains(this.root, doc.activeElement))\n    );\n  }\n\n  normalizedToRange(range: NormalizedRange) {\n    const positions: [Node, number][] = [\n      [range.start.node, range.start.offset],\n    ];\n    if (!range.native.collapsed) {\n      positions.push([range.end.node, range.end.offset]);\n    }\n    const indexes = positions.map((position) => {\n      const [node, offset] = position;\n      const blot = this.scroll.find(node, true);\n      // @ts-expect-error Fix me later\n      const index = blot.offset(this.scroll);\n      if (offset === 0) {\n        return index;\n      }\n      if (blot instanceof LeafBlot) {\n        return index + blot.index(node, offset);\n      }\n      // @ts-expect-error Fix me later\n      return index + blot.length();\n    });\n    const end = Math.min(Math.max(...indexes), this.scroll.length() - 1);\n    const start = Math.min(end, ...indexes);\n    return new Range(start, end - start);\n  }\n\n  normalizeNative(nativeRange: NativeRange) {\n    if (\n      !contains(this.root, nativeRange.startContainer) ||\n      (!nativeRange.collapsed && !contains(this.root, nativeRange.endContainer))\n    ) {\n      return null;\n    }\n    const range = {\n      start: {\n        node: nativeRange.startContainer,\n        offset: nativeRange.startOffset,\n      },\n      end: { node: nativeRange.endContainer, offset: nativeRange.endOffset },\n      native: nativeRange,\n    };\n    [range.start, range.end].forEach((position) => {\n      let { node, offset } = position;\n      while (!(node instanceof Text) && node.childNodes.length > 0) {\n        if (node.childNodes.length > offset) {\n          node = node.childNodes[offset];\n          offset = 0;\n        } else if (node.childNodes.length === offset) {\n          // @ts-expect-error Fix me later\n          node = node.lastChild;\n          if (node instanceof Text) {\n            offset = node.data.length;\n          } else if (node.childNodes.length > 0) {\n            // Container case\n            offset = node.childNodes.length;\n          } else {\n            // Embed case\n            offset = node.childNodes.length + 1;\n          }\n        } else {\n          break;\n        }\n      }\n      position.node = node;\n      position.offset = offset;\n    });\n    return range;\n  }\n\n  rangeToNative(range: Range): [Node | null, number, Node | null, number] {\n    const scrollLength = this.scroll.length();\n\n    const getPosition = (\n      index: number,\n      inclusive: boolean,\n    ): [Node | null, number] => {\n      index = Math.min(scrollLength - 1, index);\n      const [leaf, leafOffset] = this.scroll.leaf(index);\n      return leaf ? leaf.position(leafOffset, inclusive) : [null, -1];\n    };\n    return [\n      ...getPosition(range.index, false),\n      ...getPosition(range.index + range.length, true),\n    ];\n  }\n\n  setNativeRange(\n    startNode: Node | null,\n    startOffset?: number,\n    endNode = startNode,\n    endOffset = startOffset,\n    force = false,\n  ) {\n    debug.info('setNativeRange', startNode, startOffset, endNode, endOffset);\n    if (\n      startNode != null &&\n      (this.root.parentNode == null ||\n        startNode.parentNode == null ||\n        // @ts-expect-error Fix me later\n        endNode.parentNode == null)\n    ) {\n      return;\n    }\n    const selection = getNativeSelection(this.rootDocument as Document);\n    if (selection == null) return;\n    if (startNode != null) {\n      if (!this.hasFocus()) this.root.focus({ preventScroll: true });\n      const { native } = this.getNativeRange() || {};\n      if (\n        native == null ||\n        force ||\n        startNode !== native.startContainer ||\n        startOffset !== native.startOffset ||\n        endNode !== native.endContainer ||\n        endOffset !== native.endOffset\n      ) {\n        if (startNode instanceof Element && startNode.tagName === 'BR') {\n          // @ts-expect-error Fix me later\n          startOffset = Array.from(startNode.parentNode.childNodes).indexOf(\n            startNode,\n          );\n          startNode = startNode.parentNode;\n        }\n        if (endNode instanceof Element && endNode.tagName === 'BR') {\n          // @ts-expect-error Fix me later\n          endOffset = Array.from(endNode.parentNode.childNodes).indexOf(\n            endNode,\n          );\n          endNode = endNode.parentNode;\n        }\n        // Original implementation relies on Selection.addRange, which does not work\n        // in Webkit with shadow DOM. Use `setBaseAndExtent()` as a workaround.\n        // See https://github.com/slab/quill/issues/2021#issuecomment-1776007758\n        if (\n          startNode &&\n          endNode &&\n          typeof startOffset === 'number' &&\n          typeof endOffset === 'number'\n        ) {\n          selection.setBaseAndExtent(\n            startNode,\n            startOffset,\n            endNode,\n            endOffset,\n          );\n        }\n      }\n    } else {\n      selection.removeAllRanges();\n      this.root.blur();\n    }\n  }\n\n  setRange(range: Range | null, force: boolean, source?: EmitterSource): void;\n  setRange(range: Range | null, source?: EmitterSource): void;\n  setRange(\n    range: Range | null,\n    force: boolean | EmitterSource = false,\n    source: EmitterSource = Emitter.sources.API,\n  ): void {\n    if (typeof force === 'string') {\n      source = force;\n      force = false;\n    }\n    debug.info('setRange', range);\n    if (range != null) {\n      const args = this.rangeToNative(range);\n      this.setNativeRange(...args, force);\n    } else {\n      this.setNativeRange(null);\n    }\n    this.update(source);\n  }\n\n  update(source: EmitterSource = Emitter.sources.USER) {\n    const oldRange = this.lastRange;\n    const [lastRange, nativeRange] = this.getRange();\n    this.lastRange = lastRange;\n    this.lastNative = nativeRange;\n    if (this.lastRange != null) {\n      this.savedRange = this.lastRange;\n    }\n    if (!isEqual(oldRange, this.lastRange)) {\n      if (\n        !this.composing &&\n        nativeRange != null &&\n        nativeRange.native.collapsed &&\n        nativeRange.start.node !== this.cursor.textNode\n      ) {\n        const range = this.cursor.restore();\n        if (range) {\n          this.setNativeRange(\n            range.startNode,\n            range.startOffset,\n            range.endNode,\n            range.endOffset,\n          );\n        }\n      }\n      const args = [\n        Emitter.events.SELECTION_CHANGE,\n        cloneDeep(this.lastRange),\n        cloneDeep(oldRange),\n        source,\n      ];\n      this.emitter.emit(Emitter.events.EDITOR_CHANGE, ...args);\n      if (source !== Emitter.sources.SILENT) {\n        this.emitter.emit(...args);\n      }\n    }\n  }\n}\n\nfunction contains(parent: Node, descendant: Node) {\n  try {\n    // Firefox inserts inaccessible nodes around video elements\n    descendant.parentNode; // eslint-disable-line @typescript-eslint/no-unused-expressions\n  } catch (e) {\n    return false;\n  }\n  return parent.contains(descendant);\n}\n\nexport default Selection;\n","import type Quill from '../core.js';\nimport type Clipboard from '../modules/clipboard.js';\nimport type History from '../modules/history.js';\nimport type Keyboard from '../modules/keyboard.js';\nimport type { ToolbarProps } from '../modules/toolbar.js';\nimport type Uploader from '../modules/uploader.js';\n\nexport interface ThemeOptions {\n  modules: Record<string, unknown> & {\n    toolbar?: null | ToolbarProps;\n  };\n}\n\nclass Theme {\n  static DEFAULTS: ThemeOptions = {\n    modules: {},\n  };\n\n  static themes = {\n    default: Theme,\n  };\n\n  modules: ThemeOptions['modules'] = {};\n\n  constructor(\n    protected quill: Quill,\n    protected options: ThemeOptions,\n  ) {}\n\n  init() {\n    Object.keys(this.options.modules).forEach((name) => {\n      if (this.modules[name] == null) {\n        this.addModule(name);\n      }\n    });\n  }\n\n  addModule(name: 'clipboard'): Clipboard;\n  addModule(name: 'keyboard'): Keyboard;\n  addModule(name: 'uploader'): Uploader;\n  addModule(name: 'history'): History;\n  addModule(name: string): unknown;\n  addModule(name: string) {\n    // @ts-expect-error\n    const ModuleClass = this.quill.constructor.import(`modules/${name}`);\n    this.modules[name] = new ModuleClass(\n      this.quill,\n      this.options.modules[name] || {},\n    );\n    return this.modules[name];\n  }\n}\n\nexport interface ThemeConstructor {\n  new (quill: Quill, options: unknown): Theme;\n  DEFAULTS: ThemeOptions;\n}\n\nexport default Theme;\n","// Copied from https://github.com/vincentdchan/delta-es/blob/main/src/cloneDeep.ts\n\n/**\n * This is much smaller and faster than the lodash-es version.\n */\nfunction cloneDeep<T>(obj: T): T {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nexport default cloneDeep;\n","// Copied from https://github.com/vincentdchan/delta-es/blob/main/src/deepEqual.ts\n\nfunction isEqual(obj1: any, obj2: any): boolean {\n  if (obj1 === obj2)\n    // it's just the same object. No need to compare.\n    return true;\n\n  if (isPrimitive(obj1) || isPrimitive(obj2))\n    // compare primitives\n    return obj1 === obj2;\n\n  if (Object.keys(obj1).length !== Object.keys(obj2).length) return false;\n\n  // compare objects with same number of keys\n  for (const key in obj1) {\n    if (!(key in obj2)) return false; // other object doesn't have this prop\n    if (!isEqual(obj1[key], obj2[key])) return false;\n  }\n\n  return true;\n}\n\n// check if value is primitive\nfunction isPrimitive(obj: any) {\n  return obj !== Object(obj);\n}\n\nexport default isEqual;\n","import { Attributor, ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst config = {\n  scope: Scope.BLOCK,\n  whitelist: ['right', 'center', 'justify'],\n};\n\nconst AlignAttribute = new Attributor('align', 'align', config);\nconst AlignClass = new ClassAttributor('align', 'ql-align', config);\nconst AlignStyle = new StyleAttributor('align', 'text-align', config);\n\nexport { AlignAttribute, AlignClass, AlignStyle };\n","import { ClassAttributor, Scope } from 'parchment';\nimport { ColorAttributor } from './color.js';\n\nconst BackgroundClass = new ClassAttributor('background', 'ql-bg', {\n  scope: Scope.INLINE,\n});\nconst BackgroundStyle = new ColorAttributor('background', 'background-color', {\n  scope: Scope.INLINE,\n});\n\nexport { BackgroundClass, BackgroundStyle };\n","import Block from '../blots/block.js';\nimport Break from '../blots/break.js';\nimport Cursor from '../blots/cursor.js';\nimport Inline from '../blots/inline.js';\nimport TextBlot, { escapeText } from '../blots/text.js';\nimport Container from '../blots/container.js';\nimport Quill from '../core/quill.js';\n\nclass CodeBlockContainer extends Container {\n  static create(value: string) {\n    const domNode = super.create(value) as Element;\n    domNode.setAttribute('spellcheck', 'false');\n    return domNode;\n  }\n\n  code(index: number, length: number) {\n    return (\n      this.children\n        // @ts-expect-error\n        .map((child) => (child.length() <= 1 ? '' : child.domNode.innerText))\n        .join('\\n')\n        .slice(index, index + length)\n    );\n  }\n\n  html(index: number, length: number) {\n    // `\\n`s are needed in order to support empty lines at the beginning and the end.\n    // https://html.spec.whatwg.org/multipage/syntax.html#element-restrictions\n    return `<pre>\\n${escapeText(this.code(index, length))}\\n</pre>`;\n  }\n}\n\nclass CodeBlock extends Block {\n  static TAB = '  ';\n\n  static register() {\n    Quill.register(CodeBlockContainer);\n  }\n}\n\nclass Code extends Inline {}\nCode.blotName = 'code';\nCode.tagName = 'CODE';\n\nCodeBlock.blotName = 'code-block';\nCodeBlock.className = 'ql-code-block';\nCodeBlock.tagName = 'DIV';\nCodeBlockContainer.blotName = 'code-block-container';\nCodeBlockContainer.className = 'ql-code-block-container';\nCodeBlockContainer.tagName = 'DIV';\n\nCodeBlockContainer.allowedChildren = [CodeBlock];\n\nCodeBlock.allowedChildren = [TextBlot, Break, Cursor];\nCodeBlock.requiredContainer = CodeBlockContainer;\n\nexport { Code, CodeBlockContainer, CodeBlock as default };\n","import { ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nclass ColorAttributor extends StyleAttributor {\n  value(domNode: HTMLElement) {\n    let value = super.value(domNode) as string;\n    if (!value.startsWith('rgb(')) return value;\n    value = value.replace(/^[^\\d]+/, '').replace(/[^\\d]+$/, '');\n    const hex = value\n      .split(',')\n      .map((component) => `00${parseInt(component, 10).toString(16)}`.slice(-2))\n      .join('');\n    return `#${hex}`;\n  }\n}\n\nconst ColorClass = new ClassAttributor('color', 'ql-color', {\n  scope: Scope.INLINE,\n});\nconst ColorStyle = new ColorAttributor('color', 'color', {\n  scope: Scope.INLINE,\n});\n\nexport { ColorAttributor, ColorClass, ColorStyle };\n","import { Attributor, ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst config = {\n  scope: Scope.BLOCK,\n  whitelist: ['rtl'],\n};\n\nconst DirectionAttribute = new Attributor('direction', 'dir', config);\nconst DirectionClass = new ClassAttributor('direction', 'ql-direction', config);\nconst DirectionStyle = new StyleAttributor('direction', 'direction', config);\n\nexport { DirectionAttribute, DirectionClass, DirectionStyle };\n","import { ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst config = {\n  scope: Scope.INLINE,\n  whitelist: ['serif', 'monospace'],\n};\n\nconst FontClass = new ClassAttributor('font', 'ql-font', config);\n\nclass FontStyleAttributor extends StyleAttributor {\n  value(node: HTMLElement) {\n    return super.value(node).replace(/[\"']/g, '');\n  }\n}\n\nconst FontStyle = new FontStyleAttributor('font', 'font-family', config);\n\nexport { FontStyle, FontClass };\n","import { ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst SizeClass = new ClassAttributor('size', 'ql-size', {\n  scope: Scope.INLINE,\n  whitelist: ['small', 'large', 'huge'],\n});\nconst SizeStyle = new StyleAttributor('size', 'font-size', {\n  scope: Scope.INLINE,\n  whitelist: ['10px', '18px', '32px'],\n});\n\nexport { SizeClass, SizeStyle };\n","const normalWeightRegexp = /font-weight:\\s*normal/;\nconst blockTagNames = ['P', 'OL', 'UL'];\n\nconst isBlockElement = (element: Element | null) => {\n  return element && blockTagNames.includes(element.tagName);\n};\n\nconst normalizeEmptyLines = (doc: Document) => {\n  Array.from(doc.querySelectorAll('br'))\n    .filter(\n      (br) =>\n        isBlockElement(br.previousElementSibling) &&\n        isBlockElement(br.nextElementSibling),\n    )\n    .forEach((br) => {\n      br.parentNode?.removeChild(br);\n    });\n};\n\nconst normalizeFontWeight = (doc: Document) => {\n  Array.from(doc.querySelectorAll('b[style*=\"font-weight\"]'))\n    .filter((node) => node.getAttribute('style')?.match(normalWeightRegexp))\n    .forEach((node) => {\n      const fragment = doc.createDocumentFragment();\n      fragment.append(...node.childNodes);\n      node.parentNode?.replaceChild(fragment, node);\n    });\n};\n\nexport default function normalize(doc: Document) {\n  if (doc.querySelector('[id^=\"docs-internal-guid-\"]')) {\n    normalizeFontWeight(doc);\n    normalizeEmptyLines(doc);\n  }\n}\n","const ignoreRegexp = /\\bmso-list:[^;]*ignore/i;\nconst idRegexp = /\\bmso-list:[^;]*\\bl(\\d+)/i;\nconst indentRegexp = /\\bmso-list:[^;]*\\blevel(\\d+)/i;\n\nconst parseListItem = (element: Element, html: string) => {\n  const style = element.getAttribute('style');\n  const idMatch = style?.match(idRegexp);\n  if (!idMatch) {\n    return null;\n  }\n  const id = Number(idMatch[1]);\n\n  const indentMatch = style?.match(indentRegexp);\n  const indent = indentMatch ? Number(indentMatch[1]) : 1;\n\n  const typeRegexp = new RegExp(\n    `@list l${id}:level${indent}\\\\s*\\\\{[^\\\\}]*mso-level-number-format:\\\\s*([\\\\w-]+)`,\n    'i',\n  );\n  const typeMatch = html.match(typeRegexp);\n  const type = typeMatch && typeMatch[1] === 'bullet' ? 'bullet' : 'ordered';\n\n  return { id, indent, type, element };\n};\n\n// list items are represented as `p` tags with styles like `mso-list: l0 level1` where:\n// 1. \"0\" in \"l0\" means the list item id;\n// 2. \"1\" in \"level1\" means the indent level, starting from 1.\nconst normalizeListItem = (doc: Document) => {\n  const msoList = Array.from(doc.querySelectorAll('[style*=mso-list]'));\n  const ignored: Element[] = [];\n  const others: Element[] = [];\n  msoList.forEach((node) => {\n    const shouldIgnore = (node.getAttribute('style') || '').match(ignoreRegexp);\n    if (shouldIgnore) {\n      ignored.push(node);\n    } else {\n      others.push(node);\n    }\n  });\n\n  // Each list item contains a marker wrapped with \"mso-list: Ignore\".\n  ignored.forEach((node) => node.parentNode?.removeChild(node));\n\n  // The list stype is not defined inline with the tag, instead, it's in the\n  // style tag so we need to pass the html as a string.\n  const html = doc.documentElement.innerHTML;\n  const listItems = others\n    .map((element) => parseListItem(element, html))\n    .filter((parsed) => parsed);\n\n  while (listItems.length) {\n    const childListItems = [];\n\n    let current = listItems.shift();\n    // Group continuous items into the same group (aka \"ul\")\n    while (current) {\n      childListItems.push(current);\n      current =\n        listItems.length &&\n        listItems[0]?.element === current.element.nextElementSibling &&\n        // Different id means the next item doesn't belong to this group.\n        listItems[0].id === current.id\n          ? listItems.shift()\n          : null;\n    }\n\n    const ul = document.createElement('ul');\n    childListItems.forEach((listItem) => {\n      const li = document.createElement('li');\n      li.setAttribute('data-list', listItem.type);\n      if (listItem.indent > 1) {\n        li.setAttribute('class', `ql-indent-${listItem.indent - 1}`);\n      }\n      li.innerHTML = listItem.element.innerHTML;\n      ul.appendChild(li);\n    });\n\n    const element = childListItems[0]?.element;\n    const { parentNode } = element ?? {};\n    if (element) {\n      parentNode?.replaceChild(ul, element);\n    }\n    childListItems.slice(1).forEach(({ element: e }) => {\n      parentNode?.removeChild(e);\n    });\n  }\n};\n\nexport default function normalize(doc: Document) {\n  if (\n    doc.documentElement.getAttribute('xmlns:w') ===\n    'urn:schemas-microsoft-com:office:word'\n  ) {\n    normalizeListItem(doc);\n  }\n}\n","import googleDocs from './normalizers/googleDocs.js';\nimport msWord from './normalizers/msWord.js';\n\nconst NORMALIZERS = [msWord, googleDocs];\n\nconst normalizeExternalHTML = (doc: Document) => {\n  if (doc.documentElement) {\n    NORMALIZERS.forEach((normalize) => {\n      normalize(doc);\n    });\n  }\n};\n\nexport default normalizeExternalHTML;\n","import type { ScrollBlot } from 'parchment';\nimport {\n  Attributor,\n  BlockBlot,\n  ClassAttributor,\n  EmbedBlot,\n  Scope,\n  StyleAttributor,\n} from 'parchment';\nimport Delta from 'quill-delta-es';\nimport { BlockEmbed } from '../blots/block.js';\nimport type { EmitterSource } from '../core/emitter.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport type { Range } from '../core/selection.js';\nimport { AlignAttribute, AlignStyle } from '../formats/align.js';\nimport { BackgroundStyle } from '../formats/background.js';\nimport CodeBlock from '../formats/code.js';\nimport { ColorStyle } from '../formats/color.js';\nimport { DirectionAttribute, DirectionStyle } from '../formats/direction.js';\nimport { FontStyle } from '../formats/font.js';\nimport { SizeStyle } from '../formats/size.js';\nimport { deleteRange } from './keyboard.js';\nimport normalizeExternalHTML from './normalizeExternalHTML/index.js';\n\nconst debug = logger('quill:clipboard');\n\ntype Selector = string | Node['TEXT_NODE'] | Node['ELEMENT_NODE'];\ntype Matcher = (node: Node, delta: Delta, scroll: ScrollBlot) => Delta;\n\nconst CLIPBOARD_CONFIG: [Selector, Matcher][] = [\n  [Node.TEXT_NODE, matchText],\n  [Node.TEXT_NODE, matchNewline],\n  ['br', matchBreak],\n  [Node.ELEMENT_NODE, matchNewline],\n  [Node.ELEMENT_NODE, matchBlot],\n  [Node.ELEMENT_NODE, matchAttributor],\n  [Node.ELEMENT_NODE, matchStyles],\n  ['li', matchIndent],\n  ['ol, ul', matchList],\n  ['pre', matchCodeBlock],\n  ['tr', matchTable],\n  ['b', createMatchAlias('bold')],\n  ['i', createMatchAlias('italic')],\n  ['strike', createMatchAlias('strike')],\n  ['style', matchIgnore],\n];\n\nconst ATTRIBUTE_ATTRIBUTORS = [AlignAttribute, DirectionAttribute].reduce(\n  (memo: Record<string, Attributor>, attr) => {\n    memo[attr.keyName] = attr;\n    return memo;\n  },\n  {},\n);\n\nconst STYLE_ATTRIBUTORS = [\n  AlignStyle,\n  BackgroundStyle,\n  ColorStyle,\n  DirectionStyle,\n  FontStyle,\n  SizeStyle,\n].reduce((memo: Record<string, Attributor>, attr) => {\n  memo[attr.keyName] = attr;\n  return memo;\n}, {});\n\ninterface ClipboardOptions {\n  matchers: [Selector, Matcher][];\n}\n\nclass Clipboard extends Module<ClipboardOptions> {\n  static DEFAULTS: ClipboardOptions = {\n    matchers: [],\n  };\n\n  matchers: [Selector, Matcher][];\n\n  constructor(quill: Quill, options: Partial<ClipboardOptions>) {\n    super(quill, options);\n    this.quill.root.addEventListener('copy', (e) =>\n      this.onCaptureCopy(e, false),\n    );\n    this.quill.root.addEventListener('cut', (e) => this.onCaptureCopy(e, true));\n    this.quill.root.addEventListener('paste', this.onCapturePaste.bind(this));\n    this.matchers = [];\n    CLIPBOARD_CONFIG.concat(this.options.matchers ?? []).forEach(\n      ([selector, matcher]) => {\n        this.addMatcher(selector, matcher);\n      },\n    );\n  }\n\n  addMatcher(selector: Selector, matcher: Matcher) {\n    this.matchers.push([selector, matcher]);\n  }\n\n  convert(\n    { html, text }: { html?: string; text?: string },\n    formats: Record<string, unknown> = {},\n  ) {\n    if (formats[CodeBlock.blotName]) {\n      return new Delta().insert(text || '', {\n        [CodeBlock.blotName]: formats[CodeBlock.blotName],\n      });\n    }\n    if (!html) {\n      return new Delta().insert(text || '', formats);\n    }\n    const delta = this.convertHTML(html);\n    // Remove trailing newline\n    if (\n      deltaEndsWith(delta, '\\n') &&\n      (delta.ops[delta.ops.length - 1].attributes == null || formats.table)\n    ) {\n      return delta.compose(new Delta().retain(delta.length() - 1).delete(1));\n    }\n    return delta;\n  }\n\n  protected normalizeHTML(doc: Document) {\n    normalizeExternalHTML(doc);\n  }\n\n  protected convertHTML(html: string) {\n    const doc = new DOMParser().parseFromString(html, 'text/html');\n    this.normalizeHTML(doc);\n    const container = doc.body;\n    const nodeMatches = new WeakMap();\n    const [elementMatchers, textMatchers] = this.prepareMatching(\n      container,\n      nodeMatches,\n    );\n    return traverse(\n      this.quill.scroll,\n      container,\n      elementMatchers,\n      textMatchers,\n      nodeMatches,\n    );\n  }\n\n  dangerouslyPasteHTML(html: string, source?: EmitterSource): void;\n  dangerouslyPasteHTML(\n    index: number,\n    html: string,\n    source?: EmitterSource,\n  ): void;\n  dangerouslyPasteHTML(\n    index: number | string,\n    html?: string,\n    source: EmitterSource = Quill.sources.API,\n  ) {\n    if (typeof index === 'string') {\n      const delta = this.convert({ html: index, text: '' });\n      // @ts-expect-error\n      this.quill.setContents(delta, html);\n      this.quill.setSelection(0, Quill.sources.SILENT);\n    } else {\n      const paste = this.convert({ html, text: '' });\n      this.quill.updateContents(\n        new Delta().retain(index).concat(paste),\n        source,\n      );\n      this.quill.setSelection(index + paste.length(), Quill.sources.SILENT);\n    }\n  }\n\n  onCaptureCopy(e: ClipboardEvent, isCut = false) {\n    if (e.defaultPrevented) return;\n    e.preventDefault();\n    const [range] = this.quill.selection.getRange();\n    if (range == null) return;\n    const { html, text } = this.onCopy(range, isCut);\n    e.clipboardData?.setData('text/plain', text);\n    e.clipboardData?.setData('text/html', html);\n    if (isCut) {\n      deleteRange({ range, quill: this.quill });\n    }\n  }\n\n  /*\n   * https://www.iana.org/assignments/media-types/text/uri-list\n   */\n  private normalizeURIList(urlList: string) {\n    return (\n      urlList\n        .split(/\\r?\\n/)\n        // Ignore all comments\n        .filter((url) => url[0] !== '#')\n        .join('\\n')\n    );\n  }\n\n  onCapturePaste(e: ClipboardEvent) {\n    if (e.defaultPrevented || !this.quill.isEnabled()) return;\n    e.preventDefault();\n    const range = this.quill.getSelection(true);\n    if (range == null) return;\n    const html = e.clipboardData?.getData('text/html');\n    let text = e.clipboardData?.getData('text/plain');\n    if (!html && !text) {\n      const urlList = e.clipboardData?.getData('text/uri-list');\n      if (urlList) {\n        text = this.normalizeURIList(urlList);\n      }\n    }\n    const files = Array.from(e.clipboardData?.files || []);\n    if (!html && files.length > 0) {\n      this.quill.uploader.upload(range, files);\n      return;\n    }\n    if (html && files.length > 0) {\n      const doc = new DOMParser().parseFromString(html, 'text/html');\n      if (\n        doc.body.childElementCount === 1 &&\n        doc.body.firstElementChild?.tagName === 'IMG'\n      ) {\n        this.quill.uploader.upload(range, files);\n        return;\n      }\n    }\n    this.onPaste(range, { html, text });\n  }\n\n  onCopy(range: Range, isCut: boolean): { html: string; text: string };\n  onCopy(range: Range) {\n    const text = this.quill.getText(range);\n    const html = this.quill.getSemanticHTML(range);\n    return { html, text };\n  }\n\n  onPaste(range: Range, { text, html }: { text?: string; html?: string }) {\n    const formats = this.quill.getFormat(range.index);\n    const pastedDelta = this.convert({ text, html }, formats);\n    debug.log('onPaste', pastedDelta, { text, html });\n    const delta = new Delta()\n      .retain(range.index)\n      .delete(range.length)\n      .concat(pastedDelta);\n    this.quill.updateContents(delta, Quill.sources.USER);\n    // range.length contributes to delta.length()\n    this.quill.setSelection(\n      delta.length() - range.length,\n      Quill.sources.SILENT,\n    );\n    this.quill.scrollSelectionIntoView();\n  }\n\n  prepareMatching(container: Element, nodeMatches: WeakMap<Node, Matcher[]>) {\n    const elementMatchers: Matcher[] = [];\n    const textMatchers: Matcher[] = [];\n    this.matchers.forEach((pair) => {\n      const [selector, matcher] = pair;\n      switch (selector) {\n        case Node.TEXT_NODE:\n          textMatchers.push(matcher);\n          break;\n        case Node.ELEMENT_NODE:\n          elementMatchers.push(matcher);\n          break;\n        default:\n          Array.from(container.querySelectorAll(selector)).forEach((node) => {\n            if (nodeMatches.has(node)) {\n              const matches = nodeMatches.get(node);\n              matches?.push(matcher);\n            } else {\n              nodeMatches.set(node, [matcher]);\n            }\n          });\n          break;\n      }\n    });\n    return [elementMatchers, textMatchers];\n  }\n}\n\nfunction applyFormat(\n  delta: Delta,\n  format: string,\n  value: unknown,\n  scroll: ScrollBlot,\n): Delta {\n  if (!scroll.query(format)) {\n    return delta;\n  }\n\n  return delta.reduce((newDelta, op) => {\n    if (!op.insert) return newDelta;\n    if (op.attributes && op.attributes[format]) {\n      return newDelta.push(op);\n    }\n    const formats = value ? { [format]: value } : {};\n    return newDelta.insert(op.insert, { ...formats, ...op.attributes });\n  }, new Delta());\n}\n\nfunction deltaEndsWith(delta: Delta, text: string) {\n  let endText = '';\n  for (\n    let i = delta.ops.length - 1;\n    i >= 0 && endText.length < text.length;\n    --i // eslint-disable-line no-plusplus\n  ) {\n    const op = delta.ops[i];\n    if (typeof op.insert !== 'string') break;\n    endText = op.insert + endText;\n  }\n  return endText.slice(-1 * text.length) === text;\n}\n\nfunction isLine(node: Node, scroll: ScrollBlot) {\n  if (!(node instanceof Element)) return false;\n  const match = scroll.query(node);\n  // @ts-expect-error\n  if (match && match.prototype instanceof EmbedBlot) return false;\n\n  return [\n    'address',\n    'article',\n    'blockquote',\n    'canvas',\n    'dd',\n    'div',\n    'dl',\n    'dt',\n    'fieldset',\n    'figcaption',\n    'figure',\n    'footer',\n    'form',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'header',\n    'iframe',\n    'li',\n    'main',\n    'nav',\n    'ol',\n    'output',\n    'p',\n    'pre',\n    'section',\n    'table',\n    'td',\n    'tr',\n    'ul',\n    'video',\n  ].includes(node.tagName.toLowerCase());\n}\n\nfunction isBetweenInlineElements(node: HTMLElement, scroll: ScrollBlot) {\n  return (\n    node.previousElementSibling &&\n    node.nextElementSibling &&\n    !isLine(node.previousElementSibling, scroll) &&\n    !isLine(node.nextElementSibling, scroll)\n  );\n}\n\nconst preNodes = new WeakMap();\nfunction isPre(node: Node | null) {\n  if (node == null) return false;\n  if (!preNodes.has(node)) {\n    // @ts-expect-error\n    if (node.tagName === 'PRE') {\n      preNodes.set(node, true);\n    } else {\n      preNodes.set(node, isPre(node.parentNode));\n    }\n  }\n  return preNodes.get(node);\n}\n\nfunction traverse(\n  scroll: ScrollBlot,\n  node: ChildNode,\n  elementMatchers: Matcher[],\n  textMatchers: Matcher[],\n  nodeMatches: WeakMap<Node, Matcher[]>,\n): Delta {\n  // Post-order\n  if (node.nodeType === node.TEXT_NODE) {\n    return textMatchers.reduce((delta: Delta, matcher) => {\n      return matcher(node, delta, scroll);\n    }, new Delta());\n  }\n  if (node.nodeType === node.ELEMENT_NODE) {\n    return Array.from(node.childNodes || []).reduce((delta, childNode) => {\n      let childrenDelta = traverse(\n        scroll,\n        childNode,\n        elementMatchers,\n        textMatchers,\n        nodeMatches,\n      );\n      if (childNode.nodeType === node.ELEMENT_NODE) {\n        childrenDelta = elementMatchers.reduce((reducedDelta, matcher) => {\n          return matcher(childNode as HTMLElement, reducedDelta, scroll);\n        }, childrenDelta);\n        childrenDelta = (nodeMatches.get(childNode) || []).reduce(\n          (reducedDelta, matcher) => {\n            return matcher(childNode, reducedDelta, scroll);\n          },\n          childrenDelta,\n        );\n      }\n      return delta.concat(childrenDelta);\n    }, new Delta());\n  }\n  return new Delta();\n}\n\nfunction createMatchAlias(format: string) {\n  return (_node: Element, delta: Delta, scroll: ScrollBlot) => {\n    return applyFormat(delta, format, true, scroll);\n  };\n}\n\nfunction matchAttributor(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  const attributes = Attributor.keys(node);\n  const classes = ClassAttributor.keys(node);\n  const styles = StyleAttributor.keys(node);\n  const formats: Record<string, string | undefined> = {};\n  attributes\n    .concat(classes)\n    .concat(styles)\n    .forEach((name) => {\n      let attr = scroll.query(name, Scope.ATTRIBUTE) as Attributor;\n      if (attr != null) {\n        formats[attr.attrName] = attr.value(node);\n        if (formats[attr.attrName]) return;\n      }\n      attr = ATTRIBUTE_ATTRIBUTORS[name];\n      if (attr != null && (attr.attrName === name || attr.keyName === name)) {\n        formats[attr.attrName] = attr.value(node) || undefined;\n      }\n      attr = STYLE_ATTRIBUTORS[name];\n      if (attr != null && (attr.attrName === name || attr.keyName === name)) {\n        attr = STYLE_ATTRIBUTORS[name];\n        formats[attr.attrName] = attr.value(node) || undefined;\n      }\n    });\n\n  return Object.entries(formats).reduce(\n    (newDelta, [name, value]) => applyFormat(newDelta, name, value, scroll),\n    delta,\n  );\n}\n\nfunction matchBlot(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query(node);\n  if (match == null) return delta;\n  // @ts-expect-error\n  if (match.prototype instanceof EmbedBlot) {\n    const embed = {};\n    // @ts-expect-error\n    const value = match.value(node);\n    if (value != null) {\n      // @ts-expect-error\n      embed[match.blotName] = value;\n      // @ts-expect-error\n      return new Delta().insert(embed, match.formats(node, scroll));\n    }\n  } else {\n    // @ts-expect-error\n    if (match.prototype instanceof BlockBlot && !deltaEndsWith(delta, '\\n')) {\n      delta.insert('\\n');\n    }\n    if (\n      'blotName' in match &&\n      'formats' in match &&\n      typeof match.formats === 'function'\n    ) {\n      return applyFormat(\n        delta,\n        match.blotName,\n        match.formats(node, scroll),\n        scroll,\n      );\n    }\n  }\n  return delta;\n}\n\nfunction matchBreak(node: Node, delta: Delta) {\n  if (!deltaEndsWith(delta, '\\n')) {\n    delta.insert('\\n');\n  }\n  return delta;\n}\n\nfunction matchCodeBlock(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query('code-block');\n  const language =\n    match && 'formats' in match && typeof match.formats === 'function'\n      ? match.formats(node, scroll)\n      : true;\n  return applyFormat(delta, 'code-block', language, scroll);\n}\n\nfunction matchIgnore() {\n  return new Delta();\n}\n\nfunction matchIndent(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query(node);\n  if (\n    match == null ||\n    // @ts-expect-error\n    match.blotName !== 'list' ||\n    !deltaEndsWith(delta, '\\n')\n  ) {\n    return delta;\n  }\n  let indent = -1;\n  let parent = node.parentNode;\n  while (parent != null) {\n    // @ts-expect-error\n    if (['OL', 'UL'].includes(parent.tagName)) {\n      indent += 1;\n    }\n    parent = parent.parentNode;\n  }\n  if (indent <= 0) return delta;\n  return delta.reduce((composed, op) => {\n    if (!op.insert) return composed;\n    if (op.attributes && typeof op.attributes.indent === 'number') {\n      return composed.push(op);\n    }\n    return composed.insert(op.insert, { indent, ...(op.attributes || {}) });\n  }, new Delta());\n}\n\nfunction matchList(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const element = node as Element;\n  let list = element.tagName === 'OL' ? 'ordered' : 'bullet';\n\n  const checkedAttr = element.getAttribute('data-checked');\n  if (checkedAttr) {\n    list = checkedAttr === 'true' ? 'checked' : 'unchecked';\n  }\n\n  return applyFormat(delta, 'list', list, scroll);\n}\n\nfunction matchNewline(node: Node, delta: Delta, scroll: ScrollBlot) {\n  if (!deltaEndsWith(delta, '\\n')) {\n    if (\n      isLine(node, scroll) &&\n      (node.childNodes.length > 0 || node instanceof HTMLParagraphElement)\n    ) {\n      return delta.insert('\\n');\n    }\n    if (delta.length() > 0 && node.nextSibling) {\n      let nextSibling: Node | null = node.nextSibling;\n      while (nextSibling != null) {\n        if (isLine(nextSibling, scroll)) {\n          return delta.insert('\\n');\n        }\n        const match = scroll.query(nextSibling);\n        // @ts-expect-error\n        if (match && match.prototype instanceof BlockEmbed) {\n          return delta.insert('\\n');\n        }\n        nextSibling = nextSibling.firstChild;\n      }\n    }\n  }\n  return delta;\n}\n\nfunction matchStyles(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  const formats: Record<string, unknown> = {};\n  const style: Partial<CSSStyleDeclaration> = node.style || {};\n  if (style.fontStyle === 'italic') {\n    formats.italic = true;\n  }\n  if (style.textDecoration === 'underline') {\n    formats.underline = true;\n  }\n  if (style.textDecoration === 'line-through') {\n    formats.strike = true;\n  }\n  if (\n    style.fontWeight?.startsWith('bold') ||\n    // @ts-expect-error Fix me later\n    parseInt(style.fontWeight, 10) >= 700\n  ) {\n    formats.bold = true;\n  }\n  delta = Object.entries(formats).reduce(\n    (newDelta, [name, value]) => applyFormat(newDelta, name, value, scroll),\n    delta,\n  );\n  // @ts-expect-error\n  if (parseFloat(style.textIndent || 0) > 0) {\n    // Could be 0.5in\n    return new Delta().insert('\\t').concat(delta);\n  }\n  return delta;\n}\n\nfunction matchTable(\n  node: HTMLTableRowElement,\n  delta: Delta,\n  scroll: ScrollBlot,\n) {\n  const table =\n    node.parentElement?.tagName === 'TABLE'\n      ? node.parentElement\n      : node.parentElement?.parentElement;\n  if (table != null) {\n    const rows = Array.from(table.querySelectorAll('tr'));\n    const row = rows.indexOf(node) + 1;\n    return applyFormat(delta, 'table', row, scroll);\n  }\n  return delta;\n}\n\nfunction matchText(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  // @ts-expect-error\n  let text = node.data as string;\n  // Word represents empty line with <o:p>&nbsp;</o:p>\n  if (node.parentElement?.tagName === 'O:P') {\n    return delta.insert(text.trim());\n  }\n  if (!isPre(node)) {\n    if (\n      text.trim().length === 0 &&\n      text.includes('\\n') &&\n      !isBetweenInlineElements(node, scroll)\n    ) {\n      return delta;\n    }\n    // convert all non-nbsp whitespace into regular space\n    text = text.replace(/[^\\S\\u00a0]/g, ' ');\n    // collapse consecutive spaces into one\n    text = text.replace(/ {2,}/g, ' ');\n    if (\n      (node.previousSibling == null &&\n        node.parentElement != null &&\n        isLine(node.parentElement, scroll)) ||\n      (node.previousSibling instanceof Element &&\n        isLine(node.previousSibling, scroll))\n    ) {\n      // block structure means we don't need leading space\n      text = text.replace(/^ /, '');\n    }\n    if (\n      (node.nextSibling == null &&\n        node.parentElement != null &&\n        isLine(node.parentElement, scroll)) ||\n      (node.nextSibling instanceof Element && isLine(node.nextSibling, scroll))\n    ) {\n      // block structure means we don't need trailing space\n      text = text.replace(/ $/, '');\n    }\n    // done removing whitespace and can normalize all to regular space\n    text = text.replaceAll('\\u00a0', ' ');\n  }\n  return delta.insert(text);\n}\n\nexport {\n  Clipboard as default,\n  matchAttributor,\n  matchBlot,\n  matchNewline,\n  matchText,\n  traverse,\n};\n","import Delta, { AttributeMap } from 'quill-delta-es';\nimport { EmbedBlot, Scope, TextBlot } from 'parchment';\nimport type { Blot, BlockBlot } from 'parchment';\nimport Quill from '../core/quill.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport type { BlockEmbed } from '../blots/block.js';\nimport type { Range } from '../core/selection.js';\nimport isEqual from '../core/utils/isEqual.js';\n\nconst debug = logger('quill:keyboard');\n\nconst SHORTKEY = /Mac/i.test(navigator.platform) ? 'metaKey' : 'ctrlKey';\n\nexport interface Context {\n  collapsed: boolean;\n  empty: boolean;\n  offset: number;\n  prefix: string;\n  suffix: string;\n  format: Record<string, unknown>;\n  event: KeyboardEvent;\n  line: BlockEmbed | BlockBlot;\n}\n\ninterface BindingObject\n  extends Partial<Omit<Context, 'prefix' | 'suffix' | 'format'>> {\n  key: number | string | string[];\n  shortKey?: boolean | null;\n  shiftKey?: boolean | null;\n  altKey?: boolean | null;\n  metaKey?: boolean | null;\n  ctrlKey?: boolean | null;\n  prefix?: RegExp;\n  suffix?: RegExp;\n  format?: Record<string, unknown> | string[];\n  handler?: (\n    this: { quill: Quill },\n    range: Range,\n    curContext: Context,\n    // eslint-disable-next-line no-use-before-define\n    binding: NormalizedBinding,\n  ) => boolean | void;\n}\n\ntype Binding = BindingObject | string | number;\n\ninterface NormalizedBinding extends Omit<BindingObject, 'key' | 'shortKey'> {\n  key: string | number;\n}\n\ninterface KeyboardOptions {\n  bindings: Record<string, Binding>;\n}\n\ninterface KeyboardOptions {\n  bindings: Record<string, Binding>;\n}\n\nclass Keyboard extends Module<KeyboardOptions> {\n  static DEFAULTS: KeyboardOptions;\n\n  static match(evt: KeyboardEvent, binding: BindingObject) {\n    if (\n      (['altKey', 'ctrlKey', 'metaKey', 'shiftKey'] as const).some((key) => {\n        return !!binding[key] !== evt[key] && binding[key] !== null;\n      })\n    ) {\n      return false;\n    }\n    return binding.key === evt.key || binding.key === evt.which;\n  }\n\n  bindings: Record<string, NormalizedBinding[]>;\n\n  constructor(quill: Quill, options: Partial<KeyboardOptions>) {\n    super(quill, options);\n    this.bindings = {};\n    // @ts-expect-error Fix me later\n    Object.keys(this.options.bindings).forEach((name) => {\n      // @ts-expect-error Fix me later\n      if (this.options.bindings[name]) {\n        // @ts-expect-error Fix me later\n        this.addBinding(this.options.bindings[name]);\n      }\n    });\n    this.addBinding({ key: 'Enter', shiftKey: null }, this.handleEnter);\n    this.addBinding(\n      { key: 'Enter', metaKey: null, ctrlKey: null, altKey: null },\n      () => {},\n    );\n    if (/Firefox/i.test(navigator.userAgent)) {\n      // Need to handle delete and backspace for Firefox in the general case #1171\n      this.addBinding(\n        { key: 'Backspace' },\n        { collapsed: true },\n        this.handleBackspace,\n      );\n      this.addBinding(\n        { key: 'Delete' },\n        { collapsed: true },\n        this.handleDelete,\n      );\n    } else {\n      this.addBinding(\n        { key: 'Backspace' },\n        { collapsed: true, prefix: /^.?$/ },\n        this.handleBackspace,\n      );\n      this.addBinding(\n        { key: 'Delete' },\n        { collapsed: true, suffix: /^.?$/ },\n        this.handleDelete,\n      );\n    }\n    this.addBinding(\n      { key: 'Backspace' },\n      { collapsed: false },\n      this.handleDeleteRange,\n    );\n    this.addBinding(\n      { key: 'Delete' },\n      { collapsed: false },\n      this.handleDeleteRange,\n    );\n    this.addBinding(\n      {\n        key: 'Backspace',\n        altKey: null,\n        ctrlKey: null,\n        metaKey: null,\n        shiftKey: null,\n      },\n      { collapsed: true, offset: 0 },\n      this.handleBackspace,\n    );\n    this.listen();\n  }\n\n  addBinding(\n    keyBinding: Binding,\n    context:\n      | Required<BindingObject['handler']>\n      | Partial<Omit<BindingObject, 'key' | 'handler'>> = {},\n    handler:\n      | Required<BindingObject['handler']>\n      | Partial<Omit<BindingObject, 'key' | 'handler'>> = {},\n  ) {\n    const binding = normalize(keyBinding);\n    if (binding == null) {\n      debug.warn('Attempted to add invalid keyboard binding', binding);\n      return;\n    }\n    if (typeof context === 'function') {\n      context = { handler: context };\n    }\n    if (typeof handler === 'function') {\n      handler = { handler };\n    }\n    const keys = Array.isArray(binding.key) ? binding.key : [binding.key];\n    keys.forEach((key) => {\n      const singleBinding = {\n        ...binding,\n        key,\n        ...context,\n        ...handler,\n      };\n      this.bindings[singleBinding.key] = this.bindings[singleBinding.key] || [];\n      this.bindings[singleBinding.key].push(singleBinding);\n    });\n  }\n\n  listen() {\n    this.quill.root.addEventListener('keydown', (evt) => {\n      if (evt.defaultPrevented || evt.isComposing) return;\n\n      // evt.isComposing is false when pressing Enter/Backspace when composing in Safari\n      // https://bugs.webkit.org/show_bug.cgi?id=165004\n      const isComposing =\n        evt.keyCode === 229 && (evt.key === 'Enter' || evt.key === 'Backspace');\n      if (isComposing) return;\n\n      const bindings = (this.bindings[evt.key] || []).concat(\n        this.bindings[evt.which] || [],\n      );\n      const matches = bindings.filter((binding) =>\n        Keyboard.match(evt, binding),\n      );\n      if (matches.length === 0) return;\n      // @ts-expect-error\n      const blot = Quill.find(evt.target, true);\n      if (blot && blot.scroll !== this.quill.scroll) return;\n      const range = this.quill.getSelection();\n      if (range == null || !this.quill.hasFocus()) return;\n      const [line, offset] = this.quill.getLine(range.index);\n      const [leafStart, offsetStart] = this.quill.getLeaf(range.index);\n      const [leafEnd, offsetEnd] =\n        range.length === 0\n          ? [leafStart, offsetStart]\n          : this.quill.getLeaf(range.index + range.length);\n      const prefixText =\n        leafStart instanceof TextBlot\n          ? leafStart.value().slice(0, offsetStart)\n          : '';\n      const suffixText =\n        leafEnd instanceof TextBlot ? leafEnd.value().slice(offsetEnd) : '';\n      const curContext = {\n        collapsed: range.length === 0,\n        // @ts-expect-error Fix me later\n        empty: range.length === 0 && line.length() <= 1,\n        format: this.quill.getFormat(range),\n        line,\n        offset,\n        prefix: prefixText,\n        suffix: suffixText,\n        event: evt,\n      };\n      const prevented = matches.some((binding) => {\n        if (\n          binding.collapsed != null &&\n          binding.collapsed !== curContext.collapsed\n        ) {\n          return false;\n        }\n        if (binding.empty != null && binding.empty !== curContext.empty) {\n          return false;\n        }\n        if (binding.offset != null && binding.offset !== curContext.offset) {\n          return false;\n        }\n        if (Array.isArray(binding.format)) {\n          // any format is present\n          if (binding.format.every((name) => curContext.format[name] == null)) {\n            return false;\n          }\n        } else if (typeof binding.format === 'object') {\n          // all formats must match\n          if (\n            !Object.keys(binding.format).every((name) => {\n              // @ts-expect-error Fix me later\n              if (binding.format[name] === true)\n                return curContext.format[name] != null;\n              // @ts-expect-error Fix me later\n              if (binding.format[name] === false)\n                return curContext.format[name] == null;\n              // @ts-expect-error Fix me later\n              return isEqual(binding.format[name], curContext.format[name]);\n            })\n          ) {\n            return false;\n          }\n        }\n        if (binding.prefix != null && !binding.prefix.test(curContext.prefix)) {\n          return false;\n        }\n        if (binding.suffix != null && !binding.suffix.test(curContext.suffix)) {\n          return false;\n        }\n        // @ts-expect-error Fix me later\n        return binding.handler.call(this, range, curContext, binding) !== true;\n      });\n      if (prevented) {\n        evt.preventDefault();\n      }\n    });\n  }\n\n  handleBackspace(range: Range, context: Context) {\n    // Check for astral symbols\n    const length = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]$/.test(context.prefix)\n      ? 2\n      : 1;\n    if (range.index === 0 || this.quill.getLength() <= 1) return;\n    let formats = {};\n    const [line] = this.quill.getLine(range.index);\n    let delta = new Delta().retain(range.index - length).delete(length);\n    if (context.offset === 0) {\n      // Always deleting newline here, length always 1\n      const [prev] = this.quill.getLine(range.index - 1);\n      if (prev) {\n        const isPrevLineEmpty =\n          prev.statics.blotName === 'block' && prev.length() <= 1;\n        if (!isPrevLineEmpty) {\n          // @ts-expect-error Fix me later\n          const curFormats = line.formats();\n          const prevFormats = this.quill.getFormat(range.index - 1, 1);\n          formats = AttributeMap.diff(curFormats, prevFormats) || {};\n          if (Object.keys(formats).length > 0) {\n            // line.length() - 1 targets \\n in line, another -1 for newline being deleted\n            const formatDelta = new Delta()\n              // @ts-expect-error Fix me later\n              .retain(range.index + line.length() - 2)\n              .retain(1, formats);\n            delta = delta.compose(formatDelta);\n          }\n        }\n      }\n    }\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.focus();\n  }\n\n  handleDelete(range: Range, context: Context) {\n    // Check for astral symbols\n    const length = /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/.test(context.suffix)\n      ? 2\n      : 1;\n    if (range.index >= this.quill.getLength() - length) return;\n    let formats = {};\n    const [line] = this.quill.getLine(range.index);\n    let delta = new Delta().retain(range.index).delete(length);\n    // @ts-expect-error Fix me later\n    if (context.offset >= line.length() - 1) {\n      const [next] = this.quill.getLine(range.index + 1);\n      if (next) {\n        // @ts-expect-error Fix me later\n        const curFormats = line.formats();\n        const nextFormats = this.quill.getFormat(range.index, 1);\n        formats = AttributeMap.diff(curFormats, nextFormats) || {};\n        if (Object.keys(formats).length > 0) {\n          delta = delta.retain(next.length() - 1).retain(1, formats);\n        }\n      }\n    }\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.focus();\n  }\n\n  handleDeleteRange(range: Range) {\n    deleteRange({ range, quill: this.quill });\n    this.quill.focus();\n  }\n\n  handleEnter(range: Range, context: Context) {\n    const lineFormats = Object.keys(context.format).reduce(\n      (formats: Record<string, unknown>, format) => {\n        if (\n          this.quill.scroll.query(format, Scope.BLOCK) &&\n          !Array.isArray(context.format[format])\n        ) {\n          formats[format] = context.format[format];\n        }\n        return formats;\n      },\n      {},\n    );\n    const delta = new Delta()\n      .retain(range.index)\n      .delete(range.length)\n      .insert('\\n', lineFormats);\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n    this.quill.focus();\n  }\n}\n\nconst defaultOptions: KeyboardOptions = {\n  bindings: {\n    bold: makeFormatHandler('bold'),\n    italic: makeFormatHandler('italic'),\n    underline: makeFormatHandler('underline'),\n    indent: {\n      // highlight tab or tab at beginning of list, indent or blockquote\n      key: 'Tab',\n      format: ['blockquote', 'indent', 'list'],\n      handler(range, context) {\n        if (context.collapsed && context.offset !== 0) return true;\n        this.quill.format('indent', '+1', Quill.sources.USER);\n        return false;\n      },\n    },\n    outdent: {\n      key: 'Tab',\n      shiftKey: true,\n      format: ['blockquote', 'indent', 'list'],\n      // highlight tab or tab at beginning of list, indent or blockquote\n      handler(range, context) {\n        if (context.collapsed && context.offset !== 0) return true;\n        this.quill.format('indent', '-1', Quill.sources.USER);\n        return false;\n      },\n    },\n    'outdent backspace': {\n      key: 'Backspace',\n      collapsed: true,\n      shiftKey: null,\n      metaKey: null,\n      ctrlKey: null,\n      altKey: null,\n      format: ['indent', 'list'],\n      offset: 0,\n      handler(range, context) {\n        if (context.format.indent != null) {\n          this.quill.format('indent', '-1', Quill.sources.USER);\n        } else if (context.format.list != null) {\n          this.quill.format('list', false, Quill.sources.USER);\n        }\n      },\n    },\n    'indent code-block': makeCodeBlockHandler(true),\n    'outdent code-block': makeCodeBlockHandler(false),\n    'remove tab': {\n      key: 'Tab',\n      shiftKey: true,\n      collapsed: true,\n      prefix: /\\t$/,\n      handler(range) {\n        this.quill.deleteText(range.index - 1, 1, Quill.sources.USER);\n      },\n    },\n    tab: {\n      key: 'Tab',\n      handler(range, context) {\n        if (context.format.table) return true;\n        this.quill.history.cutoff();\n        const delta = new Delta()\n          .retain(range.index)\n          .delete(range.length)\n          .insert('\\t');\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.history.cutoff();\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        return false;\n      },\n    },\n    'blockquote empty enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['blockquote'],\n      empty: true,\n      handler() {\n        this.quill.format('blockquote', false, Quill.sources.USER);\n      },\n    },\n    'list empty enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['list'],\n      empty: true,\n      handler(range, context) {\n        const formats: Record<string, unknown> = { list: false };\n        if (context.format.indent) {\n          formats.indent = false;\n        }\n        this.quill.formatLine(\n          range.index,\n          range.length,\n          formats,\n          Quill.sources.USER,\n        );\n      },\n    },\n    'checklist enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: { list: 'checked' },\n      handler(range) {\n        const [line, offset] = this.quill.getLine(range.index);\n        const formats = {\n          // @ts-expect-error Fix me later\n          ...line.formats(),\n          list: 'checked',\n        };\n        const delta = new Delta()\n          .retain(range.index)\n          .insert('\\n', formats)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - offset - 1)\n          .retain(1, { list: 'unchecked' });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        this.quill.scrollSelectionIntoView();\n      },\n    },\n    'header enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['header'],\n      suffix: /^$/,\n      handler(range, context) {\n        const [line, offset] = this.quill.getLine(range.index);\n        const delta = new Delta()\n          .retain(range.index)\n          .insert('\\n', context.format)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - offset - 1)\n          .retain(1, { header: null });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        this.quill.scrollSelectionIntoView();\n      },\n    },\n    'table backspace': {\n      key: 'Backspace',\n      format: ['table'],\n      collapsed: true,\n      offset: 0,\n      handler() {},\n    },\n    'table delete': {\n      key: 'Delete',\n      format: ['table'],\n      collapsed: true,\n      suffix: /^$/,\n      handler() {},\n    },\n    'table enter': {\n      key: 'Enter',\n      shiftKey: null,\n      format: ['table'],\n      handler(range) {\n        const module = this.quill.getModule('table');\n        if (module) {\n          // @ts-expect-error\n          const [table, row, cell, offset] = module.getTable(range);\n          const shift = tableSide(table, row, cell, offset);\n          if (shift == null) return;\n          let index = table.offset();\n          if (shift < 0) {\n            const delta = new Delta().retain(index).insert('\\n');\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(\n              range.index + 1,\n              range.length,\n              Quill.sources.SILENT,\n            );\n          } else if (shift > 0) {\n            index += table.length();\n            const delta = new Delta().retain(index).insert('\\n');\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(index, Quill.sources.USER);\n          }\n        }\n      },\n    },\n    'table tab': {\n      key: 'Tab',\n      shiftKey: null,\n      format: ['table'],\n      handler(range, context) {\n        const { event, line: cell } = context;\n        const offset = cell.offset(this.quill.scroll);\n        if (event.shiftKey) {\n          this.quill.setSelection(offset - 1, Quill.sources.USER);\n        } else {\n          this.quill.setSelection(offset + cell.length(), Quill.sources.USER);\n        }\n      },\n    },\n    'list autofill': {\n      key: ' ',\n      shiftKey: null,\n      collapsed: true,\n      format: {\n        'code-block': false,\n        blockquote: false,\n        table: false,\n      },\n      prefix: /^\\s*?(\\d+\\.|-|\\*|\\[ ?\\]|\\[x\\])$/,\n      handler(range, context) {\n        if (this.quill.scroll.query('list') == null) return true;\n        const { length } = context.prefix;\n        const [line, offset] = this.quill.getLine(range.index);\n        if (offset > length) return true;\n        let value;\n        switch (context.prefix.trim()) {\n          case '[]':\n          case '[ ]':\n            value = 'unchecked';\n            break;\n          case '[x]':\n            value = 'checked';\n            break;\n          case '-':\n          case '*':\n            value = 'bullet';\n            break;\n          default:\n            value = 'ordered';\n        }\n        this.quill.insertText(range.index, ' ', Quill.sources.USER);\n        this.quill.history.cutoff();\n        const delta = new Delta()\n          .retain(range.index - offset)\n          .delete(length + 1)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - 2 - offset)\n          .retain(1, { list: value });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.history.cutoff();\n        this.quill.setSelection(range.index - length, Quill.sources.SILENT);\n        return false;\n      },\n    },\n    'code exit': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['code-block'],\n      prefix: /^$/,\n      suffix: /^\\s*$/,\n      handler(range) {\n        const [line, offset] = this.quill.getLine(range.index);\n        let numLines = 2;\n        let cur = line;\n        while (\n          cur != null &&\n          cur.length() <= 1 &&\n          cur.formats()['code-block']\n        ) {\n          // @ts-expect-error\n          cur = cur.prev;\n          numLines -= 1;\n          // Requisite prev lines are empty\n          if (numLines <= 0) {\n            const delta = new Delta()\n              // @ts-expect-error Fix me later\n              .retain(range.index + line.length() - offset - 2)\n              .retain(1, { 'code-block': null })\n              .delete(1);\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(range.index - 1, Quill.sources.SILENT);\n            return false;\n          }\n        }\n        return true;\n      },\n    },\n    'embed left': makeEmbedArrowHandler('ArrowLeft', false),\n    'embed left shift': makeEmbedArrowHandler('ArrowLeft', true),\n    'embed right': makeEmbedArrowHandler('ArrowRight', false),\n    'embed right shift': makeEmbedArrowHandler('ArrowRight', true),\n    'table down': makeTableArrowHandler(false),\n    'table up': makeTableArrowHandler(true),\n  },\n};\n\nKeyboard.DEFAULTS = defaultOptions;\n\nfunction makeCodeBlockHandler(indent: boolean): BindingObject {\n  return {\n    key: 'Tab',\n    shiftKey: !indent,\n    format: { 'code-block': true },\n    handler(range, { event }) {\n      const CodeBlock = this.quill.scroll.query('code-block');\n      // @ts-expect-error\n      const { TAB } = CodeBlock;\n      if (range.length === 0 && !event.shiftKey) {\n        this.quill.insertText(range.index, TAB, Quill.sources.USER);\n        this.quill.setSelection(range.index + TAB.length, Quill.sources.SILENT);\n        return;\n      }\n\n      const lines =\n        range.length === 0\n          ? this.quill.getLines(range.index, 1)\n          : this.quill.getLines(range);\n      let { index, length } = range;\n      lines.forEach((line, i) => {\n        if (indent) {\n          line.insertAt(0, TAB);\n          if (i === 0) {\n            index += TAB.length;\n          } else {\n            length += TAB.length;\n          }\n          // @ts-expect-error Fix me later\n        } else if (line.domNode.textContent.startsWith(TAB)) {\n          line.deleteAt(0, TAB.length);\n          if (i === 0) {\n            index -= TAB.length;\n          } else {\n            length -= TAB.length;\n          }\n        }\n      });\n      this.quill.update(Quill.sources.USER);\n      this.quill.setSelection(index, length, Quill.sources.SILENT);\n    },\n  };\n}\n\nfunction makeEmbedArrowHandler(\n  key: string,\n  shiftKey: boolean | null,\n): BindingObject {\n  const where = key === 'ArrowLeft' ? 'prefix' : 'suffix';\n  return {\n    key,\n    shiftKey,\n    altKey: null,\n    [where]: /^$/,\n    handler(range) {\n      let { index } = range;\n      if (key === 'ArrowRight') {\n        index += range.length + 1;\n      }\n      const [leaf] = this.quill.getLeaf(index);\n      if (!(leaf instanceof EmbedBlot)) return true;\n      if (key === 'ArrowLeft') {\n        if (shiftKey) {\n          this.quill.setSelection(\n            range.index - 1,\n            range.length + 1,\n            Quill.sources.USER,\n          );\n        } else {\n          this.quill.setSelection(range.index - 1, Quill.sources.USER);\n        }\n      } else if (shiftKey) {\n        this.quill.setSelection(\n          range.index,\n          range.length + 1,\n          Quill.sources.USER,\n        );\n      } else {\n        this.quill.setSelection(\n          range.index + range.length + 1,\n          Quill.sources.USER,\n        );\n      }\n      return false;\n    },\n  };\n}\n\nfunction makeFormatHandler(format: string): BindingObject {\n  return {\n    key: format[0],\n    shortKey: true,\n    handler(range, context) {\n      this.quill.format(format, !context.format[format], Quill.sources.USER);\n    },\n  };\n}\n\nfunction makeTableArrowHandler(up: boolean): BindingObject {\n  return {\n    key: up ? 'ArrowUp' : 'ArrowDown',\n    collapsed: true,\n    format: ['table'],\n    handler(range, context) {\n      // TODO move to table module\n      const key = up ? 'prev' : 'next';\n      const cell = context.line;\n      const targetRow = cell.parent[key];\n      if (targetRow != null) {\n        if (targetRow.statics.blotName === 'table-row') {\n          // @ts-expect-error\n          let targetCell = targetRow.children.head;\n          let cur = cell;\n          while (cur.prev != null) {\n            // @ts-expect-error\n            cur = cur.prev;\n            targetCell = targetCell.next;\n          }\n          const index =\n            targetCell.offset(this.quill.scroll) +\n            Math.min(context.offset, targetCell.length() - 1);\n          this.quill.setSelection(index, 0, Quill.sources.USER);\n        }\n      } else {\n        // @ts-expect-error\n        const targetLine = cell.table()[key];\n        if (targetLine != null) {\n          if (up) {\n            this.quill.setSelection(\n              targetLine.offset(this.quill.scroll) + targetLine.length() - 1,\n              0,\n              Quill.sources.USER,\n            );\n          } else {\n            this.quill.setSelection(\n              targetLine.offset(this.quill.scroll),\n              0,\n              Quill.sources.USER,\n            );\n          }\n        }\n      }\n      return false;\n    },\n  };\n}\n\nfunction normalize(binding: Binding): BindingObject | null {\n  if (typeof binding === 'string' || typeof binding === 'number') {\n    binding = { key: binding };\n  } else if (typeof binding === 'object') {\n    binding = { ...binding };\n  } else {\n    return null;\n  }\n  if (binding.shortKey) {\n    binding[SHORTKEY] = binding.shortKey;\n    delete binding.shortKey;\n  }\n  return binding;\n}\n\n// TODO: Move into quill.ts or editor.ts\nfunction deleteRange({ quill, range }: { quill: Quill; range: Range }) {\n  const lines = quill.getLines(range);\n  let formats = {};\n  if (lines.length > 1) {\n    const firstFormats = lines[0].formats();\n    const lastFormats = lines[lines.length - 1].formats();\n    formats = AttributeMap.diff(lastFormats, firstFormats) || {};\n  }\n  quill.deleteText(range, Quill.sources.USER);\n  if (Object.keys(formats).length > 0) {\n    quill.formatLine(range.index, 1, formats, Quill.sources.USER);\n  }\n  quill.setSelection(range.index, Quill.sources.SILENT);\n}\n\nfunction tableSide(_table: unknown, row: Blot, cell: Blot, offset: number) {\n  if (row.prev == null && row.next == null) {\n    if (cell.prev == null && cell.next == null) {\n      return offset === 0 ? -1 : 1;\n    }\n    return cell.prev == null ? -1 : 1;\n  }\n  if (row.prev == null) {\n    return -1;\n  }\n  if (row.next == null) {\n    return 1;\n  }\n  return null;\n}\n\nexport { Keyboard as default, SHORTKEY, normalize, deleteRange };\n","var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// node_modules/.pnpm/fast-diff@1.3.0/node_modules/fast-diff/diff.js\nvar require_diff = __commonJS({\n  \"node_modules/.pnpm/fast-diff@1.3.0/node_modules/fast-diff/diff.js\"(exports, module2) {\n    var DIFF_DELETE = -1;\n    var DIFF_INSERT = 1;\n    var DIFF_EQUAL = 0;\n    function diff_main(text1, text2, cursor_pos, cleanup, _fix_unicode) {\n      if (text1 === text2) {\n        if (text1) {\n          return [[DIFF_EQUAL, text1]];\n        }\n        return [];\n      }\n      if (cursor_pos != null) {\n        var editdiff = find_cursor_edit_diff(text1, text2, cursor_pos);\n        if (editdiff) {\n          return editdiff;\n        }\n      }\n      var commonlength = diff_commonPrefix(text1, text2);\n      var commonprefix = text1.substring(0, commonlength);\n      text1 = text1.substring(commonlength);\n      text2 = text2.substring(commonlength);\n      commonlength = diff_commonSuffix(text1, text2);\n      var commonsuffix = text1.substring(text1.length - commonlength);\n      text1 = text1.substring(0, text1.length - commonlength);\n      text2 = text2.substring(0, text2.length - commonlength);\n      var diffs = diff_compute_(text1, text2);\n      if (commonprefix) {\n        diffs.unshift([DIFF_EQUAL, commonprefix]);\n      }\n      if (commonsuffix) {\n        diffs.push([DIFF_EQUAL, commonsuffix]);\n      }\n      diff_cleanupMerge(diffs, _fix_unicode);\n      if (cleanup) {\n        diff_cleanupSemantic(diffs);\n      }\n      return diffs;\n    }\n    function diff_compute_(text1, text2) {\n      var diffs;\n      if (!text1) {\n        return [[DIFF_INSERT, text2]];\n      }\n      if (!text2) {\n        return [[DIFF_DELETE, text1]];\n      }\n      var longtext = text1.length > text2.length ? text1 : text2;\n      var shorttext = text1.length > text2.length ? text2 : text1;\n      var i = longtext.indexOf(shorttext);\n      if (i !== -1) {\n        diffs = [\n          [DIFF_INSERT, longtext.substring(0, i)],\n          [DIFF_EQUAL, shorttext],\n          [DIFF_INSERT, longtext.substring(i + shorttext.length)]\n        ];\n        if (text1.length > text2.length) {\n          diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n        }\n        return diffs;\n      }\n      if (shorttext.length === 1) {\n        return [\n          [DIFF_DELETE, text1],\n          [DIFF_INSERT, text2]\n        ];\n      }\n      var hm = diff_halfMatch_(text1, text2);\n      if (hm) {\n        var text1_a = hm[0];\n        var text1_b = hm[1];\n        var text2_a = hm[2];\n        var text2_b = hm[3];\n        var mid_common = hm[4];\n        var diffs_a = diff_main(text1_a, text2_a);\n        var diffs_b = diff_main(text1_b, text2_b);\n        return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n      }\n      return diff_bisect_(text1, text2);\n    }\n    function diff_bisect_(text1, text2) {\n      var text1_length = text1.length;\n      var text2_length = text2.length;\n      var max_d = Math.ceil((text1_length + text2_length) / 2);\n      var v_offset = max_d;\n      var v_length = 2 * max_d;\n      var v1 = new Array(v_length);\n      var v2 = new Array(v_length);\n      for (var x = 0; x < v_length; x++) {\n        v1[x] = -1;\n        v2[x] = -1;\n      }\n      v1[v_offset + 1] = 0;\n      v2[v_offset + 1] = 0;\n      var delta = text1_length - text2_length;\n      var front = delta % 2 !== 0;\n      var k1start = 0;\n      var k1end = 0;\n      var k2start = 0;\n      var k2end = 0;\n      for (var d = 0; d < max_d; d++) {\n        for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n          var k1_offset = v_offset + k1;\n          var x1;\n          if (k1 === -d || k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1]) {\n            x1 = v1[k1_offset + 1];\n          } else {\n            x1 = v1[k1_offset - 1] + 1;\n          }\n          var y1 = x1 - k1;\n          while (x1 < text1_length && y1 < text2_length && text1.charAt(x1) === text2.charAt(y1)) {\n            x1++;\n            y1++;\n          }\n          v1[k1_offset] = x1;\n          if (x1 > text1_length) {\n            k1end += 2;\n          } else if (y1 > text2_length) {\n            k1start += 2;\n          } else if (front) {\n            var k2_offset = v_offset + delta - k1;\n            if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n              var x2 = text1_length - v2[k2_offset];\n              if (x1 >= x2) {\n                return diff_bisectSplit_(text1, text2, x1, y1);\n              }\n            }\n          }\n        }\n        for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n          var k2_offset = v_offset + k2;\n          var x2;\n          if (k2 === -d || k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1]) {\n            x2 = v2[k2_offset + 1];\n          } else {\n            x2 = v2[k2_offset - 1] + 1;\n          }\n          var y2 = x2 - k2;\n          while (x2 < text1_length && y2 < text2_length && text1.charAt(text1_length - x2 - 1) === text2.charAt(text2_length - y2 - 1)) {\n            x2++;\n            y2++;\n          }\n          v2[k2_offset] = x2;\n          if (x2 > text1_length) {\n            k2end += 2;\n          } else if (y2 > text2_length) {\n            k2start += 2;\n          } else if (!front) {\n            var k1_offset = v_offset + delta - k2;\n            if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n              var x1 = v1[k1_offset];\n              var y1 = v_offset + x1 - k1_offset;\n              x2 = text1_length - x2;\n              if (x1 >= x2) {\n                return diff_bisectSplit_(text1, text2, x1, y1);\n              }\n            }\n          }\n        }\n      }\n      return [\n        [DIFF_DELETE, text1],\n        [DIFF_INSERT, text2]\n      ];\n    }\n    function diff_bisectSplit_(text1, text2, x, y) {\n      var text1a = text1.substring(0, x);\n      var text2a = text2.substring(0, y);\n      var text1b = text1.substring(x);\n      var text2b = text2.substring(y);\n      var diffs = diff_main(text1a, text2a);\n      var diffsb = diff_main(text1b, text2b);\n      return diffs.concat(diffsb);\n    }\n    function diff_commonPrefix(text1, text2) {\n      if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n        return 0;\n      }\n      var pointermin = 0;\n      var pointermax = Math.min(text1.length, text2.length);\n      var pointermid = pointermax;\n      var pointerstart = 0;\n      while (pointermin < pointermid) {\n        if (text1.substring(pointerstart, pointermid) == text2.substring(pointerstart, pointermid)) {\n          pointermin = pointermid;\n          pointerstart = pointermin;\n        } else {\n          pointermax = pointermid;\n        }\n        pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n      }\n      if (is_surrogate_pair_start(text1.charCodeAt(pointermid - 1))) {\n        pointermid--;\n      }\n      return pointermid;\n    }\n    function diff_commonOverlap_(text1, text2) {\n      var text1_length = text1.length;\n      var text2_length = text2.length;\n      if (text1_length == 0 || text2_length == 0) {\n        return 0;\n      }\n      if (text1_length > text2_length) {\n        text1 = text1.substring(text1_length - text2_length);\n      } else if (text1_length < text2_length) {\n        text2 = text2.substring(0, text1_length);\n      }\n      var text_length = Math.min(text1_length, text2_length);\n      if (text1 == text2) {\n        return text_length;\n      }\n      var best = 0;\n      var length = 1;\n      while (true) {\n        var pattern = text1.substring(text_length - length);\n        var found = text2.indexOf(pattern);\n        if (found == -1) {\n          return best;\n        }\n        length += found;\n        if (found == 0 || text1.substring(text_length - length) == text2.substring(0, length)) {\n          best = length;\n          length++;\n        }\n      }\n    }\n    function diff_commonSuffix(text1, text2) {\n      if (!text1 || !text2 || text1.slice(-1) !== text2.slice(-1)) {\n        return 0;\n      }\n      var pointermin = 0;\n      var pointermax = Math.min(text1.length, text2.length);\n      var pointermid = pointermax;\n      var pointerend = 0;\n      while (pointermin < pointermid) {\n        if (text1.substring(text1.length - pointermid, text1.length - pointerend) == text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n          pointermin = pointermid;\n          pointerend = pointermin;\n        } else {\n          pointermax = pointermid;\n        }\n        pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n      }\n      if (is_surrogate_pair_end(text1.charCodeAt(text1.length - pointermid))) {\n        pointermid--;\n      }\n      return pointermid;\n    }\n    function diff_halfMatch_(text1, text2) {\n      var longtext = text1.length > text2.length ? text1 : text2;\n      var shorttext = text1.length > text2.length ? text2 : text1;\n      if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n        return null;\n      }\n      function diff_halfMatchI_(longtext2, shorttext2, i) {\n        var seed = longtext2.substring(i, i + Math.floor(longtext2.length / 4));\n        var j = -1;\n        var best_common = \"\";\n        var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n        while ((j = shorttext2.indexOf(seed, j + 1)) !== -1) {\n          var prefixLength = diff_commonPrefix(\n            longtext2.substring(i),\n            shorttext2.substring(j)\n          );\n          var suffixLength = diff_commonSuffix(\n            longtext2.substring(0, i),\n            shorttext2.substring(0, j)\n          );\n          if (best_common.length < suffixLength + prefixLength) {\n            best_common = shorttext2.substring(j - suffixLength, j) + shorttext2.substring(j, j + prefixLength);\n            best_longtext_a = longtext2.substring(0, i - suffixLength);\n            best_longtext_b = longtext2.substring(i + prefixLength);\n            best_shorttext_a = shorttext2.substring(0, j - suffixLength);\n            best_shorttext_b = shorttext2.substring(j + prefixLength);\n          }\n        }\n        if (best_common.length * 2 >= longtext2.length) {\n          return [\n            best_longtext_a,\n            best_longtext_b,\n            best_shorttext_a,\n            best_shorttext_b,\n            best_common\n          ];\n        } else {\n          return null;\n        }\n      }\n      var hm1 = diff_halfMatchI_(\n        longtext,\n        shorttext,\n        Math.ceil(longtext.length / 4)\n      );\n      var hm2 = diff_halfMatchI_(\n        longtext,\n        shorttext,\n        Math.ceil(longtext.length / 2)\n      );\n      var hm;\n      if (!hm1 && !hm2) {\n        return null;\n      } else if (!hm2) {\n        hm = hm1;\n      } else if (!hm1) {\n        hm = hm2;\n      } else {\n        hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n      }\n      var text1_a, text1_b, text2_a, text2_b;\n      if (text1.length > text2.length) {\n        text1_a = hm[0];\n        text1_b = hm[1];\n        text2_a = hm[2];\n        text2_b = hm[3];\n      } else {\n        text2_a = hm[0];\n        text2_b = hm[1];\n        text1_a = hm[2];\n        text1_b = hm[3];\n      }\n      var mid_common = hm[4];\n      return [text1_a, text1_b, text2_a, text2_b, mid_common];\n    }\n    function diff_cleanupSemantic(diffs) {\n      var changes = false;\n      var equalities = [];\n      var equalitiesLength = 0;\n      var lastequality = null;\n      var pointer = 0;\n      var length_insertions1 = 0;\n      var length_deletions1 = 0;\n      var length_insertions2 = 0;\n      var length_deletions2 = 0;\n      while (pointer < diffs.length) {\n        if (diffs[pointer][0] == DIFF_EQUAL) {\n          equalities[equalitiesLength++] = pointer;\n          length_insertions1 = length_insertions2;\n          length_deletions1 = length_deletions2;\n          length_insertions2 = 0;\n          length_deletions2 = 0;\n          lastequality = diffs[pointer][1];\n        } else {\n          if (diffs[pointer][0] == DIFF_INSERT) {\n            length_insertions2 += diffs[pointer][1].length;\n          } else {\n            length_deletions2 += diffs[pointer][1].length;\n          }\n          if (lastequality && lastequality.length <= Math.max(length_insertions1, length_deletions1) && lastequality.length <= Math.max(length_insertions2, length_deletions2)) {\n            diffs.splice(equalities[equalitiesLength - 1], 0, [\n              DIFF_DELETE,\n              lastequality\n            ]);\n            diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n            equalitiesLength--;\n            equalitiesLength--;\n            pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n            length_insertions1 = 0;\n            length_deletions1 = 0;\n            length_insertions2 = 0;\n            length_deletions2 = 0;\n            lastequality = null;\n            changes = true;\n          }\n        }\n        pointer++;\n      }\n      if (changes) {\n        diff_cleanupMerge(diffs);\n      }\n      diff_cleanupSemanticLossless(diffs);\n      pointer = 1;\n      while (pointer < diffs.length) {\n        if (diffs[pointer - 1][0] == DIFF_DELETE && diffs[pointer][0] == DIFF_INSERT) {\n          var deletion = diffs[pointer - 1][1];\n          var insertion = diffs[pointer][1];\n          var overlap_length1 = diff_commonOverlap_(deletion, insertion);\n          var overlap_length2 = diff_commonOverlap_(insertion, deletion);\n          if (overlap_length1 >= overlap_length2) {\n            if (overlap_length1 >= deletion.length / 2 || overlap_length1 >= insertion.length / 2) {\n              diffs.splice(pointer, 0, [\n                DIFF_EQUAL,\n                insertion.substring(0, overlap_length1)\n              ]);\n              diffs[pointer - 1][1] = deletion.substring(\n                0,\n                deletion.length - overlap_length1\n              );\n              diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n              pointer++;\n            }\n          } else {\n            if (overlap_length2 >= deletion.length / 2 || overlap_length2 >= insertion.length / 2) {\n              diffs.splice(pointer, 0, [\n                DIFF_EQUAL,\n                deletion.substring(0, overlap_length2)\n              ]);\n              diffs[pointer - 1][0] = DIFF_INSERT;\n              diffs[pointer - 1][1] = insertion.substring(\n                0,\n                insertion.length - overlap_length2\n              );\n              diffs[pointer + 1][0] = DIFF_DELETE;\n              diffs[pointer + 1][1] = deletion.substring(overlap_length2);\n              pointer++;\n            }\n          }\n          pointer++;\n        }\n        pointer++;\n      }\n    }\n    var nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\n    var whitespaceRegex_ = /\\s/;\n    var linebreakRegex_ = /[\\r\\n]/;\n    var blanklineEndRegex_ = /\\n\\r?\\n$/;\n    var blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n    function diff_cleanupSemanticLossless(diffs) {\n      function diff_cleanupSemanticScore_(one, two) {\n        if (!one || !two) {\n          return 6;\n        }\n        var char1 = one.charAt(one.length - 1);\n        var char2 = two.charAt(0);\n        var nonAlphaNumeric1 = char1.match(nonAlphaNumericRegex_);\n        var nonAlphaNumeric2 = char2.match(nonAlphaNumericRegex_);\n        var whitespace1 = nonAlphaNumeric1 && char1.match(whitespaceRegex_);\n        var whitespace2 = nonAlphaNumeric2 && char2.match(whitespaceRegex_);\n        var lineBreak1 = whitespace1 && char1.match(linebreakRegex_);\n        var lineBreak2 = whitespace2 && char2.match(linebreakRegex_);\n        var blankLine1 = lineBreak1 && one.match(blanklineEndRegex_);\n        var blankLine2 = lineBreak2 && two.match(blanklineStartRegex_);\n        if (blankLine1 || blankLine2) {\n          return 5;\n        } else if (lineBreak1 || lineBreak2) {\n          return 4;\n        } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n          return 3;\n        } else if (whitespace1 || whitespace2) {\n          return 2;\n        } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n          return 1;\n        }\n        return 0;\n      }\n      var pointer = 1;\n      while (pointer < diffs.length - 1) {\n        if (diffs[pointer - 1][0] == DIFF_EQUAL && diffs[pointer + 1][0] == DIFF_EQUAL) {\n          var equality1 = diffs[pointer - 1][1];\n          var edit = diffs[pointer][1];\n          var equality2 = diffs[pointer + 1][1];\n          var commonOffset = diff_commonSuffix(equality1, edit);\n          if (commonOffset) {\n            var commonString = edit.substring(edit.length - commonOffset);\n            equality1 = equality1.substring(0, equality1.length - commonOffset);\n            edit = commonString + edit.substring(0, edit.length - commonOffset);\n            equality2 = commonString + equality2;\n          }\n          var bestEquality1 = equality1;\n          var bestEdit = edit;\n          var bestEquality2 = equality2;\n          var bestScore = diff_cleanupSemanticScore_(equality1, edit) + diff_cleanupSemanticScore_(edit, equality2);\n          while (edit.charAt(0) === equality2.charAt(0)) {\n            equality1 += edit.charAt(0);\n            edit = edit.substring(1) + equality2.charAt(0);\n            equality2 = equality2.substring(1);\n            var score = diff_cleanupSemanticScore_(equality1, edit) + diff_cleanupSemanticScore_(edit, equality2);\n            if (score >= bestScore) {\n              bestScore = score;\n              bestEquality1 = equality1;\n              bestEdit = edit;\n              bestEquality2 = equality2;\n            }\n          }\n          if (diffs[pointer - 1][1] != bestEquality1) {\n            if (bestEquality1) {\n              diffs[pointer - 1][1] = bestEquality1;\n            } else {\n              diffs.splice(pointer - 1, 1);\n              pointer--;\n            }\n            diffs[pointer][1] = bestEdit;\n            if (bestEquality2) {\n              diffs[pointer + 1][1] = bestEquality2;\n            } else {\n              diffs.splice(pointer + 1, 1);\n              pointer--;\n            }\n          }\n        }\n        pointer++;\n      }\n    }\n    function diff_cleanupMerge(diffs, fix_unicode) {\n      diffs.push([DIFF_EQUAL, \"\"]);\n      var pointer = 0;\n      var count_delete = 0;\n      var count_insert = 0;\n      var text_delete = \"\";\n      var text_insert = \"\";\n      var commonlength;\n      while (pointer < diffs.length) {\n        if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n          diffs.splice(pointer, 1);\n          continue;\n        }\n        switch (diffs[pointer][0]) {\n          case DIFF_INSERT:\n            count_insert++;\n            text_insert += diffs[pointer][1];\n            pointer++;\n            break;\n          case DIFF_DELETE:\n            count_delete++;\n            text_delete += diffs[pointer][1];\n            pointer++;\n            break;\n          case DIFF_EQUAL:\n            var previous_equality = pointer - count_insert - count_delete - 1;\n            if (fix_unicode) {\n              if (previous_equality >= 0 && ends_with_pair_start(diffs[previous_equality][1])) {\n                var stray = diffs[previous_equality][1].slice(-1);\n                diffs[previous_equality][1] = diffs[previous_equality][1].slice(\n                  0,\n                  -1\n                );\n                text_delete = stray + text_delete;\n                text_insert = stray + text_insert;\n                if (!diffs[previous_equality][1]) {\n                  diffs.splice(previous_equality, 1);\n                  pointer--;\n                  var k = previous_equality - 1;\n                  if (diffs[k] && diffs[k][0] === DIFF_INSERT) {\n                    count_insert++;\n                    text_insert = diffs[k][1] + text_insert;\n                    k--;\n                  }\n                  if (diffs[k] && diffs[k][0] === DIFF_DELETE) {\n                    count_delete++;\n                    text_delete = diffs[k][1] + text_delete;\n                    k--;\n                  }\n                  previous_equality = k;\n                }\n              }\n              if (starts_with_pair_end(diffs[pointer][1])) {\n                var stray = diffs[pointer][1].charAt(0);\n                diffs[pointer][1] = diffs[pointer][1].slice(1);\n                text_delete += stray;\n                text_insert += stray;\n              }\n            }\n            if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n              diffs.splice(pointer, 1);\n              break;\n            }\n            if (text_delete.length > 0 || text_insert.length > 0) {\n              if (text_delete.length > 0 && text_insert.length > 0) {\n                commonlength = diff_commonPrefix(text_insert, text_delete);\n                if (commonlength !== 0) {\n                  if (previous_equality >= 0) {\n                    diffs[previous_equality][1] += text_insert.substring(\n                      0,\n                      commonlength\n                    );\n                  } else {\n                    diffs.splice(0, 0, [\n                      DIFF_EQUAL,\n                      text_insert.substring(0, commonlength)\n                    ]);\n                    pointer++;\n                  }\n                  text_insert = text_insert.substring(commonlength);\n                  text_delete = text_delete.substring(commonlength);\n                }\n                commonlength = diff_commonSuffix(text_insert, text_delete);\n                if (commonlength !== 0) {\n                  diffs[pointer][1] = text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];\n                  text_insert = text_insert.substring(\n                    0,\n                    text_insert.length - commonlength\n                  );\n                  text_delete = text_delete.substring(\n                    0,\n                    text_delete.length - commonlength\n                  );\n                }\n              }\n              var n = count_insert + count_delete;\n              if (text_delete.length === 0 && text_insert.length === 0) {\n                diffs.splice(pointer - n, n);\n                pointer = pointer - n;\n              } else if (text_delete.length === 0) {\n                diffs.splice(pointer - n, n, [DIFF_INSERT, text_insert]);\n                pointer = pointer - n + 1;\n              } else if (text_insert.length === 0) {\n                diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete]);\n                pointer = pointer - n + 1;\n              } else {\n                diffs.splice(\n                  pointer - n,\n                  n,\n                  [DIFF_DELETE, text_delete],\n                  [DIFF_INSERT, text_insert]\n                );\n                pointer = pointer - n + 2;\n              }\n            }\n            if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n              diffs[pointer - 1][1] += diffs[pointer][1];\n              diffs.splice(pointer, 1);\n            } else {\n              pointer++;\n            }\n            count_insert = 0;\n            count_delete = 0;\n            text_delete = \"\";\n            text_insert = \"\";\n            break;\n        }\n      }\n      if (diffs[diffs.length - 1][1] === \"\") {\n        diffs.pop();\n      }\n      var changes = false;\n      pointer = 1;\n      while (pointer < diffs.length - 1) {\n        if (diffs[pointer - 1][0] === DIFF_EQUAL && diffs[pointer + 1][0] === DIFF_EQUAL) {\n          if (diffs[pointer][1].substring(\n            diffs[pointer][1].length - diffs[pointer - 1][1].length\n          ) === diffs[pointer - 1][1]) {\n            diffs[pointer][1] = diffs[pointer - 1][1] + diffs[pointer][1].substring(\n              0,\n              diffs[pointer][1].length - diffs[pointer - 1][1].length\n            );\n            diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n            diffs.splice(pointer - 1, 1);\n            changes = true;\n          } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) == diffs[pointer + 1][1]) {\n            diffs[pointer - 1][1] += diffs[pointer + 1][1];\n            diffs[pointer][1] = diffs[pointer][1].substring(diffs[pointer + 1][1].length) + diffs[pointer + 1][1];\n            diffs.splice(pointer + 1, 1);\n            changes = true;\n          }\n        }\n        pointer++;\n      }\n      if (changes) {\n        diff_cleanupMerge(diffs, fix_unicode);\n      }\n    }\n    function is_surrogate_pair_start(charCode) {\n      return charCode >= 55296 && charCode <= 56319;\n    }\n    function is_surrogate_pair_end(charCode) {\n      return charCode >= 56320 && charCode <= 57343;\n    }\n    function starts_with_pair_end(str) {\n      return is_surrogate_pair_end(str.charCodeAt(0));\n    }\n    function ends_with_pair_start(str) {\n      return is_surrogate_pair_start(str.charCodeAt(str.length - 1));\n    }\n    function remove_empty_tuples(tuples) {\n      var ret = [];\n      for (var i = 0; i < tuples.length; i++) {\n        if (tuples[i][1].length > 0) {\n          ret.push(tuples[i]);\n        }\n      }\n      return ret;\n    }\n    function make_edit_splice(before, oldMiddle, newMiddle, after) {\n      if (ends_with_pair_start(before) || starts_with_pair_end(after)) {\n        return null;\n      }\n      return remove_empty_tuples([\n        [DIFF_EQUAL, before],\n        [DIFF_DELETE, oldMiddle],\n        [DIFF_INSERT, newMiddle],\n        [DIFF_EQUAL, after]\n      ]);\n    }\n    function find_cursor_edit_diff(oldText, newText, cursor_pos) {\n      var oldRange = typeof cursor_pos === \"number\" ? { index: cursor_pos, length: 0 } : cursor_pos.oldRange;\n      var newRange = typeof cursor_pos === \"number\" ? null : cursor_pos.newRange;\n      var oldLength = oldText.length;\n      var newLength = newText.length;\n      if (oldRange.length === 0 && (newRange === null || newRange.length === 0)) {\n        var oldCursor = oldRange.index;\n        var oldBefore = oldText.slice(0, oldCursor);\n        var oldAfter = oldText.slice(oldCursor);\n        var maybeNewCursor = newRange ? newRange.index : null;\n        editBefore: {\n          var newCursor = oldCursor + newLength - oldLength;\n          if (maybeNewCursor !== null && maybeNewCursor !== newCursor) {\n            break editBefore;\n          }\n          if (newCursor < 0 || newCursor > newLength) {\n            break editBefore;\n          }\n          var newBefore = newText.slice(0, newCursor);\n          var newAfter = newText.slice(newCursor);\n          if (newAfter !== oldAfter) {\n            break editBefore;\n          }\n          var prefixLength = Math.min(oldCursor, newCursor);\n          var oldPrefix = oldBefore.slice(0, prefixLength);\n          var newPrefix = newBefore.slice(0, prefixLength);\n          if (oldPrefix !== newPrefix) {\n            break editBefore;\n          }\n          var oldMiddle = oldBefore.slice(prefixLength);\n          var newMiddle = newBefore.slice(prefixLength);\n          return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldAfter);\n        }\n        editAfter: {\n          if (maybeNewCursor !== null && maybeNewCursor !== oldCursor) {\n            break editAfter;\n          }\n          var cursor = oldCursor;\n          var newBefore = newText.slice(0, cursor);\n          var newAfter = newText.slice(cursor);\n          if (newBefore !== oldBefore) {\n            break editAfter;\n          }\n          var suffixLength = Math.min(oldLength - cursor, newLength - cursor);\n          var oldSuffix = oldAfter.slice(oldAfter.length - suffixLength);\n          var newSuffix = newAfter.slice(newAfter.length - suffixLength);\n          if (oldSuffix !== newSuffix) {\n            break editAfter;\n          }\n          var oldMiddle = oldAfter.slice(0, oldAfter.length - suffixLength);\n          var newMiddle = newAfter.slice(0, newAfter.length - suffixLength);\n          return make_edit_splice(oldBefore, oldMiddle, newMiddle, oldSuffix);\n        }\n      }\n      if (oldRange.length > 0 && newRange && newRange.length === 0) {\n        replaceRange: {\n          var oldPrefix = oldText.slice(0, oldRange.index);\n          var oldSuffix = oldText.slice(oldRange.index + oldRange.length);\n          var prefixLength = oldPrefix.length;\n          var suffixLength = oldSuffix.length;\n          if (newLength < prefixLength + suffixLength) {\n            break replaceRange;\n          }\n          var newPrefix = newText.slice(0, prefixLength);\n          var newSuffix = newText.slice(newLength - suffixLength);\n          if (oldPrefix !== newPrefix || oldSuffix !== newSuffix) {\n            break replaceRange;\n          }\n          var oldMiddle = oldText.slice(prefixLength, oldLength - suffixLength);\n          var newMiddle = newText.slice(prefixLength, newLength - suffixLength);\n          return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldSuffix);\n        }\n      }\n      return null;\n    }\n    function diff2(text1, text2, cursor_pos, cleanup) {\n      return diff_main(text1, text2, cursor_pos, cleanup, true);\n    }\n    diff2.INSERT = DIFF_INSERT;\n    diff2.DELETE = DIFF_DELETE;\n    diff2.EQUAL = DIFF_EQUAL;\n    module2.exports = diff2;\n  }\n});\n\n// dist/esm/Delta.js\nvar import_fast_diff = __toESM(require_diff());\n\n// dist/esm/cloneDeep.js\nfunction cloneDeep(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\nvar cloneDeep_default = cloneDeep;\n\n// dist/esm/deepEqual.js\nfunction deepEqual(obj1, obj2) {\n  if (obj1 === obj2)\n    return true;\n  if (isPrimitive(obj1) || isPrimitive(obj2))\n    return obj1 === obj2;\n  if (Object.keys(obj1).length !== Object.keys(obj2).length)\n    return false;\n  for (let key in obj1) {\n    if (!(key in obj2))\n      return false;\n    if (!deepEqual(obj1[key], obj2[key]))\n      return false;\n  }\n  return true;\n}\nfunction isPrimitive(obj) {\n  return obj !== Object(obj);\n}\nvar deepEqual_default = deepEqual;\n\n// dist/esm/AttributeMap.js\nvar AttributeMap;\n(function(AttributeMap2) {\n  function compose(a = {}, b = {}, keepNull = false) {\n    if (typeof a !== \"object\") {\n      a = {};\n    }\n    if (typeof b !== \"object\") {\n      b = {};\n    }\n    let attributes = cloneDeep_default(b);\n    if (!keepNull) {\n      attributes = Object.keys(attributes).reduce((copy, key) => {\n        if (attributes[key] != null) {\n          copy[key] = attributes[key];\n        }\n        return copy;\n      }, {});\n    }\n    for (const key in a) {\n      if (a[key] !== void 0 && b[key] === void 0) {\n        attributes[key] = a[key];\n      }\n    }\n    return Object.keys(attributes).length > 0 ? attributes : void 0;\n  }\n  AttributeMap2.compose = compose;\n  function diff2(a = {}, b = {}) {\n    if (typeof a !== \"object\") {\n      a = {};\n    }\n    if (typeof b !== \"object\") {\n      b = {};\n    }\n    const attributes = Object.keys(a).concat(Object.keys(b)).reduce((attrs, key) => {\n      if (!deepEqual_default(a[key], b[key])) {\n        attrs[key] = b[key] === void 0 ? null : b[key];\n      }\n      return attrs;\n    }, {});\n    return Object.keys(attributes).length > 0 ? attributes : void 0;\n  }\n  AttributeMap2.diff = diff2;\n  function invert(attr = {}, base = {}) {\n    attr = attr || {};\n    const baseInverted = Object.keys(base).reduce((memo, key) => {\n      if (base[key] !== attr[key] && attr[key] !== void 0) {\n        memo[key] = base[key];\n      }\n      return memo;\n    }, {});\n    return Object.keys(attr).reduce((memo, key) => {\n      if (attr[key] !== base[key] && base[key] === void 0) {\n        memo[key] = null;\n      }\n      return memo;\n    }, baseInverted);\n  }\n  AttributeMap2.invert = invert;\n  function transform(a, b, priority = false) {\n    if (typeof a !== \"object\") {\n      return b;\n    }\n    if (typeof b !== \"object\") {\n      return void 0;\n    }\n    if (!priority) {\n      return b;\n    }\n    const attributes = Object.keys(b).reduce((attrs, key) => {\n      if (a[key] === void 0) {\n        attrs[key] = b[key];\n      }\n      return attrs;\n    }, {});\n    return Object.keys(attributes).length > 0 ? attributes : void 0;\n  }\n  AttributeMap2.transform = transform;\n})(AttributeMap || (AttributeMap = {}));\nvar AttributeMap_default = AttributeMap;\n\n// dist/esm/Op.js\nvar Op;\n(function(Op2) {\n  function length(op) {\n    if (typeof op.delete === \"number\") {\n      return op.delete;\n    } else if (typeof op.retain === \"number\") {\n      return op.retain;\n    } else if (typeof op.retain === \"object\" && op.retain !== null) {\n      return 1;\n    } else {\n      return typeof op.insert === \"string\" ? op.insert.length : 1;\n    }\n  }\n  Op2.length = length;\n})(Op || (Op = {}));\nvar Op_default = Op;\n\n// dist/esm/OpIterator.js\nvar Iterator = class {\n  ops;\n  index;\n  offset;\n  constructor(ops) {\n    this.ops = ops;\n    this.index = 0;\n    this.offset = 0;\n  }\n  hasNext() {\n    return this.peekLength() < Infinity;\n  }\n  next(length) {\n    if (!length) {\n      length = Infinity;\n    }\n    const nextOp = this.ops[this.index];\n    if (nextOp) {\n      const offset = this.offset;\n      const opLength = Op_default.length(nextOp);\n      if (length >= opLength - offset) {\n        length = opLength - offset;\n        this.index += 1;\n        this.offset = 0;\n      } else {\n        this.offset += length;\n      }\n      if (typeof nextOp.delete === \"number\") {\n        return { delete: length };\n      } else {\n        const retOp = {};\n        if (nextOp.attributes) {\n          retOp.attributes = nextOp.attributes;\n        }\n        if (typeof nextOp.retain === \"number\") {\n          retOp.retain = length;\n        } else if (typeof nextOp.retain === \"object\" && nextOp.retain !== null) {\n          retOp.retain = nextOp.retain;\n        } else if (typeof nextOp.insert === \"string\") {\n          retOp.insert = nextOp.insert.substr(offset, length);\n        } else {\n          retOp.insert = nextOp.insert;\n        }\n        return retOp;\n      }\n    } else {\n      return { retain: Infinity };\n    }\n  }\n  peek() {\n    return this.ops[this.index];\n  }\n  peekLength() {\n    if (this.ops[this.index]) {\n      return Op_default.length(this.ops[this.index]) - this.offset;\n    } else {\n      return Infinity;\n    }\n  }\n  peekType() {\n    const op = this.ops[this.index];\n    if (op) {\n      if (typeof op.delete === \"number\") {\n        return \"delete\";\n      } else if (typeof op.retain === \"number\" || typeof op.retain === \"object\" && op.retain !== null) {\n        return \"retain\";\n      } else {\n        return \"insert\";\n      }\n    }\n    return \"retain\";\n  }\n  rest() {\n    if (!this.hasNext()) {\n      return [];\n    } else if (this.offset === 0) {\n      return this.ops.slice(this.index);\n    } else {\n      const offset = this.offset;\n      const index = this.index;\n      const next = this.next();\n      const rest = this.ops.slice(this.index);\n      this.offset = offset;\n      this.index = index;\n      return [next].concat(rest);\n    }\n  }\n};\n\n// dist/esm/Delta.js\nvar NULL_CHARACTER = String.fromCharCode(0);\nvar getEmbedTypeAndData = (a, b) => {\n  if (typeof a !== \"object\" || a === null) {\n    throw new Error(`cannot retain a ${typeof a}`);\n  }\n  if (typeof b !== \"object\" || b === null) {\n    throw new Error(`cannot retain a ${typeof b}`);\n  }\n  const embedType = Object.keys(a)[0];\n  if (!embedType || embedType !== Object.keys(b)[0]) {\n    throw new Error(`embed types not matched: ${embedType} != ${Object.keys(b)[0]}`);\n  }\n  return [embedType, a[embedType], b[embedType]];\n};\nvar Delta = class _Delta {\n  static Op = Op_default;\n  static OpIterator = Iterator;\n  static AttributeMap = AttributeMap_default;\n  static handlers = {};\n  static registerEmbed(embedType, handler) {\n    this.handlers[embedType] = handler;\n  }\n  static unregisterEmbed(embedType) {\n    delete this.handlers[embedType];\n  }\n  static getHandler(embedType) {\n    const handler = this.handlers[embedType];\n    if (!handler) {\n      throw new Error(`no handlers for embed type \"${embedType}\"`);\n    }\n    return handler;\n  }\n  ops;\n  inverted;\n  constructor(ops) {\n    if (Array.isArray(ops)) {\n      this.ops = ops;\n    } else if (ops != null && Array.isArray(ops.ops)) {\n      this.ops = ops.ops;\n      this.inverted = ops.inverted;\n    } else {\n      this.ops = [];\n    }\n  }\n  insert(arg, attributes) {\n    const newOp = {};\n    if (typeof arg === \"string\" && arg.length === 0) {\n      return this;\n    }\n    newOp.insert = arg;\n    if (attributes != null && typeof attributes === \"object\" && Object.keys(attributes).length > 0) {\n      newOp.attributes = attributes;\n    }\n    return this.push(newOp);\n  }\n  delete(length) {\n    if (length <= 0) {\n      return this;\n    }\n    return this.push({ delete: length });\n  }\n  retain(length, attributes) {\n    if (typeof length === \"number\" && length <= 0) {\n      return this;\n    }\n    const newOp = { retain: length };\n    if (attributes != null && typeof attributes === \"object\" && Object.keys(attributes).length > 0) {\n      newOp.attributes = attributes;\n    }\n    return this.push(newOp);\n  }\n  push(newOp) {\n    let index = this.ops.length;\n    let lastOp = this.ops[index - 1];\n    newOp = cloneDeep_default(newOp);\n    if (typeof lastOp === \"object\") {\n      if (typeof newOp.delete === \"number\" && typeof lastOp.delete === \"number\") {\n        this.ops[index - 1] = { delete: lastOp.delete + newOp.delete };\n        return this;\n      }\n      if (typeof lastOp.delete === \"number\" && newOp.insert != null) {\n        index -= 1;\n        lastOp = this.ops[index - 1];\n        if (typeof lastOp !== \"object\") {\n          this.ops.unshift(newOp);\n          return this;\n        }\n      }\n      if (deepEqual_default(newOp.attributes, lastOp.attributes)) {\n        if (typeof newOp.insert === \"string\" && typeof lastOp.insert === \"string\") {\n          this.ops[index - 1] = { insert: lastOp.insert + newOp.insert };\n          if (typeof newOp.attributes === \"object\") {\n            this.ops[index - 1].attributes = newOp.attributes;\n          }\n          return this;\n        } else if (typeof newOp.retain === \"number\" && typeof lastOp.retain === \"number\") {\n          this.ops[index - 1] = { retain: lastOp.retain + newOp.retain };\n          if (typeof newOp.attributes === \"object\") {\n            this.ops[index - 1].attributes = newOp.attributes;\n          }\n          return this;\n        }\n      }\n    }\n    if (index === this.ops.length) {\n      this.ops.push(newOp);\n    } else {\n      this.ops.splice(index, 0, newOp);\n    }\n    return this;\n  }\n  chop() {\n    const lastOp = this.ops[this.ops.length - 1];\n    if (lastOp && typeof lastOp.retain === \"number\" && !lastOp.attributes) {\n      this.ops.pop();\n    }\n    return this;\n  }\n  filter(predicate) {\n    return this.ops.filter(predicate);\n  }\n  forEach(predicate) {\n    this.ops.forEach(predicate);\n  }\n  map(predicate) {\n    return this.ops.map(predicate);\n  }\n  partition(predicate) {\n    const passed = [];\n    const failed = [];\n    this.forEach((op) => {\n      const target = predicate(op) ? passed : failed;\n      target.push(op);\n    });\n    return [passed, failed];\n  }\n  reduce(predicate, initialValue) {\n    return this.ops.reduce(predicate, initialValue);\n  }\n  changeLength() {\n    return this.reduce((length, elem) => {\n      if (elem.insert) {\n        return length + Op_default.length(elem);\n      } else if (elem.delete) {\n        return length - elem.delete;\n      }\n      return length;\n    }, 0);\n  }\n  length() {\n    return this.reduce((length, elem) => {\n      return length + Op_default.length(elem);\n    }, 0);\n  }\n  slice(start = 0, end = Infinity) {\n    const ops = [];\n    const iter = new Iterator(this.ops);\n    let index = 0;\n    while (index < end && iter.hasNext()) {\n      let nextOp;\n      if (index < start) {\n        nextOp = iter.next(start - index);\n      } else {\n        nextOp = iter.next(end - index);\n        ops.push(nextOp);\n      }\n      index += Op_default.length(nextOp);\n    }\n    return new _Delta(ops);\n  }\n  compose(other) {\n    const thisIter = new Iterator(this.ops);\n    const otherIter = new Iterator(other.ops);\n    const ops = [];\n    const firstOther = otherIter.peek();\n    if (firstOther != null && typeof firstOther.retain === \"number\" && firstOther.attributes == null) {\n      let firstLeft = firstOther.retain;\n      while (thisIter.peekType() === \"insert\" && thisIter.peekLength() <= firstLeft) {\n        firstLeft -= thisIter.peekLength();\n        ops.push(thisIter.next());\n      }\n      if (firstOther.retain - firstLeft > 0) {\n        otherIter.next(firstOther.retain - firstLeft);\n      }\n    }\n    const delta = new _Delta(ops);\n    while (thisIter.hasNext() || otherIter.hasNext()) {\n      if (otherIter.peekType() === \"insert\") {\n        delta.push(otherIter.next());\n      } else if (thisIter.peekType() === \"delete\") {\n        delta.push(thisIter.next());\n      } else {\n        const length = Math.min(thisIter.peekLength(), otherIter.peekLength());\n        const thisOp = thisIter.next(length);\n        const otherOp = otherIter.next(length);\n        if (otherOp.retain) {\n          const newOp = {};\n          if (typeof thisOp.retain === \"number\") {\n            newOp.retain = typeof otherOp.retain === \"number\" ? length : otherOp.retain;\n          } else {\n            if (typeof otherOp.retain === \"number\") {\n              if (thisOp.retain == null) {\n                newOp.insert = thisOp.insert;\n              } else {\n                newOp.retain = thisOp.retain;\n              }\n            } else {\n              const action = thisOp.retain == null ? \"insert\" : \"retain\";\n              const [embedType, thisData, otherData] = getEmbedTypeAndData(thisOp[action], otherOp.retain);\n              const handler = _Delta.getHandler(embedType);\n              newOp[action] = {\n                [embedType]: handler.compose(thisData, otherData, action === \"retain\")\n              };\n            }\n          }\n          const attributes = AttributeMap_default.compose(thisOp.attributes, otherOp.attributes, typeof thisOp.retain === \"number\");\n          if (attributes) {\n            newOp.attributes = attributes;\n          }\n          delta.push(newOp);\n          if (!otherIter.hasNext() && deepEqual_default(delta.ops[delta.ops.length - 1], newOp)) {\n            const rest = new _Delta(thisIter.rest());\n            return delta.concat(rest).chop();\n          }\n        } else if (typeof otherOp.delete === \"number\" && (typeof thisOp.retain === \"number\" || typeof thisOp.retain === \"object\" && thisOp.retain !== null)) {\n          delta.push(otherOp);\n        }\n      }\n    }\n    return delta.chop();\n  }\n  concat(other) {\n    const delta = new _Delta(this.ops.slice());\n    if (other.ops.length > 0) {\n      delta.push(other.ops[0]);\n      delta.ops = delta.ops.concat(other.ops.slice(1));\n    }\n    return delta;\n  }\n  diff(other, cursor) {\n    if (this.ops === other.ops) {\n      return new _Delta();\n    }\n    const strings = [this, other].map((delta) => {\n      return delta.map((op) => {\n        if (op.insert != null) {\n          return typeof op.insert === \"string\" ? op.insert : NULL_CHARACTER;\n        }\n        const prep = delta === other ? \"on\" : \"with\";\n        throw new Error(\"diff() called \" + prep + \" non-document\");\n      }).join(\"\");\n    });\n    const retDelta = new _Delta();\n    const diffResult = (0, import_fast_diff.default)(strings[0], strings[1], cursor, true);\n    const thisIter = new Iterator(this.ops);\n    const otherIter = new Iterator(other.ops);\n    diffResult.forEach((component) => {\n      let length = component[1].length;\n      while (length > 0) {\n        let opLength = 0;\n        switch (component[0]) {\n          case import_fast_diff.default.INSERT:\n            opLength = Math.min(otherIter.peekLength(), length);\n            retDelta.push(otherIter.next(opLength));\n            break;\n          case import_fast_diff.default.DELETE:\n            opLength = Math.min(length, thisIter.peekLength());\n            thisIter.next(opLength);\n            retDelta.delete(opLength);\n            break;\n          case import_fast_diff.default.EQUAL:\n            opLength = Math.min(thisIter.peekLength(), otherIter.peekLength(), length);\n            const thisOp = thisIter.next(opLength);\n            const otherOp = otherIter.next(opLength);\n            if (deepEqual_default(thisOp.insert, otherOp.insert)) {\n              retDelta.retain(opLength, AttributeMap_default.diff(thisOp.attributes, otherOp.attributes));\n            } else {\n              retDelta.push(otherOp).delete(opLength);\n            }\n            break;\n        }\n        length -= opLength;\n      }\n    });\n    return retDelta.chop();\n  }\n  eachLine(predicate, newline = \"\\n\") {\n    const iter = new Iterator(this.ops);\n    let line = new _Delta();\n    let i = 0;\n    while (iter.hasNext()) {\n      if (iter.peekType() !== \"insert\") {\n        return;\n      }\n      const thisOp = iter.peek();\n      const start = Op_default.length(thisOp) - iter.peekLength();\n      const index = typeof thisOp.insert === \"string\" ? thisOp.insert.indexOf(newline, start) - start : -1;\n      if (index < 0) {\n        line.push(iter.next());\n      } else if (index > 0) {\n        line.push(iter.next(index));\n      } else {\n        if (predicate(line, iter.next(1).attributes || {}, i) === false) {\n          return;\n        }\n        i += 1;\n        line = new _Delta();\n      }\n    }\n    if (line.length() > 0) {\n      predicate(line, {}, i);\n    }\n  }\n  invert(base) {\n    const inverted = new _Delta();\n    this.reduce((baseIndex, op) => {\n      if (op.insert) {\n        inverted.delete(Op_default.length(op));\n      } else if (typeof op.retain === \"number\" && op.attributes == null) {\n        inverted.retain(op.retain);\n        return baseIndex + op.retain;\n      } else if (op.delete || typeof op.retain === \"number\") {\n        const length = op.delete || op.retain;\n        const slice = base.slice(baseIndex, baseIndex + length);\n        slice.forEach((baseOp) => {\n          if (op.delete) {\n            inverted.push(baseOp);\n          } else if (op.retain && op.attributes) {\n            inverted.retain(Op_default.length(baseOp), AttributeMap_default.invert(op.attributes, baseOp.attributes));\n          }\n        });\n        return baseIndex + length;\n      } else if (typeof op.retain === \"object\" && op.retain !== null) {\n        const slice = base.slice(baseIndex, baseIndex + 1);\n        const baseOp = new Iterator(slice.ops).next();\n        const [embedType, opData, baseOpData] = getEmbedTypeAndData(op.retain, baseOp.insert);\n        const handler = _Delta.getHandler(embedType);\n        inverted.retain({ [embedType]: handler.invert(opData, baseOpData) }, AttributeMap_default.invert(op.attributes, baseOp.attributes));\n        return baseIndex + 1;\n      }\n      return baseIndex;\n    }, 0);\n    return inverted.chop();\n  }\n  transform(arg, priority = false) {\n    priority = !!priority;\n    if (typeof arg === \"number\") {\n      return this.transformPosition(arg, priority);\n    }\n    const other = arg;\n    const thisIter = new Iterator(this.ops);\n    const otherIter = new Iterator(other.ops);\n    const delta = new _Delta();\n    while (thisIter.hasNext() || otherIter.hasNext()) {\n      if (thisIter.peekType() === \"insert\" && (priority || otherIter.peekType() !== \"insert\")) {\n        delta.retain(Op_default.length(thisIter.next()));\n      } else if (otherIter.peekType() === \"insert\") {\n        delta.push(otherIter.next());\n      } else {\n        const length = Math.min(thisIter.peekLength(), otherIter.peekLength());\n        const thisOp = thisIter.next(length);\n        const otherOp = otherIter.next(length);\n        if (thisOp.delete) {\n          continue;\n        } else if (otherOp.delete) {\n          delta.push(otherOp);\n        } else {\n          const thisData = thisOp.retain;\n          const otherData = otherOp.retain;\n          let transformedData = typeof otherData === \"object\" && otherData !== null ? otherData : length;\n          if (typeof thisData === \"object\" && thisData !== null && typeof otherData === \"object\" && otherData !== null) {\n            const embedType = Object.keys(thisData)[0];\n            if (embedType === Object.keys(otherData)[0]) {\n              const handler = _Delta.getHandler(embedType);\n              if (handler) {\n                transformedData = {\n                  [embedType]: handler.transform(thisData[embedType], otherData[embedType], priority)\n                };\n              }\n            }\n          }\n          delta.retain(transformedData, AttributeMap_default.transform(thisOp.attributes, otherOp.attributes, priority));\n        }\n      }\n    }\n    return delta.chop();\n  }\n  transformPosition(index, priority = false) {\n    priority = !!priority;\n    const thisIter = new Iterator(this.ops);\n    let offset = 0;\n    while (thisIter.hasNext() && offset <= index) {\n      const length = thisIter.peekLength();\n      const nextType = thisIter.peekType();\n      thisIter.next();\n      if (nextType === \"delete\") {\n        index -= Math.min(length, index - offset);\n        continue;\n      } else if (nextType === \"insert\" && (offset < index || !priority)) {\n        index += length;\n      }\n      offset += length;\n    }\n    return index;\n  }\n};\nvar Delta_default = Delta;\nif (typeof module === \"object\") {\n  module.exports = Delta;\n  module.exports.default = Delta;\n}\nexport {\n  AttributeMap_default as AttributeMap,\n  Op_default as Op,\n  Iterator as OpIterator,\n  Delta_default as default\n};\n//# sourceMappingURL=index.mjs.map\n","enum Scope {\n  TYPE = (1 << 2) - 1, // 0011 Lower two bits\n  LEVEL = ((1 << 2) - 1) << 2, // 1100 Higher two bits\n\n  ATTRIBUTE = (1 << 0) | LEVEL, // 1101\n  BLOT = (1 << 1) | LEVEL, // 1110\n  INLINE = (1 << 2) | TYPE, // 0111\n  BLOCK = (1 << 3) | TYPE, // 1011\n\n  BLOCK_BLOT = BLOCK & BLOT, // 1010\n  INLINE_BLOT = INLINE & BLOT, // 0110\n  BLOCK_ATTRIBUTE = BLOCK & ATTRIBUTE, // 1001\n  INLINE_ATTRIBUTE = INLINE & ATTRIBUTE, // 0101\n\n  ANY = TYPE | LEVEL,\n}\n\nexport default Scope;\n","import Scope from '../scope.js';\n\nexport interface AttributorOptions {\n  scope?: Scope;\n  whitelist?: string[];\n}\n\nexport default class Attributor {\n  public static keys(node: HTMLElement): string[] {\n    return Array.from(node.attributes).map((item: Attr) => item.name);\n  }\n\n  public scope: Scope;\n  public whitelist: string[] | undefined;\n\n  constructor(\n    public readonly attrName: string,\n    public readonly keyName: string,\n    options: AttributorOptions = {},\n  ) {\n    const attributeBit = Scope.TYPE & Scope.ATTRIBUTE;\n    this.scope =\n      options.scope != null\n        ? // Ignore type bits, force attribute bit\n          (options.scope & Scope.LEVEL) | attributeBit\n        : Scope.ATTRIBUTE;\n    if (options.whitelist != null) {\n      this.whitelist = options.whitelist;\n    }\n  }\n\n  public add(node: HTMLElement, value: any): boolean {\n    if (!this.canAdd(node, value)) {\n      return false;\n    }\n    node.setAttribute(this.keyName, value);\n    return true;\n  }\n\n  public canAdd(_node: HTMLElement, value: any): boolean {\n    if (this.whitelist == null) {\n      return true;\n    }\n    if (typeof value === 'string') {\n      return this.whitelist.indexOf(value.replace(/[\"']/g, '')) > -1;\n    } else {\n      return this.whitelist.indexOf(value) > -1;\n    }\n  }\n\n  public remove(node: HTMLElement): void {\n    node.removeAttribute(this.keyName);\n  }\n\n  public value(node: HTMLElement): any {\n    const value = node.getAttribute(this.keyName);\n    if (this.canAdd(node, value) && value) {\n      return value;\n    }\n    return '';\n  }\n}\n","export default class ParchmentError extends Error {\n  public message: string;\n  public name: string;\n  public stack!: string;\n\n  constructor(message: string) {\n    message = '[Parchment] ' + message;\n    super(message);\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n}\n","import Attributor from './attributor/attributor.js';\nimport {\n  type Blot,\n  type BlotConstructor,\n  type Root,\n} from './blot/abstract/blot.js';\nimport ParchmentError from './error.js';\nimport Scope from './scope.js';\n\nexport type RegistryDefinition = Attributor | BlotConstructor;\n\nexport interface RegistryInterface {\n  create(scroll: Root, input: Node | string | Scope, value?: any): Blot;\n  query(query: string | Node | Scope, scope: Scope): RegistryDefinition | null;\n  register(...definitions: any[]): any;\n}\n\nexport default class Registry implements RegistryInterface {\n  public static blots = new WeakMap<Node, Blot>();\n\n  public static find(node?: Node | null, bubble = false): Blot | null {\n    if (node == null) {\n      return null;\n    }\n    if (this.blots.has(node)) {\n      return this.blots.get(node) || null;\n    }\n    if (bubble) {\n      let parentNode: Node | null = null;\n      try {\n        parentNode = node.parentNode;\n      } catch (err) {\n        // Probably hit a permission denied error.\n        // A known case is in Firefox, event targets can be anonymous DIVs\n        // inside an input element.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n        return null;\n      }\n      return this.find(parentNode, bubble);\n    }\n    return null;\n  }\n\n  private attributes: { [key: string]: Attributor } = {};\n  private classes: { [key: string]: BlotConstructor } = {};\n  private tags: { [key: string]: BlotConstructor } = {};\n  private types: { [key: string]: RegistryDefinition } = {};\n\n  public create(scroll: Root, input: Node | string | Scope, value?: any): Blot {\n    const match = this.query(input);\n    if (match == null) {\n      throw new ParchmentError(`Unable to create ${input} blot`);\n    }\n    const blotClass = match as BlotConstructor;\n    const node =\n      // @ts-expect-error Fix me later\n      input instanceof Node || input.nodeType === Node.TEXT_NODE\n        ? input\n        : blotClass.create(value);\n\n    const blot = new blotClass(scroll, node as Node, value);\n    Registry.blots.set(blot.domNode, blot);\n    return blot;\n  }\n\n  public find(node: Node | null, bubble = false): Blot | null {\n    return Registry.find(node, bubble);\n  }\n\n  public query(\n    query: string | Node | Scope,\n    scope: Scope = Scope.ANY,\n  ): RegistryDefinition | null {\n    let match;\n    if (typeof query === 'string') {\n      match = this.types[query] || this.attributes[query];\n      // @ts-expect-error Fix me later\n    } else if (query instanceof Text || query.nodeType === Node.TEXT_NODE) {\n      match = this.types.text;\n    } else if (typeof query === 'number') {\n      if (query & Scope.LEVEL & Scope.BLOCK) {\n        match = this.types.block;\n      } else if (query & Scope.LEVEL & Scope.INLINE) {\n        match = this.types.inline;\n      }\n    } else if (query instanceof Element) {\n      const names = (query.getAttribute('class') || '').split(/\\s+/);\n      names.some((name) => {\n        match = this.classes[name];\n        if (match) {\n          return true;\n        }\n        return false;\n      });\n      match = match || this.tags[query.tagName];\n    }\n    if (match == null) {\n      return null;\n    }\n    if (\n      'scope' in match &&\n      scope & Scope.LEVEL & match.scope &&\n      scope & Scope.TYPE & match.scope\n    ) {\n      return match;\n    }\n    return null;\n  }\n\n  public register(...definitions: RegistryDefinition[]): RegistryDefinition[] {\n    return definitions.map((definition) => {\n      const isBlot = 'blotName' in definition;\n      const isAttr = 'attrName' in definition;\n      if (!isBlot && !isAttr) {\n        throw new ParchmentError('Invalid definition');\n      } else if (isBlot && definition.blotName === 'abstract') {\n        throw new ParchmentError('Cannot register abstract class');\n      }\n      const key = isBlot\n        ? definition.blotName\n        : isAttr\n          ? definition.attrName\n          : (undefined as never); // already handled by above checks\n      this.types[key] = definition;\n\n      if (isAttr) {\n        if (typeof definition.keyName === 'string') {\n          this.attributes[definition.keyName] = definition;\n        }\n      } else if (isBlot) {\n        if (definition.className) {\n          this.classes[definition.className] = definition;\n        }\n        if (definition.tagName) {\n          if (Array.isArray(definition.tagName)) {\n            definition.tagName = definition.tagName.map((tagName: string) => {\n              return tagName.toUpperCase();\n            });\n          } else {\n            definition.tagName = definition.tagName.toUpperCase();\n          }\n          const tagNames = Array.isArray(definition.tagName)\n            ? definition.tagName\n            : [definition.tagName];\n          tagNames.forEach((tag: string) => {\n            if (this.tags[tag] == null || definition.className == null) {\n              this.tags[tag] = definition;\n            }\n          });\n        }\n      }\n      return definition;\n    });\n  }\n}\n","import Attributor from './attributor.js';\n\nfunction match(node: HTMLElement, prefix: string): string[] {\n  const className = node.getAttribute('class') || '';\n  return className\n    .split(/\\s+/)\n    .filter((name) => name.indexOf(`${prefix}-`) === 0);\n}\n\nclass ClassAttributor extends Attributor {\n  public static keys(node: HTMLElement): string[] {\n    return (node.getAttribute('class') || '')\n      .split(/\\s+/)\n      .map((name) => name.split('-').slice(0, -1).join('-'));\n  }\n\n  public add(node: HTMLElement, value: any): boolean {\n    if (!this.canAdd(node, value)) {\n      return false;\n    }\n    this.remove(node);\n    node.classList.add(`${this.keyName}-${value}`);\n    return true;\n  }\n\n  public remove(node: HTMLElement): void {\n    const matches = match(node, this.keyName);\n    matches.forEach((name) => {\n      node.classList.remove(name);\n    });\n    if (node.classList.length === 0) {\n      node.removeAttribute('class');\n    }\n  }\n\n  public value(node: HTMLElement): any {\n    const result = match(node, this.keyName)[0] || '';\n    const value = result.slice(this.keyName.length + 1); // +1 for hyphen\n    return this.canAdd(node, value) ? value : '';\n  }\n}\n\nexport default ClassAttributor;\n","import Attributor from './attributor.js';\n\nfunction camelize(name: string): string {\n  const parts = name.split('-');\n  const rest = parts\n    .slice(1)\n    .map((part: string) => part[0].toUpperCase() + part.slice(1))\n    .join('');\n  return parts[0] + rest;\n}\n\nclass StyleAttributor extends Attributor {\n  public static keys(node: HTMLElement): string[] {\n    return (node.getAttribute('style') || '').split(';').map((value) => {\n      const arr = value.split(':');\n      return arr[0].trim();\n    });\n  }\n\n  public add(node: HTMLElement, value: any): boolean {\n    if (!this.canAdd(node, value)) {\n      return false;\n    }\n    // @ts-expect-error Fix me later\n    node.style[camelize(this.keyName)] = value;\n    return true;\n  }\n\n  public remove(node: HTMLElement): void {\n    // @ts-expect-error Fix me later\n    node.style[camelize(this.keyName)] = '';\n    if (!node.getAttribute('style')) {\n      node.removeAttribute('style');\n    }\n  }\n\n  public value(node: HTMLElement): any {\n    // @ts-expect-error Fix me later\n    const value = node.style[camelize(this.keyName)];\n    return this.canAdd(node, value) ? value : '';\n  }\n}\n\nexport default StyleAttributor;\n","import type { Formattable } from '../blot/abstract/blot.js';\nimport Registry from '../registry.js';\nimport Scope from '../scope.js';\nimport Attributor from './attributor.js';\nimport ClassAttributor from './class.js';\nimport StyleAttributor from './style.js';\n\nclass AttributorStore {\n  private attributes: { [key: string]: Attributor } = {};\n  private domNode: HTMLElement;\n\n  constructor(domNode: HTMLElement) {\n    this.domNode = domNode;\n    this.build();\n  }\n\n  public attribute(attribute: Attributor, value: any): void {\n    // verb\n    if (value) {\n      if (attribute.add(this.domNode, value)) {\n        if (attribute.value(this.domNode) != null) {\n          this.attributes[attribute.attrName] = attribute;\n        } else {\n          delete this.attributes[attribute.attrName];\n        }\n      }\n    } else {\n      attribute.remove(this.domNode);\n      delete this.attributes[attribute.attrName];\n    }\n  }\n\n  public build(): void {\n    this.attributes = {};\n    const blot = Registry.find(this.domNode);\n    if (blot == null) {\n      return;\n    }\n    const attributes = Attributor.keys(this.domNode);\n    const classes = ClassAttributor.keys(this.domNode);\n    const styles = StyleAttributor.keys(this.domNode);\n    attributes\n      .concat(classes)\n      .concat(styles)\n      .forEach((name) => {\n        const attr = blot.scroll.query(name, Scope.ATTRIBUTE);\n        if (attr instanceof Attributor) {\n          this.attributes[attr.attrName] = attr;\n        }\n      });\n  }\n\n  public copy(target: Formattable): void {\n    Object.keys(this.attributes).forEach((key) => {\n      const value = this.attributes[key].value(this.domNode);\n      target.format(key, value);\n    });\n  }\n\n  public move(target: Formattable): void {\n    this.copy(target);\n    Object.keys(this.attributes).forEach((key) => {\n      this.attributes[key].remove(this.domNode);\n    });\n    this.attributes = {};\n  }\n\n  public values(): { [key: string]: any } {\n    return Object.keys(this.attributes).reduce(\n      (attributes: { [key: string]: any }, name: string) => {\n        attributes[name] = this.attributes[name].value(this.domNode);\n        return attributes;\n      },\n      {},\n    );\n  }\n}\n\nexport default AttributorStore;\n","import ParchmentError from '../../error.js';\nimport Registry from '../../registry.js';\nimport Scope from '../../scope.js';\nimport type {\n  Blot,\n  BlotConstructor,\n  Formattable,\n  Parent,\n  Root,\n} from './blot.js';\n\nclass ShadowBlot implements Blot {\n  public static blotName = 'abstract';\n  public static className: string;\n  public static requiredContainer: BlotConstructor;\n  public static scope: Scope;\n  public static tagName: string | string[];\n\n  public static create(rawValue?: unknown): Node {\n    if (this.tagName == null) {\n      throw new ParchmentError('Blot definition missing tagName');\n    }\n    let node: HTMLElement;\n    let value: string | number | undefined;\n    if (Array.isArray(this.tagName)) {\n      if (typeof rawValue === 'string') {\n        value = rawValue.toUpperCase();\n        if (parseInt(value, 10).toString() === value) {\n          value = parseInt(value, 10);\n        }\n      } else if (typeof rawValue === 'number') {\n        value = rawValue;\n      }\n      if (typeof value === 'number') {\n        node = document.createElement(this.tagName[value - 1]);\n      } else if (value && this.tagName.indexOf(value) > -1) {\n        node = document.createElement(value);\n      } else {\n        node = document.createElement(this.tagName[0]);\n      }\n    } else {\n      node = document.createElement(this.tagName);\n    }\n    if (this.className) {\n      node.classList.add(this.className);\n    }\n    return node;\n  }\n\n  public prev: Blot | null;\n  public next: Blot | null;\n  // @ts-expect-error Fix me later\n  public parent: Parent;\n\n  // Hack for accessing inherited static methods\n  get statics(): any {\n    return this.constructor;\n  }\n  constructor(\n    public scroll: Root,\n    public domNode: Node,\n  ) {\n    Registry.blots.set(domNode, this);\n    this.prev = null;\n    this.next = null;\n  }\n\n  public attach(): void {\n    // Nothing to do\n  }\n\n  public clone(): Blot {\n    const domNode = this.domNode.cloneNode(false);\n    return this.scroll.create(domNode);\n  }\n\n  public detach(): void {\n    if (this.parent != null) {\n      this.parent.removeChild(this);\n    }\n    Registry.blots.delete(this.domNode);\n  }\n\n  public deleteAt(index: number, length: number): void {\n    const blot = this.isolate(index, length);\n    blot.remove();\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    const blot = this.isolate(index, length);\n    if (this.scroll.query(name, Scope.BLOT) != null && value) {\n      blot.wrap(name, value);\n    } else if (this.scroll.query(name, Scope.ATTRIBUTE) != null) {\n      const parent = this.scroll.create(this.statics.scope) as Parent &\n        Formattable;\n      blot.wrap(parent);\n      parent.format(name, value);\n    }\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    const blot =\n      def == null\n        ? this.scroll.create('text', value)\n        : this.scroll.create(value, def);\n    const ref = this.split(index);\n    this.parent.insertBefore(blot, ref || undefined);\n  }\n\n  public isolate(index: number, length: number): Blot {\n    const target = this.split(index);\n    if (target == null) {\n      throw new Error('Attempt to isolate at end');\n    }\n    target.split(length);\n    return target;\n  }\n\n  public length(): number {\n    return 1;\n  }\n\n  public offset(root: Blot = this.parent): number {\n    if (this.parent == null || this === root) {\n      return 0;\n    }\n    return this.parent.children.offset(this) + this.parent.offset(root);\n  }\n\n  public optimize(_context?: { [key: string]: any }): void {\n    if (\n      this.statics.requiredContainer &&\n      !(this.parent instanceof this.statics.requiredContainer)\n    ) {\n      this.wrap(this.statics.requiredContainer.blotName);\n    }\n  }\n\n  public remove(): void {\n    if (this.domNode.parentNode != null) {\n      this.domNode.parentNode.removeChild(this.domNode);\n    }\n    this.detach();\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement =\n      typeof name === 'string' ? this.scroll.create(name, value) : name;\n    if (this.parent != null) {\n      this.parent.insertBefore(replacement, this.next || undefined);\n      this.remove();\n    }\n    return replacement;\n  }\n\n  public split(index: number, _force?: boolean): Blot | null {\n    return index === 0 ? this : this.next;\n  }\n\n  public update(\n    _mutations: MutationRecord[],\n    _context: { [key: string]: any },\n  ): void {\n    // Nothing to do by default\n  }\n\n  public wrap(name: string | Parent, value?: any): Parent {\n    const wrapper =\n      typeof name === 'string'\n        ? (this.scroll.create(name, value) as Parent)\n        : name;\n    if (this.parent != null) {\n      this.parent.insertBefore(wrapper, this.next || undefined);\n    }\n    if (typeof wrapper.appendChild !== 'function') {\n      throw new ParchmentError(`Cannot wrap ${name}`);\n    }\n    wrapper.appendChild(this);\n    return wrapper;\n  }\n}\n\nexport default ShadowBlot;\n","import Scope from '../../scope.js';\nimport type { Leaf } from './blot.js';\nimport ShadowBlot from './shadow.js';\n\nclass LeafBlot extends ShadowBlot implements Leaf {\n  public static scope = Scope.INLINE_BLOT;\n\n  /**\n   * Returns the value represented by domNode if it is this Blot's type\n   * No checking that domNode can represent this Blot type is required so\n   * applications needing it should check externally before calling.\n   */\n  public static value(_domNode: Node): any {\n    return true;\n  }\n\n  /**\n   * Given location represented by node and offset from DOM Selection Range,\n   * return index to that location.\n   */\n  public index(node: Node, offset: number): number {\n    if (\n      this.domNode === node ||\n      this.domNode.compareDocumentPosition(node) &\n        Node.DOCUMENT_POSITION_CONTAINED_BY\n    ) {\n      return Math.min(offset, 1);\n    }\n    return -1;\n  }\n\n  /**\n   * Given index to location within blot, return node and offset representing\n   * that location, consumable by DOM Selection Range\n   */\n  public position(index: number, _inclusive?: boolean): [Node, number] {\n    const childNodes: Node[] = Array.from(this.parent.domNode.childNodes);\n    let offset = childNodes.indexOf(this.domNode);\n    if (index > 0) {\n      offset += 1;\n    }\n    return [this.parent.domNode, offset];\n  }\n\n  /**\n   * Return value represented by this blot\n   * Should not change without interaction from API or\n   * user change detectable by update()\n   */\n  public value(): any {\n    return {\n      [this.statics.blotName]: this.statics.value(this.domNode) || true,\n    };\n  }\n}\n\nexport default LeafBlot;\n","import type LinkedNode from './linked-node.js';\n\nclass LinkedList<T extends LinkedNode> {\n  public head: T | null;\n  public tail: T | null;\n  public length: number;\n\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  public append(...nodes: T[]): void {\n    this.insertBefore(nodes[0], null);\n    if (nodes.length > 1) {\n      const rest = nodes.slice(1);\n      this.append(...rest);\n    }\n  }\n\n  public at(index: number): T | null {\n    const next = this.iterator();\n    let cur = next();\n    while (cur && index > 0) {\n      index -= 1;\n      cur = next();\n    }\n    return cur;\n  }\n\n  public contains(node: T): boolean {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      if (cur === node) {\n        return true;\n      }\n      cur = next();\n    }\n    return false;\n  }\n\n  public indexOf(node: T): number {\n    const next = this.iterator();\n    let cur = next();\n    let index = 0;\n    while (cur) {\n      if (cur === node) {\n        return index;\n      }\n      index += 1;\n      cur = next();\n    }\n    return -1;\n  }\n\n  public insertBefore(node: T | null, refNode: T | null): void {\n    if (node == null) {\n      return;\n    }\n    this.remove(node);\n    node.next = refNode;\n    if (refNode != null) {\n      node.prev = refNode.prev;\n      if (refNode.prev != null) {\n        refNode.prev.next = node;\n      }\n      refNode.prev = node;\n      if (refNode === this.head) {\n        this.head = node;\n      }\n    } else if (this.tail != null) {\n      this.tail.next = node;\n      node.prev = this.tail;\n      this.tail = node;\n    } else {\n      node.prev = null;\n      this.head = this.tail = node;\n    }\n    this.length += 1;\n  }\n\n  public offset(target: T): number {\n    let index = 0;\n    let cur = this.head;\n    while (cur != null) {\n      if (cur === target) {\n        return index;\n      }\n      index += cur.length();\n      cur = cur.next as T;\n    }\n    return -1;\n  }\n\n  public remove(node: T): void {\n    if (!this.contains(node)) {\n      return;\n    }\n    if (node.prev != null) {\n      node.prev.next = node.next;\n    }\n    if (node.next != null) {\n      node.next.prev = node.prev;\n    }\n    if (node === this.head) {\n      this.head = node.next as T;\n    }\n    if (node === this.tail) {\n      this.tail = node.prev as T;\n    }\n    this.length -= 1;\n  }\n\n  public iterator(curNode: T | null = this.head): () => T | null {\n    // TODO use yield when we can\n    return (): T | null => {\n      const ret = curNode;\n      if (curNode != null) {\n        curNode = curNode.next as T;\n      }\n      return ret;\n    };\n  }\n\n  public find(index: number, inclusive = false): [T | null, number] {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      const length = cur.length();\n      if (\n        index < length ||\n        (inclusive &&\n          index === length &&\n          (cur.next == null || cur.next.length() !== 0))\n      ) {\n        return [cur, index];\n      }\n      index -= length;\n      cur = next();\n    }\n    return [null, 0];\n  }\n\n  public forEach(callback: (cur: T) => void): void {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      callback(cur);\n      cur = next();\n    }\n  }\n\n  public forEachAt(\n    index: number,\n    length: number,\n    callback: (cur: T, offset: number, length: number) => void,\n  ): void {\n    if (length <= 0) {\n      return;\n    }\n    const [startNode, offset] = this.find(index);\n    let curIndex = index - offset;\n    const next = this.iterator(startNode);\n    let cur = next();\n    while (cur && curIndex < index + length) {\n      const curLength = cur.length();\n      if (index > curIndex) {\n        callback(\n          cur,\n          index - curIndex,\n          Math.min(length, curIndex + curLength - index),\n        );\n      } else {\n        callback(cur, 0, Math.min(curLength, index + length - curIndex));\n      }\n      curIndex += curLength;\n      cur = next();\n    }\n  }\n\n  public map(callback: (cur: T) => any): any[] {\n    return this.reduce((memo: T[], cur: T) => {\n      memo.push(callback(cur));\n      return memo;\n    }, []);\n  }\n\n  public reduce<M>(callback: (memo: M, cur: T) => M, memo: M): M {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      memo = callback(memo, cur);\n      cur = next();\n    }\n    return memo;\n  }\n}\n\nexport default LinkedList;\n","import LinkedList from '../../collection/linked-list.js';\nimport ParchmentError from '../../error.js';\nimport Scope from '../../scope.js';\nimport type { Blot, BlotConstructor, Parent, Root } from './blot.js';\nimport ShadowBlot from './shadow.js';\n\nfunction makeAttachedBlot(node: Node, scroll: Root): Blot {\n  const found = scroll.find(node);\n  if (found) return found;\n  try {\n    return scroll.create(node);\n  } catch (e) {\n    const blot = scroll.create(Scope.INLINE);\n    Array.from(node.childNodes).forEach((child: Node) => {\n      blot.domNode.appendChild(child);\n    });\n    if (node.parentNode) {\n      node.parentNode.replaceChild(blot.domNode, node);\n    }\n    blot.attach();\n    return blot;\n  }\n}\n\nclass ParentBlot extends ShadowBlot implements Parent {\n  /**\n   * Whitelist array of Blots that can be direct children.\n   */\n  public static allowedChildren?: BlotConstructor[];\n\n  /**\n   * Default child blot to be inserted if this blot becomes empty.\n   */\n  public static defaultChild?: BlotConstructor;\n  public static uiClass = '';\n\n  public children!: LinkedList<Blot>;\n  public domNode!: HTMLElement;\n  public uiNode: HTMLElement | null = null;\n\n  constructor(scroll: Root, domNode: Node) {\n    super(scroll, domNode);\n    this.build();\n  }\n\n  public appendChild(other: Blot): void {\n    this.insertBefore(other);\n  }\n\n  public attach(): void {\n    super.attach();\n    this.children.forEach((child) => {\n      child.attach();\n    });\n  }\n\n  public attachUI(node: HTMLElement): void {\n    if (this.uiNode != null) {\n      this.uiNode.remove();\n    }\n    this.uiNode = node;\n    if (ParentBlot.uiClass) {\n      this.uiNode.classList.add(ParentBlot.uiClass);\n    }\n    this.uiNode.setAttribute('contenteditable', 'false');\n    this.domNode.insertBefore(this.uiNode, this.domNode.firstChild);\n  }\n\n  /**\n   * Called during construction, should fill its own children LinkedList.\n   */\n  public build(): void {\n    this.children = new LinkedList<Blot>();\n    // Need to be reversed for if DOM nodes already in order\n    Array.from(this.domNode.childNodes)\n      .filter((node: Node) => node !== this.uiNode)\n      .reverse()\n      .forEach((node: Node) => {\n        try {\n          const child = makeAttachedBlot(node, this.scroll);\n          this.insertBefore(child, this.children.head || undefined);\n        } catch (err) {\n          if (err instanceof ParchmentError) {\n            return;\n          } else {\n            throw err;\n          }\n        }\n      });\n  }\n\n  public deleteAt(index: number, length: number): void {\n    if (index === 0 && length === this.length()) {\n      return this.remove();\n    }\n    this.children.forEachAt(index, length, (child, offset, childLength) => {\n      child.deleteAt(offset, childLength);\n    });\n  }\n\n  public descendant<T extends Blot>(\n    criteria: new (...args: any[]) => T,\n    index: number,\n  ): [T | null, number];\n  public descendant(\n    criteria: (blot: Blot) => boolean,\n    index: number,\n  ): [Blot | null, number];\n  public descendant(criteria: any, index = 0): [Blot | null, number] {\n    const [child, offset] = this.children.find(index);\n    if (\n      (criteria.blotName == null && criteria(child)) ||\n      (criteria.blotName != null && child instanceof criteria)\n    ) {\n      return [child as any, offset];\n    } else if (child instanceof ParentBlot) {\n      return child.descendant(criteria, offset);\n    } else {\n      return [null, -1];\n    }\n  }\n\n  public descendants<T extends Blot>(\n    criteria: new (...args: any[]) => T,\n    index?: number,\n    length?: number,\n  ): T[];\n  public descendants(\n    criteria: (blot: Blot) => boolean,\n    index?: number,\n    length?: number,\n  ): Blot[];\n  public descendants(\n    criteria: any,\n    index = 0,\n    length: number = Number.MAX_VALUE,\n  ): Blot[] {\n    let descendants: Blot[] = [];\n    let lengthLeft = length;\n    this.children.forEachAt(\n      index,\n      length,\n      (child: Blot, childIndex: number, childLength: number) => {\n        if (\n          (criteria.blotName == null && criteria(child)) ||\n          (criteria.blotName != null && child instanceof criteria)\n        ) {\n          descendants.push(child);\n        }\n        if (child instanceof ParentBlot) {\n          descendants = descendants.concat(\n            child.descendants(criteria, childIndex, lengthLeft),\n          );\n        }\n        lengthLeft -= childLength;\n      },\n    );\n    return descendants;\n  }\n\n  public detach(): void {\n    this.children.forEach((child) => {\n      child.detach();\n    });\n    super.detach();\n  }\n\n  public enforceAllowedChildren(): void {\n    let done = false;\n    this.children.forEach((child: Blot) => {\n      if (done) {\n        return;\n      }\n      const allowed = this.statics.allowedChildren.some(\n        (def: BlotConstructor) => child instanceof def,\n      );\n      if (allowed) {\n        return;\n      }\n      if (child.statics.scope === Scope.BLOCK_BLOT) {\n        if (child.next != null) {\n          this.splitAfter(child);\n        }\n        if (child.prev != null) {\n          this.splitAfter(child.prev);\n        }\n        child.parent.unwrap();\n        done = true;\n      } else if (child instanceof ParentBlot) {\n        child.unwrap();\n      } else {\n        child.remove();\n      }\n    });\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    this.children.forEachAt(index, length, (child, offset, childLength) => {\n      child.formatAt(offset, childLength, name, value);\n    });\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    const [child, offset] = this.children.find(index);\n    if (child) {\n      child.insertAt(offset, value, def);\n    } else {\n      const blot =\n        def == null\n          ? this.scroll.create('text', value)\n          : this.scroll.create(value, def);\n      this.appendChild(blot);\n    }\n  }\n\n  public insertBefore(childBlot: Blot, refBlot?: Blot | null): void {\n    if (childBlot.parent != null) {\n      childBlot.parent.children.remove(childBlot);\n    }\n    let refDomNode: Node | null = null;\n    this.children.insertBefore(childBlot, refBlot || null);\n    childBlot.parent = this;\n    if (refBlot != null) {\n      refDomNode = refBlot.domNode;\n    }\n    if (\n      this.domNode.parentNode !== childBlot.domNode ||\n      this.domNode.nextSibling !== refDomNode\n    ) {\n      this.domNode.insertBefore(childBlot.domNode, refDomNode);\n    }\n    childBlot.attach();\n  }\n\n  public length(): number {\n    return this.children.reduce((memo, child) => {\n      return memo + child.length();\n    }, 0);\n  }\n\n  public moveChildren(targetParent: Parent, refNode?: Blot | null): void {\n    this.children.forEach((child) => {\n      targetParent.insertBefore(child, refNode);\n    });\n  }\n\n  public optimize(context?: { [key: string]: any }): void {\n    super.optimize(context);\n    this.enforceAllowedChildren();\n    if (this.uiNode != null && this.uiNode !== this.domNode.firstChild) {\n      this.domNode.insertBefore(this.uiNode, this.domNode.firstChild);\n    }\n    if (this.children.length === 0) {\n      if (this.statics.defaultChild != null) {\n        const child = this.scroll.create(this.statics.defaultChild.blotName);\n        this.appendChild(child);\n        // TODO double check if necessary\n        // child.optimize(context);\n      } else {\n        this.remove();\n      }\n    }\n  }\n\n  public path(index: number, inclusive = false): [Blot, number][] {\n    const [child, offset] = this.children.find(index, inclusive);\n    const position: [Blot, number][] = [[this, index]];\n    if (child instanceof ParentBlot) {\n      return position.concat(child.path(offset, inclusive));\n    } else if (child != null) {\n      position.push([child, offset]);\n    }\n    return position;\n  }\n\n  public removeChild(child: Blot): void {\n    this.children.remove(child);\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement =\n      typeof name === 'string' ? this.scroll.create(name, value) : name;\n    if (replacement instanceof ParentBlot) {\n      this.moveChildren(replacement);\n    }\n    return super.replaceWith(replacement);\n  }\n\n  public split(index: number, force = false): Blot | null {\n    if (!force) {\n      if (index === 0) {\n        return this;\n      }\n      if (index === this.length()) {\n        return this.next;\n      }\n    }\n    const after = this.clone() as ParentBlot;\n    if (this.parent) {\n      this.parent.insertBefore(after, this.next || undefined);\n    }\n    this.children.forEachAt(index, this.length(), (child, offset, _length) => {\n      const split = child.split(offset, force);\n      if (split != null) {\n        after.appendChild(split);\n      }\n    });\n    return after;\n  }\n\n  public splitAfter(child: Blot): Parent {\n    const after = this.clone() as ParentBlot;\n    while (child.next != null) {\n      after.appendChild(child.next);\n    }\n    if (this.parent) {\n      this.parent.insertBefore(after, this.next || undefined);\n    }\n    return after;\n  }\n\n  public unwrap(): void {\n    if (this.parent) {\n      this.moveChildren(this.parent, this.next || undefined);\n    }\n    this.remove();\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    _context: { [key: string]: any },\n  ): void {\n    const addedNodes: Node[] = [];\n    const removedNodes: Node[] = [];\n    mutations.forEach((mutation) => {\n      if (mutation.target === this.domNode && mutation.type === 'childList') {\n        addedNodes.push(...mutation.addedNodes);\n        removedNodes.push(...mutation.removedNodes);\n      }\n    });\n    removedNodes.forEach((node: Node) => {\n      // Check node has actually been removed\n      // One exception is Chrome does not immediately remove IFRAMEs\n      // from DOM but MutationRecord is correct in its reported removal\n      if (\n        node.parentNode != null &&\n        // @ts-expect-error Fix me later\n        node.tagName !== 'IFRAME' &&\n        document.body.compareDocumentPosition(node) &\n          Node.DOCUMENT_POSITION_CONTAINED_BY\n      ) {\n        return;\n      }\n      const blot = this.scroll.find(node);\n      if (blot == null) {\n        return;\n      }\n      if (\n        blot.domNode.parentNode == null ||\n        blot.domNode.parentNode === this.domNode\n      ) {\n        blot.detach();\n      }\n    });\n    addedNodes\n      .filter((node) => {\n        return node.parentNode === this.domNode && node !== this.uiNode;\n      })\n      .sort((a, b) => {\n        if (a === b) {\n          return 0;\n        }\n        if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_FOLLOWING) {\n          return 1;\n        }\n        return -1;\n      })\n      .forEach((node) => {\n        let refBlot: Blot | null = null;\n        if (node.nextSibling != null) {\n          refBlot = this.scroll.find(node.nextSibling);\n        }\n        const blot = makeAttachedBlot(node, this.scroll);\n        if (blot.next !== refBlot || blot.next == null) {\n          if (blot.parent != null) {\n            blot.parent.removeChild(this);\n          }\n          this.insertBefore(blot, refBlot || undefined);\n        }\n      });\n    this.enforceAllowedChildren();\n  }\n}\n\nexport default ParentBlot;\n","import Attributor from '../attributor/attributor.js';\nimport AttributorStore from '../attributor/store.js';\nimport Scope from '../scope.js';\nimport type {\n  Blot,\n  BlotConstructor,\n  Formattable,\n  Parent,\n  Root,\n} from './abstract/blot.js';\nimport LeafBlot from './abstract/leaf.js';\nimport ParentBlot from './abstract/parent.js';\n\n// Shallow object comparison\nfunction isEqual(\n  obj1: Record<string, unknown>,\n  obj2: Record<string, unknown>,\n): boolean {\n  if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  for (const prop in obj1) {\n    if (obj1[prop] !== obj2[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nclass InlineBlot extends ParentBlot implements Formattable {\n  public static allowedChildren: BlotConstructor[] = [InlineBlot, LeafBlot];\n  public static blotName = 'inline';\n  public static scope = Scope.INLINE_BLOT;\n  public static tagName: string | string[] = 'SPAN';\n\n  static create(value?: unknown) {\n    return super.create(value) as HTMLElement;\n  }\n\n  public static formats(domNode: HTMLElement, scroll: Root): any {\n    const match = scroll.query(InlineBlot.blotName);\n    if (\n      match != null &&\n      domNode.tagName === (match as BlotConstructor).tagName\n    ) {\n      return undefined;\n    } else if (typeof this.tagName === 'string') {\n      return true;\n    } else if (Array.isArray(this.tagName)) {\n      return domNode.tagName.toLowerCase();\n    }\n    return undefined;\n  }\n\n  protected attributes: AttributorStore;\n\n  constructor(scroll: Root, domNode: Node) {\n    super(scroll, domNode);\n    this.attributes = new AttributorStore(this.domNode);\n  }\n\n  public format(name: string, value: any): void {\n    if (name === this.statics.blotName && !value) {\n      this.children.forEach((child) => {\n        if (!(child instanceof InlineBlot)) {\n          child = child.wrap(InlineBlot.blotName, true);\n        }\n        this.attributes.copy(child as InlineBlot);\n      });\n      this.unwrap();\n    } else {\n      const format = this.scroll.query(name, Scope.INLINE);\n      if (format == null) {\n        return;\n      }\n      if (format instanceof Attributor) {\n        this.attributes.attribute(format, value);\n      } else if (\n        value &&\n        (name !== this.statics.blotName || this.formats()[name] !== value)\n      ) {\n        this.replaceWith(name, value);\n      }\n    }\n  }\n\n  public formats(): { [index: string]: any } {\n    const formats = this.attributes.values();\n    const format = this.statics.formats(this.domNode, this.scroll);\n    if (format != null) {\n      formats[this.statics.blotName] = format;\n    }\n    return formats;\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    if (\n      this.formats()[name] != null ||\n      this.scroll.query(name, Scope.ATTRIBUTE)\n    ) {\n      const blot = this.isolate(index, length) as InlineBlot;\n      blot.format(name, value);\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  public optimize(context: { [key: string]: any }): void {\n    super.optimize(context);\n    const formats = this.formats();\n    if (Object.keys(formats).length === 0) {\n      return this.unwrap(); // unformatted span\n    }\n    const next = this.next;\n    if (\n      next instanceof InlineBlot &&\n      next.prev === this &&\n      isEqual(formats, next.formats())\n    ) {\n      next.moveChildren(this);\n      next.remove();\n    }\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement = super.replaceWith(name, value) as InlineBlot;\n    this.attributes.copy(replacement);\n    return replacement;\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    context: { [key: string]: any },\n  ): void {\n    super.update(mutations, context);\n    const attributeChanged = mutations.some(\n      (mutation) =>\n        mutation.target === this.domNode && mutation.type === 'attributes',\n    );\n    if (attributeChanged) {\n      this.attributes.build();\n    }\n  }\n\n  public wrap(name: string | Parent, value?: any): Parent {\n    const wrapper = super.wrap(name, value);\n    if (wrapper instanceof InlineBlot) {\n      this.attributes.move(wrapper);\n    }\n    return wrapper;\n  }\n}\n\nexport default InlineBlot;\n","import Attributor from '../attributor/attributor.js';\nimport AttributorStore from '../attributor/store.js';\nimport Scope from '../scope.js';\nimport type {\n  Blot,\n  BlotConstructor,\n  Formattable,\n  Root,\n} from './abstract/blot.js';\nimport LeafBlot from './abstract/leaf.js';\nimport ParentBlot from './abstract/parent.js';\nimport InlineBlot from './inline.js';\n\nclass BlockBlot extends ParentBlot implements Formattable {\n  public static blotName = 'block';\n  public static scope = Scope.BLOCK_BLOT;\n  public static tagName: string | string[] = 'P';\n  public static allowedChildren: BlotConstructor[] = [\n    InlineBlot,\n    BlockBlot,\n    LeafBlot,\n  ];\n\n  static create(value?: unknown) {\n    return super.create(value) as HTMLElement;\n  }\n\n  public static formats(domNode: HTMLElement, scroll: Root): any {\n    const match = scroll.query(BlockBlot.blotName);\n    if (\n      match != null &&\n      domNode.tagName === (match as BlotConstructor).tagName\n    ) {\n      return undefined;\n    } else if (typeof this.tagName === 'string') {\n      return true;\n    } else if (Array.isArray(this.tagName)) {\n      return domNode.tagName.toLowerCase();\n    }\n  }\n\n  protected attributes: AttributorStore;\n\n  constructor(scroll: Root, domNode: Node) {\n    super(scroll, domNode);\n    this.attributes = new AttributorStore(this.domNode);\n  }\n\n  public format(name: string, value: any): void {\n    const format = this.scroll.query(name, Scope.BLOCK);\n    if (format == null) {\n      return;\n    } else if (format instanceof Attributor) {\n      this.attributes.attribute(format, value);\n    } else if (name === this.statics.blotName && !value) {\n      this.replaceWith(BlockBlot.blotName);\n    } else if (\n      value &&\n      (name !== this.statics.blotName || this.formats()[name] !== value)\n    ) {\n      this.replaceWith(name, value);\n    }\n  }\n\n  public formats(): { [index: string]: any } {\n    const formats = this.attributes.values();\n    const format = this.statics.formats(this.domNode, this.scroll);\n    if (format != null) {\n      formats[this.statics.blotName] = format;\n    }\n    return formats;\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    if (this.scroll.query(name, Scope.BLOCK) != null) {\n      this.format(name, value);\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    if (def == null || this.scroll.query(value, Scope.INLINE) != null) {\n      // Insert text or inline\n      super.insertAt(index, value, def);\n    } else {\n      const after = this.split(index);\n      if (after != null) {\n        const blot = this.scroll.create(value, def);\n        after.parent.insertBefore(blot, after);\n      } else {\n        throw new Error('Attempt to insertAt after block boundaries');\n      }\n    }\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement = super.replaceWith(name, value) as BlockBlot;\n    this.attributes.copy(replacement);\n    return replacement;\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    context: { [key: string]: any },\n  ): void {\n    super.update(mutations, context);\n    const attributeChanged = mutations.some(\n      (mutation) =>\n        mutation.target === this.domNode && mutation.type === 'attributes',\n    );\n    if (attributeChanged) {\n      this.attributes.build();\n    }\n  }\n}\n\nexport default BlockBlot;\n","import Scope from '../../scope.js';\nimport BlockBlot from '../block.js';\nimport ParentBlot from './parent.js';\n\nclass ContainerBlot extends ParentBlot {\n  public static blotName = 'container';\n  public static scope = Scope.BLOCK_BLOT;\n  public static tagName: string | string[];\n\n  public prev!: BlockBlot | ContainerBlot | null;\n  public next!: BlockBlot | ContainerBlot | null;\n\n  public checkMerge(): boolean {\n    return (\n      this.next !== null && this.next.statics.blotName === this.statics.blotName\n    );\n  }\n\n  public deleteAt(index: number, length: number): void {\n    super.deleteAt(index, length);\n    this.enforceAllowedChildren();\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    super.formatAt(index, length, name, value);\n    this.enforceAllowedChildren();\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    super.insertAt(index, value, def);\n    this.enforceAllowedChildren();\n  }\n\n  public optimize(context: { [key: string]: any }): void {\n    super.optimize(context);\n    if (this.children.length > 0 && this.next != null && this.checkMerge()) {\n      this.next.moveChildren(this);\n      this.next.remove();\n    }\n  }\n}\n\nexport default ContainerBlot;\n","import type { Formattable, Root } from './abstract/blot.js';\nimport LeafBlot from './abstract/leaf.js';\n\nclass EmbedBlot extends LeafBlot implements Formattable {\n  public static formats(_domNode: HTMLElement, _scroll: Root): any {\n    return undefined;\n  }\n\n  public format(name: string, value: any): void {\n    // super.formatAt wraps, which is what we want in general,\n    // but this allows subclasses to overwrite for formats\n    // that just apply to particular embeds\n    super.formatAt(0, this.length(), name, value);\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    if (index === 0 && length === this.length()) {\n      this.format(name, value);\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  public formats(): { [index: string]: any } {\n    return this.statics.formats(this.domNode, this.scroll);\n  }\n}\n\nexport default EmbedBlot;\n","import Registry, { type RegistryDefinition } from '../registry.js';\nimport Scope from '../scope.js';\nimport type { Blot, BlotConstructor, Root } from './abstract/blot.js';\nimport ContainerBlot from './abstract/container.js';\nimport ParentBlot from './abstract/parent.js';\nimport BlockBlot from './block.js';\n\nconst OBSERVER_CONFIG = {\n  attributes: true,\n  characterData: true,\n  characterDataOldValue: true,\n  childList: true,\n  subtree: true,\n};\n\nconst MAX_OPTIMIZE_ITERATIONS = 100;\n\nclass ScrollBlot extends ParentBlot implements Root {\n  public static blotName = 'scroll';\n  public static defaultChild = BlockBlot;\n  public static allowedChildren: BlotConstructor[] = [BlockBlot, ContainerBlot];\n  public static scope = Scope.BLOCK_BLOT;\n  public static tagName = 'DIV';\n\n  public observer: MutationObserver;\n\n  constructor(\n    public registry: Registry,\n    node: HTMLDivElement,\n  ) {\n    // @ts-expect-error scroll is the root with no parent\n    super(null, node);\n    this.scroll = this;\n    this.build();\n    this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n      this.update(mutations);\n    });\n    this.observer.observe(this.domNode, OBSERVER_CONFIG);\n    this.attach();\n  }\n\n  public create(input: Node | string | Scope, value?: any): Blot {\n    return this.registry.create(this, input, value);\n  }\n\n  public find(node: Node | null, bubble = false): Blot | null {\n    const blot = this.registry.find(node, bubble);\n    if (!blot) {\n      return null;\n    }\n    if (blot.scroll === this) {\n      return blot;\n    }\n    return bubble ? this.find(blot.scroll.domNode.parentNode, true) : null;\n  }\n\n  public query(\n    query: string | Node | Scope,\n    scope: Scope = Scope.ANY,\n  ): RegistryDefinition | null {\n    return this.registry.query(query, scope);\n  }\n\n  public register(...definitions: RegistryDefinition[]) {\n    return this.registry.register(...definitions);\n  }\n\n  public build(): void {\n    if (this.scroll == null) {\n      return;\n    }\n    super.build();\n  }\n\n  public detach(): void {\n    super.detach();\n    this.observer.disconnect();\n  }\n\n  public deleteAt(index: number, length: number): void {\n    this.update();\n    if (index === 0 && length === this.length()) {\n      this.children.forEach((child) => {\n        child.remove();\n      });\n    } else {\n      super.deleteAt(index, length);\n    }\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    this.update();\n    super.formatAt(index, length, name, value);\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    this.update();\n    super.insertAt(index, value, def);\n  }\n\n  public optimize(context?: { [key: string]: any }): void;\n  public optimize(\n    mutations: MutationRecord[],\n    context: { [key: string]: any },\n  ): void;\n  public optimize(mutations: any = [], context: any = {}): void {\n    super.optimize(context);\n    const mutationsMap = context.mutationsMap || new WeakMap();\n    // We must modify mutations directly, cannot make copy and then modify\n    let records = Array.from(this.observer.takeRecords());\n    // Array.push currently seems to be implemented by a non-tail recursive function\n    // so we cannot just mutations.push.apply(mutations, this.observer.takeRecords());\n    while (records.length > 0) {\n      mutations.push(records.pop());\n    }\n    const mark = (blot: Blot | null, markParent = true): void => {\n      if (blot == null || blot === this) {\n        return;\n      }\n      if (blot.domNode.parentNode == null) {\n        return;\n      }\n      if (!mutationsMap.has(blot.domNode)) {\n        mutationsMap.set(blot.domNode, []);\n      }\n      if (markParent) {\n        mark(blot.parent);\n      }\n    };\n    const optimize = (blot: Blot): void => {\n      // Post-order traversal\n      if (!mutationsMap.has(blot.domNode)) {\n        return;\n      }\n      if (blot instanceof ParentBlot) {\n        blot.children.forEach(optimize);\n      }\n      mutationsMap.delete(blot.domNode);\n      blot.optimize(context);\n    };\n    let remaining = mutations;\n    for (let i = 0; remaining.length > 0; i += 1) {\n      if (i >= MAX_OPTIMIZE_ITERATIONS) {\n        throw new Error('[Parchment] Maximum optimize iterations reached');\n      }\n      remaining.forEach((mutation: MutationRecord) => {\n        const blot = this.find(mutation.target, true);\n        if (blot == null) {\n          return;\n        }\n        if (blot.domNode === mutation.target) {\n          if (mutation.type === 'childList') {\n            mark(this.find(mutation.previousSibling, false));\n            Array.from(mutation.addedNodes).forEach((node: Node) => {\n              const child = this.find(node, false);\n              mark(child, false);\n              if (child instanceof ParentBlot) {\n                child.children.forEach((grandChild: Blot) => {\n                  mark(grandChild, false);\n                });\n              }\n            });\n          } else if (mutation.type === 'attributes') {\n            mark(blot.prev);\n          }\n        }\n        mark(blot);\n      });\n      this.children.forEach(optimize);\n      remaining = Array.from(this.observer.takeRecords());\n      records = remaining.slice();\n      while (records.length > 0) {\n        mutations.push(records.pop());\n      }\n    }\n  }\n\n  public update(\n    mutations?: MutationRecord[],\n    context: { [key: string]: any } = {},\n  ): void {\n    mutations = mutations || this.observer.takeRecords();\n    const mutationsMap = new WeakMap();\n    mutations\n      .map((mutation: MutationRecord) => {\n        const blot = this.find(mutation.target, true);\n        if (blot == null) {\n          return null;\n        }\n        if (mutationsMap.has(blot.domNode)) {\n          mutationsMap.get(blot.domNode).push(mutation);\n          return null;\n        } else {\n          mutationsMap.set(blot.domNode, [mutation]);\n          return blot;\n        }\n      })\n      .forEach((blot: Blot | null) => {\n        if (blot != null && blot !== this && mutationsMap.has(blot.domNode)) {\n          blot.update(mutationsMap.get(blot.domNode) || [], context);\n        }\n      });\n    context.mutationsMap = mutationsMap;\n    if (mutationsMap.has(this.domNode)) {\n      super.update(mutationsMap.get(this.domNode), context);\n    }\n    this.optimize(mutations, context);\n  }\n}\n\nexport default ScrollBlot;\n","import Scope from '../scope.js';\nimport type { Blot, Leaf, Root } from './abstract/blot.js';\nimport LeafBlot from './abstract/leaf.js';\n\nclass TextBlot extends LeafBlot implements Leaf {\n  public static readonly blotName = 'text';\n  public static scope = Scope.INLINE_BLOT;\n\n  public static create(value: string): Text {\n    return document.createTextNode(value);\n  }\n\n  public static value(domNode: Text): string {\n    return domNode.data;\n  }\n\n  public domNode!: Text;\n  protected text: string;\n\n  constructor(scroll: Root, node: Node) {\n    super(scroll, node);\n    this.text = this.statics.value(this.domNode);\n  }\n\n  public deleteAt(index: number, length: number): void {\n    this.domNode.data = this.text =\n      this.text.slice(0, index) + this.text.slice(index + length);\n  }\n\n  public index(node: Node, offset: number): number {\n    if (this.domNode === node) {\n      return offset;\n    }\n    return -1;\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    if (def == null) {\n      this.text = this.text.slice(0, index) + value + this.text.slice(index);\n      this.domNode.data = this.text;\n    } else {\n      super.insertAt(index, value, def);\n    }\n  }\n\n  public length(): number {\n    return this.text.length;\n  }\n\n  public optimize(context: { [key: string]: any }): void {\n    super.optimize(context);\n    this.text = this.statics.value(this.domNode);\n    if (this.text.length === 0) {\n      this.remove();\n    } else if (this.next instanceof TextBlot && this.next.prev === this) {\n      this.insertAt(this.length(), (this.next as TextBlot).value());\n      this.next.remove();\n    }\n  }\n\n  public position(index: number, _inclusive = false): [Node, number] {\n    return [this.domNode, index];\n  }\n\n  public split(index: number, force = false): Blot | null {\n    if (!force) {\n      if (index === 0) {\n        return this;\n      }\n      if (index === this.length()) {\n        return this.next;\n      }\n    }\n    const after = this.scroll.create(this.domNode.splitText(index));\n    this.parent.insertBefore(after, this.next || undefined);\n    this.text = this.statics.value(this.domNode);\n    return after;\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    _context: { [key: string]: any },\n  ): void {\n    if (\n      mutations.some((mutation) => {\n        return (\n          mutation.type === 'characterData' && mutation.target === this.domNode\n        );\n      })\n    ) {\n      this.text = this.statics.value(this.domNode);\n    }\n  }\n\n  public value(): string {\n    return this.text;\n  }\n}\n\nexport default TextBlot;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { ClassAttributor, Scope } from 'parchment';\n\nclass IndentAttributor extends ClassAttributor {\n  add(node: HTMLElement, value: string | number) {\n    let normalizedValue = 0;\n    if (value === '+1' || value === '-1') {\n      const indent = this.value(node) || 0;\n      normalizedValue = value === '+1' ? indent + 1 : indent - 1;\n    } else if (typeof value === 'number') {\n      normalizedValue = value;\n    }\n    if (normalizedValue === 0) {\n      this.remove(node);\n      return true;\n    }\n    return super.add(node, normalizedValue.toString());\n  }\n\n  canAdd(node: HTMLElement, value: string) {\n    return super.canAdd(node, value) || super.canAdd(node, parseInt(value, 10));\n  }\n\n  value(node: HTMLElement) {\n    return parseInt(super.value(node), 10) || undefined; // Don't return NaN\n  }\n}\n\nconst IndentClass = new IndentAttributor('indent', 'ql-indent', {\n  scope: Scope.BLOCK,\n  // @ts-expect-error\n  whitelist: [1, 2, 3, 4, 5, 6, 7, 8],\n});\n\nexport default IndentClass;\n","import Block from '../blots/block.js';\n\nclass Blockquote extends Block {\n  static blotName = 'blockquote';\n  static tagName = 'blockquote';\n}\n\nexport default Blockquote;\n","import Block from '../blots/block.js';\n\nclass Header extends Block {\n  static blotName = 'header';\n  static tagName = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\n\n  static formats(domNode: Element) {\n    return this.tagName.indexOf(domNode.tagName) + 1;\n  }\n}\n\nexport default Header;\n","import Block from '../blots/block.js';\nimport Container from '../blots/container.js';\nimport type Scroll from '../blots/scroll.js';\nimport Quill from '../core/quill.js';\n\nclass ListContainer extends Container {}\nListContainer.blotName = 'list-container';\nListContainer.tagName = 'OL';\n\nclass ListItem extends Block {\n  static create(value: string) {\n    const node = super.create() as HTMLElement;\n    node.setAttribute('data-list', value);\n    return node;\n  }\n\n  static formats(domNode: HTMLElement) {\n    return domNode.getAttribute('data-list') || undefined;\n  }\n\n  static register() {\n    Quill.register(ListContainer);\n  }\n\n  constructor(scroll: Scroll, domNode: HTMLElement) {\n    super(scroll, domNode);\n    const ui = domNode.ownerDocument.createElement('span');\n    const listEventHandler = (e: Event) => {\n      if (!scroll.isEnabled()) return;\n      const format = this.statics.formats(domNode, scroll);\n      if (format === 'checked') {\n        this.format('list', 'unchecked');\n        e.preventDefault();\n      } else if (format === 'unchecked') {\n        this.format('list', 'checked');\n        e.preventDefault();\n      }\n    };\n    ui.addEventListener('mousedown', listEventHandler);\n    ui.addEventListener('touchstart', listEventHandler);\n    this.attachUI(ui);\n  }\n\n  format(name: string, value: string) {\n    if (name === this.statics.blotName && value) {\n      this.domNode.setAttribute('data-list', value);\n    } else {\n      super.format(name, value);\n    }\n  }\n}\nListItem.blotName = 'list';\nListItem.tagName = 'LI';\n\nListContainer.allowedChildren = [ListItem];\nListItem.requiredContainer = ListContainer;\n\nexport { ListContainer, ListItem as default };\n","import Inline from '../blots/inline.js';\n\nclass Bold extends Inline {\n  static blotName = 'bold';\n  static tagName = ['STRONG', 'B'];\n\n  static create() {\n    return super.create();\n  }\n\n  static formats() {\n    return true;\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    if (this.domNode.tagName !== this.statics.tagName[0]) {\n      this.replaceWith(this.statics.blotName);\n    }\n  }\n}\n\nexport default Bold;\n","import Inline from '../blots/inline.js';\n\nclass Link extends Inline {\n  static blotName = 'link';\n  static tagName = 'A';\n  static SANITIZED_URL = 'about:blank';\n  static PROTOCOL_WHITELIST = ['http', 'https', 'mailto', 'tel', 'sms'];\n\n  static create(value: string) {\n    const node = super.create(value) as HTMLElement;\n    node.setAttribute('href', this.sanitize(value));\n    node.setAttribute('rel', 'noopener noreferrer');\n    node.setAttribute('target', '_blank');\n    return node;\n  }\n\n  static formats(domNode: HTMLElement) {\n    return domNode.getAttribute('href');\n  }\n\n  static sanitize(url: string) {\n    return sanitize(url, this.PROTOCOL_WHITELIST) ? url : this.SANITIZED_URL;\n  }\n\n  format(name: string, value: unknown) {\n    if (name !== this.statics.blotName || !value) {\n      super.format(name, value);\n    } else {\n      // @ts-expect-error\n      this.domNode.setAttribute('href', this.constructor.sanitize(value));\n    }\n  }\n}\n\nfunction sanitize(url: string, protocols: string[]) {\n  const anchor = document.createElement('a');\n  anchor.href = url;\n  const protocol = anchor.href.slice(0, anchor.href.indexOf(':'));\n  return protocols.indexOf(protocol) > -1;\n}\n\nexport { Link as default, sanitize };\n","import Inline from '../blots/inline.js';\n\nclass Script extends Inline {\n  static blotName = 'script';\n  static tagName = ['SUB', 'SUP'];\n\n  static create(value: 'super' | 'sub' | (string & {})) {\n    if (value === 'super') {\n      return document.createElement('sup');\n    }\n    if (value === 'sub') {\n      return document.createElement('sub');\n    }\n    return super.create(value);\n  }\n\n  static formats(domNode: HTMLElement) {\n    if (domNode.tagName === 'SUB') return 'sub';\n    if (domNode.tagName === 'SUP') return 'super';\n    return undefined;\n  }\n}\n\nexport default Script;\n","import Inline from '../blots/inline.js';\n\nclass Underline extends Inline {\n  static blotName = 'underline';\n  static tagName = 'U';\n}\n\nexport default Underline;\n","import { EmbedBlot } from 'parchment';\nimport { sanitize } from './link.js';\n\nconst ATTRIBUTES = ['alt', 'height', 'width'];\n\nclass Image extends EmbedBlot {\n  static blotName = 'image';\n  static tagName = 'IMG';\n\n  static create(value: string) {\n    const node = super.create(value) as Element;\n    if (typeof value === 'string') {\n      node.setAttribute('src', this.sanitize(value));\n    }\n    return node;\n  }\n\n  static formats(domNode: Element) {\n    return ATTRIBUTES.reduce(\n      (formats: Record<string, string | null>, attribute) => {\n        if (domNode.hasAttribute(attribute)) {\n          formats[attribute] = domNode.getAttribute(attribute);\n        }\n        return formats;\n      },\n      {},\n    );\n  }\n\n  static match(url: string) {\n    return /\\.(jpe?g|gif|png)$/.test(url) || /^data:image\\/.+;base64/.test(url);\n  }\n\n  static sanitize(url: string) {\n    return sanitize(url, ['http', 'https', 'data']) ? url : '//:0';\n  }\n\n  static value(domNode: Element) {\n    return domNode.getAttribute('src');\n  }\n\n  domNode: HTMLImageElement;\n\n  format(name: string, value: string) {\n    if (ATTRIBUTES.indexOf(name) > -1) {\n      if (value) {\n        this.domNode.setAttribute(name, value);\n      } else {\n        this.domNode.removeAttribute(name);\n      }\n    } else {\n      super.format(name, value);\n    }\n  }\n}\n\nexport default Image;\n","import { BlockEmbed } from '../blots/block.js';\nimport Link from './link.js';\n\nconst ATTRIBUTES = ['height', 'width'];\n\nclass Video extends BlockEmbed {\n  static blotName = 'video';\n  static className = 'ql-video';\n  static tagName = 'IFRAME';\n\n  static create(value: string) {\n    const node = super.create(value) as Element;\n    node.setAttribute('frameborder', '0');\n    node.setAttribute('allowfullscreen', 'true');\n    node.setAttribute('src', this.sanitize(value));\n    return node;\n  }\n\n  static formats(domNode: Element) {\n    return ATTRIBUTES.reduce(\n      (formats: Record<string, string | null>, attribute) => {\n        if (domNode.hasAttribute(attribute)) {\n          formats[attribute] = domNode.getAttribute(attribute);\n        }\n        return formats;\n      },\n      {},\n    );\n  }\n\n  static sanitize(url: string) {\n    return Link.sanitize(url);\n  }\n\n  static value(domNode: Element) {\n    return domNode.getAttribute('src');\n  }\n\n  domNode: HTMLVideoElement;\n\n  format(name: string, value: string) {\n    if (ATTRIBUTES.indexOf(name) > -1) {\n      if (value) {\n        this.domNode.setAttribute(name, value);\n      } else {\n        this.domNode.removeAttribute(name);\n      }\n    } else {\n      super.format(name, value);\n    }\n  }\n\n  html() {\n    const { video } = this.value();\n    return `<a href=\"${video}\">${video}</a>`;\n  }\n}\n\nexport default Video;\n","import Delta from 'quill-delta-es';\nimport { EmbedBlot, Scope } from 'parchment';\nimport Quill from '../core/quill.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport type { Range } from '../core/selection.js';\n\nconst debug = logger('quill:toolbar');\n\ntype Handler = (this: Toolbar, value: any) => void;\n\nexport type ToolbarConfig = Array<\n  string[] | Array<string | Record<string, unknown>>\n>;\nexport interface ToolbarProps {\n  container?: HTMLElement | ToolbarConfig | null;\n  handlers?: Record<string, Handler>;\n  option?: number;\n  module?: boolean;\n  theme?: boolean;\n}\n\nclass Toolbar extends Module<ToolbarProps> {\n  static DEFAULTS: ToolbarProps;\n\n  container?: HTMLElement | null;\n  controls: [string, HTMLElement][];\n  handlers: Record<string, Handler>;\n\n  constructor(quill: Quill, options: Partial<ToolbarProps>) {\n    super(quill, options);\n    if (Array.isArray(this.options.container)) {\n      const container = document.createElement('div');\n      container.setAttribute('role', 'toolbar');\n      addControls(container, this.options.container);\n      quill.container?.parentNode?.insertBefore(container, quill.container);\n      this.container = container;\n    } else if (typeof this.options.container === 'string') {\n      const rootDocument = quill.container.getRootNode() as Document;\n      this.container = rootDocument.querySelector(this.options.container);\n    } else {\n      this.container = this.options.container;\n    }\n    if (!(this.container instanceof HTMLElement)) {\n      debug.error('Container required for toolbar', this.options);\n      return;\n    }\n    this.container.classList.add('ql-toolbar');\n    this.controls = [];\n    this.handlers = {};\n    if (this.options.handlers) {\n      Object.keys(this.options.handlers).forEach((format) => {\n        const handler = this.options.handlers?.[format];\n        if (handler) {\n          this.addHandler(format, handler);\n        }\n      });\n    }\n    Array.from(this.container.querySelectorAll('button, select')).forEach(\n      (input) => {\n        // @ts-expect-error\n        this.attach(input);\n      },\n    );\n    this.quill.on(Quill.events.EDITOR_CHANGE, () => {\n      const [range] = this.quill.selection.getRange(); // quill.getSelection triggers update\n      this.update(range);\n    });\n  }\n\n  addHandler(format: string, handler: Handler) {\n    this.handlers[format] = handler;\n  }\n\n  attach(input: HTMLElement) {\n    let format = Array.from(input.classList).find((className) => {\n      return className.indexOf('ql-') === 0;\n    });\n    if (!format) return;\n    format = format.slice('ql-'.length);\n    if (input.tagName === 'BUTTON') {\n      input.setAttribute('type', 'button');\n    }\n    if (\n      this.handlers[format] == null &&\n      this.quill.scroll.query(format) == null\n    ) {\n      debug.warn('ignoring attaching to nonexistent format', format, input);\n      return;\n    }\n    const eventName = input.tagName === 'SELECT' ? 'change' : 'click';\n    input.addEventListener(eventName, (e) => {\n      let value;\n      if (input.tagName === 'SELECT') {\n        // @ts-expect-error\n        if (input.selectedIndex < 0) return;\n        // @ts-expect-error\n        const selected = input.options[input.selectedIndex];\n        if (selected.hasAttribute('selected')) {\n          value = false;\n        } else {\n          value = selected.value || false;\n        }\n      } else {\n        if (input.classList.contains('ql-active')) {\n          value = false;\n        } else {\n          // @ts-expect-error\n          value = input.value || !input.hasAttribute('value');\n        }\n        e.preventDefault();\n      }\n      this.quill.focus();\n      const [range] = this.quill.selection.getRange();\n      if (this.handlers[format] != null) {\n        this.handlers[format].call(this, value);\n      } else if (\n        // @ts-expect-error\n        this.quill.scroll.query(format).prototype instanceof EmbedBlot\n      ) {\n        value = prompt(`Enter ${format}`); // eslint-disable-line no-alert\n        if (!value) return;\n        this.quill.updateContents(\n          new Delta()\n            // @ts-expect-error Fix me later\n            .retain(range.index)\n            // @ts-expect-error Fix me later\n            .delete(range.length)\n            .insert({ [format]: value }),\n          Quill.sources.USER,\n        );\n      } else {\n        this.quill.format(format, value, Quill.sources.USER);\n      }\n      this.update(range);\n    });\n    this.controls.push([format, input]);\n  }\n\n  update(range: Range | null) {\n    const formats = range == null ? {} : this.quill.getFormat(range);\n    this.controls.forEach((pair) => {\n      const [format, input] = pair;\n      if (input.tagName === 'SELECT') {\n        let option: HTMLOptionElement | null = null;\n        if (range == null) {\n          option = null;\n        } else if (formats[format] == null) {\n          option = input.querySelector('option[selected]');\n        } else if (!Array.isArray(formats[format])) {\n          let value = formats[format];\n          if (typeof value === 'string') {\n            value = value.replace(/\"/g, '\\\\\"');\n          }\n          option = input.querySelector(`option[value=\"${value}\"]`);\n        }\n        if (option == null) {\n          // @ts-expect-error TODO fix me later\n          input.value = ''; // TODO make configurable?\n          // @ts-expect-error TODO fix me later\n          input.selectedIndex = -1;\n        } else {\n          option.selected = true;\n        }\n      } else if (range == null) {\n        input.classList.remove('ql-active');\n        input.setAttribute('aria-pressed', 'false');\n      } else if (input.hasAttribute('value')) {\n        // both being null should match (default values)\n        // '1' should match with 1 (headers)\n        const value = formats[format] as boolean | number | string | object;\n        const isActive =\n          value === input.getAttribute('value') ||\n          (value != null && value.toString() === input.getAttribute('value')) ||\n          (value == null && !input.getAttribute('value'));\n        input.classList.toggle('ql-active', isActive);\n        input.setAttribute('aria-pressed', isActive.toString());\n      } else {\n        const isActive = formats[format] != null;\n        input.classList.toggle('ql-active', isActive);\n        input.setAttribute('aria-pressed', isActive.toString());\n      }\n    });\n  }\n}\nToolbar.DEFAULTS = {};\n\nfunction addButton(container: HTMLElement, format: string, value?: string) {\n  const input = document.createElement('button');\n  input.setAttribute('type', 'button');\n  input.classList.add(`ql-${format}`);\n  input.setAttribute('aria-pressed', 'false');\n  if (value != null) {\n    input.value = value;\n    input.setAttribute('aria-label', `${format}: ${value}`);\n  } else {\n    input.setAttribute('aria-label', format);\n  }\n  container.appendChild(input);\n}\n\nfunction addControls(\n  container: HTMLElement,\n  groups:\n    | (string | Record<string, unknown>)[][]\n    | (string | Record<string, unknown>)[],\n) {\n  if (!Array.isArray(groups[0])) {\n    // @ts-expect-error\n    groups = [groups];\n  }\n  groups.forEach((controls: any) => {\n    const group = document.createElement('span');\n    group.classList.add('ql-formats');\n    controls.forEach((control: any) => {\n      if (typeof control === 'string') {\n        addButton(group, control);\n      } else {\n        const format = Object.keys(control)[0];\n        const value = control[format];\n        if (Array.isArray(value)) {\n          addSelect(group, format, value);\n        } else {\n          addButton(group, format, value);\n        }\n      }\n    });\n    container.appendChild(group);\n  });\n}\n\nfunction addSelect(\n  container: HTMLElement,\n  format: string,\n  values: Array<string | boolean>,\n) {\n  const input = document.createElement('select');\n  input.classList.add(`ql-${format}`);\n  values.forEach((value) => {\n    const option = document.createElement('option');\n    if (value !== false) {\n      option.setAttribute('value', String(value));\n    } else {\n      option.setAttribute('selected', 'selected');\n    }\n    input.appendChild(option);\n  });\n  container.appendChild(input);\n}\n\nToolbar.DEFAULTS = {\n  container: null,\n  handlers: {\n    clean() {\n      const range = this.quill.getSelection();\n      if (range == null) return;\n      if (range.length === 0) {\n        const formats = this.quill.getFormat();\n        Object.keys(formats).forEach((name) => {\n          // Clean functionality in existing apps only clean inline formats\n          if (this.quill.scroll.query(name, Scope.INLINE) != null) {\n            this.quill.format(name, false, Quill.sources.USER);\n          }\n        });\n      } else {\n        this.quill.removeFormat(range.index, range.length, Quill.sources.USER);\n      }\n    },\n    direction(value) {\n      const { align } = this.quill.getFormat();\n      if (value === 'rtl' && align == null) {\n        this.quill.format('align', 'right', Quill.sources.USER);\n      } else if (!value && align === 'right') {\n        this.quill.format('align', false, Quill.sources.USER);\n      }\n      this.quill.format('direction', value, Quill.sources.USER);\n    },\n    indent(value) {\n      const range = this.quill.getSelection();\n      // @ts-expect-error\n      const formats = this.quill.getFormat(range);\n      // @ts-expect-error\n      const indent = parseInt(formats.indent || 0, 10);\n      if (value === '+1' || value === '-1') {\n        let modifier = value === '+1' ? 1 : -1;\n        if (formats.direction === 'rtl') modifier *= -1;\n        this.quill.format('indent', indent + modifier, Quill.sources.USER);\n      }\n    },\n    link(value) {\n      if (value === true) {\n        value = prompt('Enter link URL:'); // eslint-disable-line no-alert\n      }\n      this.quill.format('link', value, Quill.sources.USER);\n    },\n    list(value) {\n      const range = this.quill.getSelection();\n      // @ts-expect-error\n      const formats = this.quill.getFormat(range);\n      if (value === 'check') {\n        if (formats.list === 'checked' || formats.list === 'unchecked') {\n          this.quill.format('list', false, Quill.sources.USER);\n        } else {\n          this.quill.format('list', 'unchecked', Quill.sources.USER);\n        }\n      } else {\n        this.quill.format('list', value, Quill.sources.USER);\n      }\n    },\n  },\n};\n\nexport { Toolbar as default, addControls };\n","import Quill from './core.js';\nimport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n} from './core.js';\n\nimport { AlignClass, AlignStyle } from './formats/align.js';\nimport {\n  DirectionAttribute,\n  DirectionClass,\n  DirectionStyle,\n} from './formats/direction.js';\nimport Indent from './formats/indent.js';\n\nimport Blockquote from './formats/blockquote.js';\nimport Header from './formats/header.js';\nimport List from './formats/list.js';\n\nimport { BackgroundClass, BackgroundStyle } from './formats/background.js';\nimport { ColorClass, ColorStyle } from './formats/color.js';\nimport { FontClass, FontStyle } from './formats/font.js';\nimport { SizeClass, SizeStyle } from './formats/size.js';\n\nimport Bold from './formats/bold.js';\nimport Italic from './formats/italic.js';\nimport Link from './formats/link.js';\nimport Script from './formats/script.js';\nimport Strike from './formats/strike.js';\nimport Underline from './formats/underline.js';\n\n// import Formula from './formats/formula.js';\nimport Image from './formats/image.js';\nimport Video from './formats/video.js';\n\nimport CodeBlock, { Code as InlineCode } from './formats/code.js';\n\n// import Syntax from './modules/syntax.js';\n// import Table from './modules/table.js';\nimport Toolbar from './modules/toolbar.js';\n\n// import Icons from './ui/icons.js';\n// import Picker from './ui/picker.js';\n// import ColorPicker from './ui/color-picker.js';\n// import IconPicker from './ui/icon-picker.js';\n// import Tooltip from './ui/tooltip.js';\n\n// import BubbleTheme from './themes/bubble.js';\n// import SnowTheme from './themes/snow.js';\n\nQuill.register(\n  {\n    'attributors/attribute/direction': DirectionAttribute,\n\n    'attributors/class/align': AlignClass,\n    'attributors/class/background': BackgroundClass,\n    'attributors/class/color': ColorClass,\n    'attributors/class/direction': DirectionClass,\n    'attributors/class/font': FontClass,\n    'attributors/class/size': SizeClass,\n\n    'attributors/style/align': AlignStyle,\n    'attributors/style/background': BackgroundStyle,\n    'attributors/style/color': ColorStyle,\n    'attributors/style/direction': DirectionStyle,\n    'attributors/style/font': FontStyle,\n    'attributors/style/size': SizeStyle,\n  },\n  true,\n);\n\nQuill.register(\n  {\n    'formats/align': AlignClass,\n    'formats/direction': DirectionClass,\n    'formats/indent': Indent,\n\n    'formats/background': BackgroundStyle,\n    'formats/color': ColorStyle,\n    'formats/font': FontClass,\n    'formats/size': SizeClass,\n\n    'formats/blockquote': Blockquote,\n    'formats/code-block': CodeBlock,\n    'formats/header': Header,\n    'formats/list': List,\n\n    'formats/bold': Bold,\n    'formats/code': InlineCode,\n    'formats/italic': Italic,\n    'formats/link': Link,\n    'formats/script': Script,\n    'formats/strike': Strike,\n    'formats/underline': Underline,\n\n    // 'formats/formula': Formula,\n    'formats/image': Image,\n    'formats/video': Video,\n\n    // 'modules/syntax': Syntax,\n    // 'modules/table': Table,\n    'modules/toolbar': Toolbar,\n\n    // 'themes/bubble': BubbleTheme,\n    // 'themes/snow': SnowTheme,\n\n    // 'ui/icons': Icons,\n    // 'ui/picker': Picker,\n    // 'ui/icon-picker': IconPicker,\n    // 'ui/color-picker': ColorPicker,\n    // 'ui/tooltip': Tooltip,\n  },\n  true,\n);\n\nexport {\n  AttributeMap,\n  Delta,\n  Module,\n  Op,\n  OpIterator,\n  Parchment,\n  Range,\n} from './core.js';\nexport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n};\n\nexport default Quill;\n","import Bold from './bold.js';\n\nclass Italic extends Bold {\n  static blotName = 'italic';\n  static tagName = ['EM', 'I'];\n}\n\nexport default Italic;\n","import Bold from './bold.js';\n\nclass Strike extends Bold {\n  static blotName = 'strike';\n  static tagName = ['S', 'STRIKE'];\n}\n\nexport default Strike;\n"],"names":["root","factory","exports","module","define","amd","self","Block","BlockBlot","cache","delta","this","blot","filter","arguments","length","undefined","descendants","LeafBlot","reduce","leaf","insert","value","bubbleFormats","Delta","blockDelta","deleteAt","index","super","formatAt","name","scroll","query","Scope","BLOCK","format","Math","min","insertAt","def","lines","split","text","shift","children","tail","block","lineIndex","line","insertBefore","ref","head","Break","remove","moveChildren","target","optimize","context","path","removeChild","child","force","clone","parent","next","blotName","tagName","defaultChild","allowedChildren","Inline","EmbedBlot","TextBlot","BlockEmbed","attach","attributes","AttributorStore","domNode","formats","values","attribute","BLOCK_ATTRIBUTE","pop","blocks","map","create","forEach","statics","scope","BLOCK_BLOT","prev","Container","ContainerBlot","Cursor","static","constructor","selection","textNode","document","createTextNode","CONTENTS","appendChild","savedLength","detach","offset","node","position","data","restore","composing","range","getNativeRange","lastChild","parentNode","prevTextBlot","prevTextLength","nextTextBlot","nextText","newText","join","mergedTextBlot","newTextNode","remapOffset","start","end","startNode","startOffset","endNode","endOffset","update","mutations","some","mutation","type","isolate","unwrap","GUARD_TEXT","Embed","contentNode","createElement","setAttribute","Array","from","childNodes","childNode","leftGuard","rightGuard","prevLength","InlineBlot","Text","compare","other","selfIndex","order","indexOf","otherIndex","BLOT","wrap","entityMap","escapeText","replace","s","isLine","isUpdatable","updateContent","Scroll","ScrollBlot","registry","_ref","emitter","batch","enable","addEventListener","e","handleDragStart","batchStart","isArray","batchEnd","emitMount","emit","Emitter","events","SCROLL_BLOT_MOUNT","emitUnmount","SCROLL_BLOT_UNMOUNT","emitEmbedUpdate","change","SCROLL_EMBED_UPDATE","first","last","enabled","endsWith","slice","embed","INLINE_BLOT","wrapper","insertContents","renderBlocks","deltaToRenderBlocks","concat","shouldInsertNewlineChar","descendant","key","insertInlineContents","newlineCharLength","lineEndIndex","AttributeMap","diff","Object","keys","refBlot","refBlotOffset","find","renderBlock","createBlock","blockEmbed","isEnabled","getAttribute","Number","MAX_VALUE","getLines","blotIndex","blotLength","lengthLeft","forEachAt","childIndex","childLength","push","SCROLL_OPTIMIZE","source","sources","USER","observer","takeRecords","_ref2","SCROLL_BEFORE_UPDATE","SCROLL_UPDATE","updateEmbedAt","b","event","preventDefault","currentBlockDelta","op","splitted","INLINE","entries","_ref3","_ref4","inlineContents","Op","History","Module","delay","maxStack","userOnly","lastRecorded","ignoreChange","stack","undo","redo","currentRange","quill","options","on","Quill","EDITOR_CHANGE","eventName","oldValue","SELECTION_CHANGE","SILENT","TEXT_CHANGE","transform","record","transformRange","keyboard","addBinding","shortKey","bind","shiftKey","test","navigator","platform","inputType","dest","item","base","getContents","inverseDelta","invert","updateContents","restoreSelection","clear","cutoff","changeDelta","oldDelta","ops","undoDelta","undoRange","timestamp","Date","now","compose","transformStack","stackItem","setSelection","deleteLength","delete","changeIndex","lastOp","attr","endsWithNewlineChange","getLastChangeIndex","remoteDelta","i","oldItem","splice","transformPosition","Uploader","native","caretRangeFromPoint","clientX","clientY","caretPositionFromPoint","createRange","setStart","offsetNode","setEnd","normalized","normalizeNative","normalizedToRange","dataTransfer","files","upload","uploads","file","mimetypes","includes","handler","call","DEFAULTS","promises","Promise","resolve","reader","FileReader","onload","result","readAsDataURL","all","then","images","image","retain","INSERT_TYPES","Input","handleBeforeInput","userAgent","COMPOSITION_BEFORE_START","handleCompositionStart","deleteRange","replaceText","getFormat","composition","isComposing","defaultPrevented","staticRange","getTargetRanges","collapsed","types","getData","getPlainTextFromInputEvent","getSelection","isMac","UINode","isListening","selectionChangeDeadline","handleArrowKeys","handleNavigationShortcuts","ParentBlot","uiNode","isRTL","getComputedStyle","ctrlKey","canMoveCaretBeforeUINode","ensureListeningToSelectionChange","listener","handleSelectionChange","once","getRangeAt","startContainer","newRange","setStartAfter","setEndAfter","removeAllRanges","addRange","register","Clipboard","Keyboard","WrappedListener","EventEmitter","_events","_eventsCount","TypeError","wrappedListener","clearEvent","eventNames","Reflect","ownKeys","listeners","handlers","listenerCount","args","removeListener","wrappedListeners","removeAllListeners","off","addListener","debug","logger","EMITTERS","_len","_key","em","handleDOM","COMPOSITION_START","COMPOSITION_BEFORE_END","COMPOSITION_END","API","domListeners","error","connect","disconnect","_len2","_key2","log","_len3","_key3","composedPath","containsNode","getRootNode","contains","host","listenDOM","levels","level","method","console","namespace","ns","newLevel","ASCII","convertListHTML","items","lastIndent","endTag","getListType","indent","rest","tag","convertHTML","previousType","isRoot","html","replaceAll","match","repeat","list","parts","outerHTML","innerHTML","Element","combineFormats","combined","merged","combinedValue","normalizeDelta","normalizedDelta","shiftRange","amount","Range","getDelta","applyDelta","scrollLength","deleteDelta","splitOpLines","isImplicitNewlinePrepended","isImplicitNewlineAppended","assign","isInlineEmbed","prependedLength","addedLength","deleteText","formatLine","max","cloneDeep","formatText","leaves","lineFormats","leafFormats","blots","getHTML","lineOffset","lineLength","getText","contents","insertEmbed","insertText","isBlank","removeFormat","suffixLength","suffix","selectionInfo","textBlot","CursorBlot","oldText","relativeSelectionInfo","oldRange","isEqual","WeakMap","setupListeners","queueMicrotask","handleCompositionEnd","Node","getElementRect","element","rect","getBoundingClientRect","scaleX","abs","width","offsetWidth","scaleY","height","offsetHeight","top","right","left","clientWidth","bottom","clientHeight","paddingValueToInt","number","parseInt","isNaN","getScrollDistance","targetStart","targetEnd","scrollStart","scrollEnd","scrollPaddingStart","scrollPaddingEnd","CORE_FORMATS","globalRegistry","Parchment","uiClass","bounds","modules","clipboard","history","uploader","placeholder","readOnly","theme","parchment","Theme","limit","bubble","instances","get","import","imports","overwrite","attrName","warn","startsWith","container","containerOrSelector","resolveSelector","Error","quillModuleDefaults","quillDefaults","themeModuleDefaults","themeDefaults","userModuleOptions","expandModuleConfig","toolbar","config","omitUndefinedValuesFromOptions","createRegistryWithFormats","sourceRegistry","Registry","coreBlot","iterations","requiredContainer","modulesWithDefaults","moduleClass","expandConfig","trim","classList","add","set","addContainer","scrollBlotName","editor","Editor","Selection","Composition","addModule","init","toggle","lastRange","getRange","modify","convert","setContents","disable","allowReadOnlyEdits","refNode","className","blur","setRange","overload","editReadOnly","modifier","focus","preventScroll","scrollSelectionIntoView","hasFocus","rangeToNative","savedRange","setNativeRange","getBounds","containerBounds","getLength","getIndex","getLeaf","getLine","getModule","getSemanticHTML","scrollRectIntoView","targetRect","ownerDocument","current","isDocumentBody","body","bounding","window","visualViewport","documentElement","style","scrollDistanceX","scrollPaddingLeft","scrollPaddingRight","scrollDistanceY","scrollPaddingTop","scrollPaddingBottom","defaultView","scrollBy","scrollLeft","scrollTop","scrolledLeft","scrolledTop","parentElement","scrollIntoView","delete1","applied","delete2","setText","selector","querySelector","expanded","obj","fromEntries","entry","lengthOrSource","pos","getNativeSelection","rootNode","mouseDown","rootDocument","cursor","lastNative","handleComposition","handleDragging","setTimeout","triggeredByTyping","ignored","nativeRange","after","nextLine","side","anchorNode","getComposedRanges","ShadowRoot","info","isConnected","doc","activeElement","positions","indexes","endContainer","getPosition","inclusive","leafOffset","setBaseAndExtent","default","ModuleClass","JSON","parse","stringify","isPrimitive","obj1","obj2","whitelist","AlignAttribute","Attributor","AlignClass","ClassAttributor","AlignStyle","StyleAttributor","BackgroundClass","BackgroundStyle","ColorAttributor","CodeBlockContainer","code","innerText","CodeBlock","Code","component","toString","ColorClass","ColorStyle","DirectionAttribute","DirectionClass","DirectionStyle","FontClass","FontStyleAttributor","FontStyle","SizeClass","SizeStyle","normalWeightRegexp","blockTagNames","isBlockElement","ignoreRegexp","idRegexp","indentRegexp","NORMALIZERS","msoList","querySelectorAll","others","listItems","parseListItem","idMatch","id","indentMatch","typeRegexp","RegExp","typeMatch","parsed","childListItems","nextElementSibling","ul","listItem","li","replaceChild","normalizeListItem","fragment","createDocumentFragment","append","normalizeFontWeight","br","previousElementSibling","normalizeEmptyLines","CLIPBOARD_CONFIG","TEXT_NODE","isPre","isBetweenInlineElements","previousSibling","nextSibling","matchNewline","deltaEndsWith","ELEMENT_NODE","prototype","applyFormat","classes","styles","ATTRIBUTE","ATTRIBUTE_ATTRIBUTORS","keyName","STYLE_ATTRIBUTORS","newDelta","fontStyle","italic","textDecoration","underline","strike","fontWeight","bold","_ref5","parseFloat","textIndent","composed","checkedAttr","table","createMatchAlias","memo","matchers","onCaptureCopy","onCapturePaste","matcher","addMatcher","normalizeHTML","normalize","normalizeExternalHTML","DOMParser","parseFromString","nodeMatches","elementMatchers","textMatchers","prepareMatching","traverse","dangerouslyPasteHTML","paste","isCut","onCopy","clipboardData","setData","normalizeURIList","urlList","url","childElementCount","firstElementChild","onPaste","pastedDelta","pair","has","matches","endText","toLowerCase","preNodes","nodeType","childrenDelta","reducedDelta","_node","HTMLParagraphElement","firstChild","SHORTKEY","evt","binding","which","bindings","handleEnter","metaKey","altKey","handleBackspace","handleDelete","prefix","handleDeleteRange","listen","keyBinding","singleBinding","keyCode","leafStart","offsetStart","leafEnd","offsetEnd","prefixText","suffixText","curContext","empty","every","curFormats","prevFormats","formatDelta","nextFormats","defaultOptions","makeFormatHandler","outdent","makeCodeBlockHandler","tab","header","row","cell","getTable","_table","tableSide","blockquote","numLines","cur","makeEmbedArrowHandler","makeTableArrowHandler","TAB","textContent","up","targetRow","targetCell","targetLine","firstFormats","lastFormats","cb","mod","__create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","hasOwnProperty","import_fast_diff","isNodeMode","to","except","desc","__copyProps","enumerable","__esModule","__toESM","module2","DIFF_DELETE","diff_main","text1","text2","cursor_pos","cleanup","_fix_unicode","editdiff","oldLength","newLength","oldCursor","oldBefore","oldAfter","maybeNewCursor","newCursor","newBefore","newAfter","prefixLength","oldPrefix","newPrefix","make_edit_splice","oldSuffix","newSuffix","find_cursor_edit_diff","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","longtext","shorttext","hm","diff_halfMatchI_","longtext2","shorttext2","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","floor","j","best_common","text1_a","text1_b","text2_a","text2_b","hm1","ceil","hm2","diff_halfMatch_","mid_common","diffs_a","diffs_b","text1_length","text2_length","max_d","v_offset","v_length","v1","v2","x","front","k1start","k1end","k2start","k2end","d","k1","k1_offset","y1","x1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","diff_bisect_","diff_compute_","unshift","diff_cleanupMerge","changes","equalities","equalitiesLength","lastequality","pointer","length_insertions1","length_deletions1","length_insertions2","length_deletions2","diff_cleanupSemanticScore_","one","two","char1","char2","nonAlphaNumeric1","nonAlphaNumericRegex_","nonAlphaNumeric2","whitespace1","whitespaceRegex_","whitespace2","lineBreak1","linebreakRegex_","lineBreak2","blankLine1","blanklineEndRegex_","blankLine2","blanklineStartRegex_","equality1","edit","equality2","commonOffset","commonString","bestEquality1","bestEdit","bestEquality2","bestScore","score","diff_cleanupSemanticLossless","deletion","insertion","overlap_length1","diff_commonOverlap_","overlap_length2","diff_cleanupSemantic","y","text1a","text2a","text1b","text2b","diffsb","pointermin","pointermax","pointermid","pointerstart","is_surrogate_pair_start","charCodeAt","text_length","best","pattern","found","pointerend","is_surrogate_pair_end","fix_unicode","count_delete","count_insert","text_delete","text_insert","previous_equality","ends_with_pair_start","stray","k","starts_with_pair_end","n","charCode","str","before","oldMiddle","newMiddle","tuples","ret","remove_empty_tuples","diff2","INSERT","DELETE","EQUAL","cloneDeep_default","AttributeMap2","deepEqual_default","deepEqual","a","keepNull","copy","attrs","baseInverted","priority","AttributeMap_default","Op_default","Iterator","hasNext","peekLength","Infinity","nextOp","opLength","retOp","substr","peek","peekType","NULL_CHARACTER","String","fromCharCode","getEmbedTypeAndData","embedType","_Delta","registerEmbed","unregisterEmbed","getHandler","inverted","arg","newOp","chop","predicate","partition","passed","failed","initialValue","changeLength","elem","iter","thisIter","otherIter","firstOther","firstLeft","thisOp","otherOp","action","thisData","otherData","strings","retDelta","diffResult","eachLine","newline","baseIndex","baseOp","opData","baseOpData","transformedData","nextType","Delta_default","TYPE","LEVEL","INLINE_ATTRIBUTE","ANY","attributeBit","canAdd","removeAttribute","ParchmentError","message","tags","input","blotClass","inline","definitions","definition","isBlot","isAttr","toUpperCase","camelize","part","build","move","rawValue","cloneNode","_context","replaceWith","replacement","_force","_mutations","ShadowBlot","_domNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","_inclusive","LinkedList","nodes","at","iterator","curNode","callback","curIndex","curLength","makeAttachedBlot","attachUI","reverse","err","criteria","enforceAllowedChildren","done","splitAfter","childBlot","refDomNode","targetParent","_length","addedNodes","removedNodes","sort","DOCUMENT_POSITION_FOLLOWING","prop","checkMerge","_scroll","OBSERVER_CONFIG","characterData","characterDataOldValue","childList","subtree","MutationObserver","observe","mutationsMap","records","mark","markParent","remaining","grandChild","splitText","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","o","r","Symbol","toStringTag","IndentAttributor","normalizedValue","Blockquote","Header","ListContainer","ListItem","ui","listEventHandler","Bold","Link","sanitize","PROTOCOL_WHITELIST","SANITIZED_URL","protocols","anchor","href","protocol","Script","Underline","ATTRIBUTES","Image","hasAttribute","Video","video","Toolbar","groups","controls","group","control","addButton","option","addSelect","addControls","HTMLElement","addHandler","selectedIndex","selected","prompt","isActive","clean","direction","align","link","Indent","List","InlineCode"],"sourceRoot":""}