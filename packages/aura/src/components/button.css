:where(:root, :host) {
  --vaadin-button-shadow: 0 1px 4px -1px hsla(0, 0%, 0%, 0.07);
}

:is(vaadin-button, vaadin-menu-bar-button, vaadin-drawer-toggle) {
  transition: scale 180ms;
  position: relative;
  --_accent: light-dark(
    oklch(from var(--aura-accent-light) calc(l + 0.2) c h / min(0.3, c / 2)),
    oklch(from var(--aura-accent-dark) calc(l - 0.2) c h / min(0.3, c / 2))
  );
  --_accent-border: light-dark(
    oklch(from var(--aura-accent-light) l calc(c / 2) h / calc(min(0.15, 0.1 + c / 2) + 0.1 * var(--aura-contrast))),
    oklch(from var(--aura-accent-dark) l calc(c / 2) h / calc(min(0.15, 0.1 + c / 2) + 0.1 * var(--aura-contrast)))
  );
  --_background: linear-gradient(var(--_accent), var(--_accent)) var(--aura-surface) padding-box;
}

:is(vaadin-button, vaadin-menu-bar-button, vaadin-drawer-toggle):where(:not([theme~='tertiary'])) {
  --aura-surface-level: 6;
  --aura-surface-opacity: 0.3;
  box-shadow: var(--vaadin-button-shadow);
}

:is(vaadin-button, vaadin-menu-bar-button, vaadin-drawer-toggle):not([theme~='primary'], [theme~='tertiary']) {
  background: var(--vaadin-button-background, var(--_background));
  --vaadin-button-border-color: var(--_accent-border);
}

:is(vaadin-button, vaadin-menu-bar-button, vaadin-drawer-toggle):where(:not([theme~='primary'])) {
  outline-offset: calc(var(--vaadin-button-border-width, 1px) * -1);
  --vaadin-button-text-color: var(--aura-accent-text);
}

/*
Increase padding, but only for buttons that don't have an icon in the default slot.
Buttons that place an icon in the default slot are assumed to be icon-only buttons.
*/
/* prettier-ignore */
:is(vaadin-button, vaadin-menu-bar-button, vaadin-drawer-toggle):not(:has(:is(vaadin-icon, svg, i[class*='fa-'], vaadin-avatar):not([slot]))) {
  --vaadin-button-padding: round(var(--vaadin-padding-s) / 1.4, 1px)
    max(var(--vaadin-padding-m), round(var(--vaadin-radius-m) / 1.5, 1px));
}

/* Decrease padding when an icon is placed in the prefix or suffix slot */
:is(vaadin-button, vaadin-menu-bar-button):has([slot='prefix']:is(vaadin-icon, svg, i[class*='fa-'], vaadin-avatar)),
vaadin-drawer-toggle:empty {
  padding-inline-start: max(var(--vaadin-padding-s), round(var(--vaadin-radius-m) / 1.75, 1px));
}

/* prettier-ignore */
:is(vaadin-button, vaadin-menu-bar-button, vaadin-drawer-toggle):has([slot='suffix']:is(vaadin-icon, svg, i[class*='fa-'], vaadin-avatar)),
vaadin-drawer-toggle:empty,
vaadin-menu-bar-button[aria-haspopup='true']:not([slot='overflow']) {
  padding-inline-end: max(var(--vaadin-padding-s), round(var(--vaadin-radius-m) / 1.75, 1px));
}

:is(vaadin-button, vaadin-menu-bar-button, vaadin-drawer-toggle):where([theme~='primary']) {
  outline-offset: 2px;
  --vaadin-button-font-weight: var(--aura-font-weight-semibold);
  --vaadin-button-text-color: var(--aura-accent-contrast);
  --vaadin-button-background: var(--aura-accent-color);
}

:is(vaadin-button, vaadin-menu-bar-button, vaadin-drawer-toggle)[disabled][theme~='primary']::part(label) {
  color: color-mix(in srgb, currentColor 50%, transparent);
}

:is(vaadin-button, vaadin-menu-bar-button, vaadin-drawer-toggle):not([disabled])::before {
  content: '';
  position: absolute;
  inset: calc(var(--vaadin-button-border-width, 1px) * -1);
  pointer-events: none;
  border-radius: inherit;
  background-color: currentColor;
  opacity: 0;
  transition:
    opacity 100ms,
    background-color 100ms;
}

@supports (color: hsl(0 0 0)) {
  :is(vaadin-button, vaadin-menu-bar-button, vaadin-drawer-toggle):not([disabled])::before {
    background-color: oklch(from currentColor calc(l + 0.4 - c) c h / calc(1 - l / 2));
  }
}

@media (any-hover: hover) {
  :is(vaadin-button, vaadin-menu-bar-button, vaadin-drawer-toggle):hover:not([disabled], [active])::before {
    opacity: 0.03;
  }

  /* prettier-ignore */
  :is(vaadin-button, vaadin-menu-bar-button, vaadin-drawer-toggle)[theme~='primary']:hover:not([disabled], [active])::before {
    opacity: 0.12;
  }
}

@media (min-resolution: 2x) {
  /* prettier-ignore */
  :is(vaadin-button, vaadin-menu-bar-button[first-visible][last-visible], vaadin-drawer-toggle)[active]:not([disabled], [aria-disabled='true']) {
    scale: 0.98;
    transition-duration: 50ms;
  }
}

:is(vaadin-button, vaadin-menu-bar-button, vaadin-drawer-toggle)[active]:not([disabled])::before {
  transition-duration: 0s;
  opacity: 0.08;
  background: oklch(from currentColor min(c, 1 - l + c) calc(c * 0.9) h);
}

:is(vaadin-button, vaadin-menu-bar-button, vaadin-drawer-toggle)[theme~='primary'][active]:not([disabled])::before {
  opacity: 0.16;
}

@container style(--_gap: 0) {
  vaadin-menu-bar-button:not(:first-of-type) {
    border-inline-start-color: transparent;
  }
}

/* Color variants */

:is(vaadin-button, vaadin-menu-bar-button, vaadin-drawer-toggle):where(:not([theme~='accent'])) {
  --aura-accent-light: var(--aura-text-light);
  --aura-accent-dark: var(--aura-text-dark);
}

:is(vaadin-button, vaadin-menu-bar-button, vaadin-drawer-toggle):is([theme~='danger'], [theme~='error']) {
  --aura-accent-light: var(--aura-red);
  --aura-accent-dark: var(--aura-red);
}

:is(vaadin-button, vaadin-menu-bar-button, vaadin-drawer-toggle)[theme~='success'] {
  --aura-accent-light: var(--aura-green);
  --aura-accent-dark: var(--aura-green);
}
