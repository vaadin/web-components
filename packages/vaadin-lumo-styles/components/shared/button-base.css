:host {
  /* Sizing */
  --lumo-button-size: var(--lumo-size-m);
  min-width: var(--vaadin-button-min-width, calc(var(--_button-size) * 2));
  height: var(--_button-size);
  padding: var(--vaadin-button-padding, 0 calc(var(--_button-size) / 3 + var(--lumo-border-radius-m) / 2));
  margin: var(--vaadin-button-margin, var(--lumo-space-xs) 0);
  box-sizing: border-box;
  /* Style */
  font-family: var(--lumo-font-family);
  font-size: var(--vaadin-button-font-size, var(--lumo-font-size-m));
  font-weight: var(--vaadin-button-font-weight, 500);
  color: var(--_lumo-button-text-color);
  background: var(--_lumo-button-background);
  border: var(--vaadin-button-border, none);
  border-radius: var(--vaadin-button-border-radius, var(--lumo-border-radius-m));
  cursor: var(--lumo-clickable-cursor);
  -webkit-tap-highlight-color: transparent;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  flex-shrink: 0;
  --_button-size: var(--vaadin-button-height, var(--lumo-button-size));
  --_focus-ring-color: var(--vaadin-focus-ring-color, var(--lumo-primary-color-50pct));
  --_focus-ring-width: var(--vaadin-focus-ring-width, 2px);
  /* Used by notification */
  --_lumo-button-background: var(--vaadin-button-background, var(--lumo-contrast-5pct));
  --_lumo-button-text-color: var(--vaadin-button-text-color, var(--lumo-primary-text-color));
  --_lumo-button-primary-background: var(--vaadin-button-primary-background, var(--lumo-primary-color));
  --_lumo-button-primary-text-color: var(--vaadin-button-primary-text-color, var(--lumo-primary-contrast-color));
}

/* For interaction states */
:host::before,
:host::after {
  content: '';
  /* We rely on the host always being relative */
  position: absolute;
  z-index: 1;
  inset: 0;
  background-color: currentColor;
  border-radius: inherit;
  opacity: 0;
  pointer-events: none;
}

/* Hover */

@media (any-hover: hover) {
  :host(:not([disabled]):hover)::before {
    opacity: 0.02;
  }
}

/* Active */

:host::after {
  transition:
    opacity 1.4s,
    transform 0.1s;
  filter: blur(8px);
}

:host([active])::before {
  opacity: 0.05;
  transition-duration: 0s;
}

:host([active])::after {
  opacity: 0.1;
  transition-duration: 0s, 0s;
  transform: scale(0);
}

/* Keyboard focus */
:host([focus-ring]) {
  box-shadow:
    0 0 0 calc(1px * var(--_focus-ring-gap-on, 0)) var(--_focus-ring-gap-color, var(--lumo-base-color)),
    0 0 0 calc(var(--_focus-ring-width) + 1px * var(--_focus-ring-gap-on, 0)) var(--_focus-ring-color);
}

:host([disabled]) {
  color: var(--lumo-disabled-text-color);
}
